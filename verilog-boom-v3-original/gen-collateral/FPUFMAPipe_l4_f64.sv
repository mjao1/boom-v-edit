// Generated by CIRCT unknown git version

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module FPUFMAPipe_l4_f64(	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
  input         clock,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
  input         reset,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
  input         io_in_valid,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  input         io_in_bits_ren3,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  input         io_in_bits_swap23,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  input  [2:0]  io_in_bits_rm,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  input  [1:0]  io_in_bits_fmaCmd,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  input  [64:0] io_in_bits_in1,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  input  [64:0] io_in_bits_in2,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  input  [64:0] io_in_bits_in3,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  output        io_out_valid,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  output [64:0] io_out_bits_data,	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
  output [4:0]  io_out_bits_exc	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
);

  wire [64:0] _fma_io_out;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:719:19]
  wire [4:0]  _fma_io_exceptionFlags;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:719:19]
  wire        _fma_io_validout;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:719:19]
  reg         valid;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:707:22]
  reg  [2:0]  in_rm;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
  reg  [1:0]  in_fmaCmd;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
  reg  [64:0] in_in1;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
  reg  [64:0] in_in2;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
  reg  [64:0] in_in3;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
  reg         io_out_pipe_v;	// @[src/main/scala/chisel3/util/Valid.scala:141:24]
  reg  [64:0] io_out_pipe_b_data;	// @[src/main/scala/chisel3/util/Valid.scala:142:26]
  reg  [4:0]  io_out_pipe_b_exc;	// @[src/main/scala/chisel3/util/Valid.scala:142:26]
  always @(posedge clock) begin	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
    valid <= io_in_valid;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:707:22]
    if (io_in_valid) begin	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:702:14]
      in_rm <= io_in_bits_rm;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
      in_fmaCmd <= io_in_bits_fmaCmd;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
      in_in1 <= io_in_bits_in1;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
      in_in2 <= io_in_bits_swap23 ? 65'h8000000000000000 : io_in_bits_in2;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15, :714:8, :715:{23,32}]
      in_in3 <= io_in_bits_ren3 | io_in_bits_swap23 ? io_in_bits_in3 : (io_in_bits_in1 ^ io_in_bits_in2) & 65'h10000000000000000;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15, :711:{32,50}, :714:8, :716:{21,37,46}]
    end
    if (_fma_io_validout) begin	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:719:19]
      io_out_pipe_b_data <= ({65{_fma_io_out[63:61] != 3'h7}} | 65'h1EFEFFFFFFFFFFFFF) & _fma_io_out;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:249:{25,56}, :414:10, :719:19, src/main/scala/chisel3/util/Valid.scala:142:26]
      io_out_pipe_b_exc <= _fma_io_exceptionFlags;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:719:19, src/main/scala/chisel3/util/Valid.scala:142:26]
    end
    if (reset)	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
      io_out_pipe_v <= 1'h0;	// @[src/main/scala/chisel3/util/Valid.scala:141:24]
    else	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
      io_out_pipe_v <= _fma_io_validout;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:719:19, src/main/scala/chisel3/util/Valid.scala:141:24]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
      `FIRRTL_BEFORE_INITIAL	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:9];	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
    initial begin	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
        `INIT_RANDOM_PROLOG_	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
        for (logic [3:0] i = 4'h0; i < 4'hA; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
        end	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
        valid = _RANDOM[4'h0][0];	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, :707:22]
        in_rm = _RANDOM[4'h0][22:20];	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, :707:22, :708:15]
        in_fmaCmd = _RANDOM[4'h0][24:23];	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, :707:22, :708:15]
        in_in1 = {_RANDOM[4'h0][31:29], _RANDOM[4'h1], _RANDOM[4'h2][29:0]};	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, :707:22, :708:15]
        in_in2 = {_RANDOM[4'h2][31:30], _RANDOM[4'h3], _RANDOM[4'h4][30:0]};	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, :708:15]
        in_in3 = {_RANDOM[4'h4][31], _RANDOM[4'h5], _RANDOM[4'h6]};	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, :708:15]
        io_out_pipe_v = _RANDOM[4'h7][0];	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, src/main/scala/chisel3/util/Valid.scala:141:24]
        io_out_pipe_b_data = {_RANDOM[4'h7][31:1], _RANDOM[4'h8], _RANDOM[4'h9][1:0]};	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, src/main/scala/chisel3/util/Valid.scala:141:24, :142:26]
        io_out_pipe_b_exc = _RANDOM[4'h9][6:2];	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, src/main/scala/chisel3/util/Valid.scala:142:26]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
      `FIRRTL_AFTER_INITIAL	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  MulAddRecFNPipe_l2_e11_s53 fma (	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:719:19]
    .clock             (clock),
    .reset             (reset),
    .io_validin        (valid),	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:707:22]
    .io_op             (in_fmaCmd),	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
    .io_a              (in_in1),	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
    .io_b              (in_in2),	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
    .io_c              (in_in3),	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
    .io_roundingMode   (in_rm),	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:708:15]
    .io_out            (_fma_io_out),
    .io_exceptionFlags (_fma_io_exceptionFlags),
    .io_validout       (_fma_io_validout)
  );	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:719:19]
  assign io_out_valid = io_out_pipe_v;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, src/main/scala/chisel3/util/Valid.scala:141:24]
  assign io_out_bits_data = io_out_pipe_b_data;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, src/main/scala/chisel3/util/Valid.scala:142:26]
  assign io_out_bits_exc = io_out_pipe_b_exc;	// @[generators/rocket-chip/src/main/scala/tile/FPU.scala:697:7, src/main/scala/chisel3/util/Valid.scala:142:26]
endmodule

