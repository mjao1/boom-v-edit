// Generated by CIRCT unknown git version

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module DivSqrtRecF64ToRaw_mulAddZ31(	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
  input          clock,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
  input          reset,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
  output         io_inReady_div,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_inReady_sqrt,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  input          io_inValid,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  input          io_sqrtOp,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  input  [64:0]  io_a,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  input  [64:0]  io_b,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  input  [2:0]   io_roundingMode,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output [3:0]   io_usingMulAdd,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_latchMulAddA_0,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output [53:0]  io_mulAddA_0,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_latchMulAddB_0,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output [53:0]  io_mulAddB_0,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output [104:0] io_mulAddC_2,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  input  [104:0] io_mulAddResult_3,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_rawOutValid_div,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_rawOutValid_sqrt,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output [2:0]   io_roundingModeOut,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_invalidExc,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_infiniteExc,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_rawOut_isNaN,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_rawOut_isInf,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_rawOut_isZero,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output         io_rawOut_sign,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output [12:0]  io_rawOut_sExp,	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
  output [55:0]  io_rawOut_sig	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:53:16]
);

  wire [53:0]  zComplSigT_C1_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:644:12]
  wire [52:0]  _GEN;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:641:11]
  wire         _zComplSigT_C1_T_5_53;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:641:11]
  wire [45:0]  zSigma1_B4;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:633:22]
  wire         io_inReady_sqrt_0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:434:{18,35,52,69}, :435:26]
  wire         io_inReady_div_0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:430:{18,35,52,69}, :431:{27,39,51,68}, :432:22]
  wire         ready_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:423:28]
  wire         ready_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:390:28]
  reg  [2:0]   cycleNum_A;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34]
  reg  [3:0]   cycleNum_B;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34]
  reg  [2:0]   cycleNum_C;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34]
  reg  [2:0]   cycleNum_E;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:89:34]
  reg          valid_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34]
  reg          sqrtOp_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:92:30]
  reg          majorExc_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:93:30]
  reg          isNaN_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:95:30]
  reg          isInf_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:96:30]
  reg          isZero_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:97:30]
  reg          sign_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:98:30]
  reg  [12:0]  sExp_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:99:30]
  reg  [51:0]  fractB_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:100:30]
  reg  [51:0]  fractA_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:101:30]
  reg  [2:0]   roundingMode_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:102:30]
  reg          valid_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34]
  reg          sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:105:30]
  reg          majorExc_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:106:30]
  reg          isNaN_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:108:30]
  reg          isInf_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:109:30]
  reg          isZero_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:110:30]
  reg          sign_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:111:30]
  reg  [12:0]  sExp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:112:30]
  reg          bit0FractA_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:113:30]
  reg  [51:0]  fractB_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:114:30]
  reg  [2:0]   roundingMode_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:115:30]
  reg          valid_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:117:34]
  reg          sqrtOp_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:118:30]
  reg          majorExc_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:119:30]
  reg          isNaN_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:121:30]
  reg          isInf_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:122:30]
  reg          isZero_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:123:30]
  reg          sign_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:124:30]
  reg  [12:0]  sExp_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:125:30]
  reg          bit0FractA_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:126:30]
  reg  [51:0]  fractB_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:127:30]
  reg  [2:0]   roundingMode_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:128:30]
  reg  [8:0]   fractR0_A;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:130:30]
  reg  [9:0]   hiSqrR0_A_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:132:30]
  reg  [20:0]  partNegSigma0_A;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:133:30]
  reg  [8:0]   nextMulAdd9A_A;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:134:30]
  reg  [8:0]   nextMulAdd9B_A;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:135:30]
  reg  [16:0]  ER1_B_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:136:30]
  reg  [31:0]  ESqrR1_B_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:138:30]
  reg  [57:0]  sigX1_B;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:139:30]
  reg  [32:0]  sqrSigma1_C;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:140:30]
  reg  [57:0]  sigXN_C;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:141:30]
  reg  [30:0]  u_C_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:142:30]
  reg          E_E_div;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:143:30]
  reg  [53:0]  sigT_E;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:144:30]
  reg          isNegRemT_E;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:145:30]
  reg          isZeroRemT_E;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:146:30]
  wire         cyc_S_div = io_inReady_div_0 & io_inValid & ~io_sqrtOp;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:164:{38,52,55}, :430:{18,35,52,69}, :431:{27,39,51,68}, :432:22]
  wire         cyc_S_sqrt = io_inReady_sqrt_0 & io_inValid & io_sqrtOp;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:165:{38,52}, :434:{18,35,52,69}, :435:26]
  wire         cyc_S = cyc_S_div | cyc_S_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:164:{38,52}, :165:{38,52}, :166:27]
  wire         rawA_S_isZero = io_a[63:61] == 3'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}]
  wire         rawA_S_isNaN = (&(io_a[63:62])) & io_a[61];	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:{33,41}]
  wire         rawA_S_isInf = (&(io_a[63:62])) & ~(io_a[61]);	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:41, :57:{33,36}]
  wire         rawB_S_isNaN = (&(io_b[63:62])) & io_b[61];	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:{33,41}]
  wire         rawB_S_isInf = (&(io_b[63:62])) & ~(io_b[61]);	// @[generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :53:{28,53}, :56:41, :57:{33,36}]
  wire         specialCaseB_S = rawB_S_isNaN | rawB_S_isInf | ~(|(io_b[63:61]));	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:192:{39,55}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :56:33, :57:33]
  wire         normalCase_S_div = ~(rawA_S_isNaN | rawA_S_isInf | rawA_S_isZero) & ~specialCaseB_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:191:{39,55}, :192:{39,55}, :193:{28,45,48}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:52:53, :56:33, :57:33]
  wire         normalCase_S_sqrt = ~specialCaseB_S & ~(io_b[64]);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:192:{39,55}, :193:48, :194:{46,49}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:59:25]
  wire         entering_PA_normalCase_div = cyc_S_div & normalCase_S_div;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:164:{38,52}, :193:45, :210:50]
  wire         entering_PA_normalCase_sqrt = cyc_S_sqrt & normalCase_S_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:165:{38,52}, :194:46, :211:50]
  wire         cyc_A6_sqrt = cycleNum_A == 3'h6;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34, :225:35]
  wire         cyc_A5_sqrt = cycleNum_A == 3'h5;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34, :226:35]
  wire         cyc_A4_sqrt = cycleNum_A == 3'h4;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34, :227:35]
  wire         cyc_A4 = cyc_A4_sqrt | entering_PA_normalCase_div;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :227:35, :231:30]
  wire         cyc_A3 = cycleNum_A == 3'h3;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34, :232:30]
  wire         cyc_A2 = cycleNum_A == 3'h2;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34, :233:30]
  wire         cyc_A1 = cycleNum_A == 3'h1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34, :234:30]
  wire         cyc_A3_div = cyc_A3 & ~sqrtOp_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:92:30, :232:30, :236:{29,32}]
  wire         cyc_A1_div = cyc_A1 & ~sqrtOp_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:92:30, :234:30, :236:32, :238:29]
  wire         cyc_A1_sqrt = cyc_A1 & sqrtOp_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:92:30, :234:30, :242:30]
  wire         cyc_B9_sqrt = cycleNum_B == 4'h9;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :253:36]
  wire         cyc_B8_sqrt = cycleNum_B == 4'h8;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :254:36]
  wire         cyc_B7_sqrt = cycleNum_B == 4'h7;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :255:36]
  wire         cyc_B6 = cycleNum_B == 4'h6;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :257:30]
  wire         cyc_B5 = cycleNum_B == 4'h5;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :258:30]
  wire         cyc_B4 = cycleNum_B == 4'h4;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :259:30]
  wire         cyc_B3 = cycleNum_B == 4'h3;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :260:30]
  wire         cyc_B2 = cycleNum_B == 4'h2;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :261:30]
  wire         cyc_B1 = cycleNum_B == 4'h1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :262:30]
  wire         cyc_B6_div = cyc_B6 & valid_PA & ~sqrtOp_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :92:30, :236:32, :257:30, :264:{29,41}]
  wire         cyc_B2_div = cyc_B2 & ~sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:105:30, :261:30, :267:32, :268:29]
  wire         cyc_B6_sqrt = cyc_B6 & valid_PB & sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :105:30, :257:30, :271:{30,42}]
  wire         cyc_B5_sqrt = cyc_B5 & valid_PB & sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :105:30, :258:30, :272:{30,42}]
  wire         cyc_B4_sqrt = cyc_B4 & valid_PB & sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :105:30, :259:30, :273:{30,42}]
  wire         cyc_B3_sqrt = cyc_B3 & sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:105:30, :260:30, :274:30]
  wire         cyc_B2_sqrt = cyc_B2 & sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:105:30, :261:30, :275:30]
  wire         cyc_B1_sqrt = cyc_B1 & sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:105:30, :262:30, :276:30]
  wire         cyc_C6_sqrt = cycleNum_C == 3'h6;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34, :283:35]
  wire         cyc_C5 = cycleNum_C == 3'h5;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34, :285:30]
  wire         cyc_C4 = cycleNum_C == 3'h4;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34, :286:30]
  wire         cyc_C3 = cycleNum_C == 3'h3;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34, :287:30]
  wire         cyc_C2 = cycleNum_C == 3'h2;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34, :288:30]
  wire         cyc_C1 = cycleNum_C == 3'h1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34, :289:30]
  wire         cyc_C1_div = cyc_C1 & ~sqrtOp_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:118:30, :289:30, :294:32, :295:29]
  wire         cyc_C4_sqrt = cyc_C4 & sqrtOp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:105:30, :286:30, :298:30]
  wire         cyc_C1_sqrt = cyc_C1 & sqrtOp_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:118:30, :289:30, :301:30]
  wire         cyc_E3 = cycleNum_E == 3'h3;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:89:34, :308:30]
  wire         normalCase_PA = ~isNaN_PA & ~isInf_PA & ~isZero_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:95:30, :96:30, :97:30, :347:{25,36,39,50,53}]
  wire         valid_normalCase_leaving_PA = cyc_B4 & valid_PA & ~sqrtOp_PA | cyc_B7_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :92:30, :236:32, :255:36, :259:30, :266:{29,41}, :351:50]
  wire         valid_leaving_PA = normalCase_PA ? valid_normalCase_leaving_PA : ready_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:347:{36,50}, :351:50, :353:12, :390:28]
  wire         leaving_PA = valid_PA & valid_leaving_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :353:12, :354:28]
  wire         ready_PA = ~valid_PA | valid_leaving_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :353:12, :355:{17,28}]
  wire         normalCase_PB = ~isNaN_PB & ~isInf_PB & ~isZero_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:108:30, :109:30, :110:30, :384:{25,36,39,50,53}]
  wire         valid_leaving_PB = normalCase_PB ? cyc_C3 : ready_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:287:30, :384:{36,50}, :388:12, :423:28]
  wire         leaving_PB = valid_PB & valid_leaving_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :388:12, :389:28]
  assign ready_PB = ~valid_PB | valid_leaving_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :361:29, :388:12, :390:28]
  wire         valid_leaving_PC = ~(~isNaN_PC & ~isInf_PC & ~isZero_PC) | cycleNum_E == 3'h1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:89:34, :121:30, :122:30, :123:30, :310:30, :418:{25,36,39,50,53}, :421:{28,44}]
  wire         leaving_PC = valid_PC & valid_leaving_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:117:34, :421:44, :422:28]
  assign ready_PC = ~valid_PC | valid_leaving_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:117:34, :421:44, :423:{17,28}]
  assign io_inReady_div_0 = ready_PA & cycleNum_B != 4'h7 & ~cyc_B6_sqrt & ~cyc_B5_sqrt & ~cyc_B4_sqrt & cycleNum_B != 4'h3 & cycleNum_B != 4'h2 & ~cyc_B1_sqrt & cycleNum_C != 3'h5 & cycleNum_C != 3'h4;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :88:34, :255:36, :260:30, :261:30, :271:{30,42}, :272:{30,42}, :273:{30,42}, :276:30, :285:30, :286:30, :355:28, :430:{18,21,35,38,52,55,69}, :431:{13,27,30,39,42,51,54,68}, :432:{13,22,25}]
  assign io_inReady_sqrt_0 = ready_PA & ~cyc_B6_sqrt & ~cyc_B5_sqrt & ~cyc_B4_sqrt & ~cyc_B2_div & ~cyc_B1_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:268:29, :271:{30,42}, :272:{30,42}, :273:{30,42}, :276:30, :355:28, :430:{38,55}, :431:{13,54}, :434:{18,35,52,69}, :435:{13,26}]
  wire [13:0]  zFractB_A4_div = entering_PA_normalCase_div ? io_b[48:35] : 14'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :440:29, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:61:49]
  wire         zLinPiece_0_A4_div = entering_PA_normalCase_div & io_b[51:49] == 3'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :442:{41,55,64}]
  wire         zLinPiece_1_A4_div = entering_PA_normalCase_div & io_b[51:49] == 3'h1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :442:55, :443:{41,64}]
  wire         zLinPiece_2_A4_div = entering_PA_normalCase_div & io_b[51:49] == 3'h2;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :442:55, :444:{41,64}]
  wire         zLinPiece_3_A4_div = entering_PA_normalCase_div & io_b[51:49] == 3'h3;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :442:55, :445:{41,64}]
  wire         zLinPiece_4_A4_div = entering_PA_normalCase_div & io_b[51:49] == 3'h4;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :442:55, :446:{41,64}]
  wire         zLinPiece_5_A4_div = entering_PA_normalCase_div & io_b[51:49] == 3'h5;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :442:55, :447:{41,64}]
  wire         zLinPiece_6_A4_div = entering_PA_normalCase_div & io_b[51:49] == 3'h6;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :442:55, :448:{41,64}]
  wire         zLinPiece_7_A4_div = entering_PA_normalCase_div & (&(io_b[51:49]));	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :442:55, :449:{41,64}]
  wire [8:0]   _zK1_A4_div_T_4 = (zLinPiece_0_A4_div ? 9'h1C7 : 9'h0) | (zLinPiece_1_A4_div ? 9'h16C : 9'h0) | (zLinPiece_2_A4_div ? 9'h12A : 9'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:442:41, :443:41, :444:41, :451:{12,48}, :452:{12,48}, :453:12]
  wire [8:0]   zFractB_A7_sqrt = entering_PA_normalCase_sqrt ? io_b[50:42] : 9'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:211:50, :469:30, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:61:49]
  wire         zQuadPiece_0_A7_sqrt = entering_PA_normalCase_sqrt & ~(io_b[52]) & ~(io_b[51]);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:211:50, :472:{21,24,37,41,44}, generators/hardfloat/hardfloat/src/main/scala/common.scala:82:56]
  wire         zQuadPiece_1_A7_sqrt = entering_PA_normalCase_sqrt & ~(io_b[52]) & io_b[51];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:211:50, :472:37, :474:{21,24,41}, generators/hardfloat/hardfloat/src/main/scala/common.scala:82:56]
  wire         zQuadPiece_2_A7_sqrt = entering_PA_normalCase_sqrt & io_b[52] & ~(io_b[51]);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:211:50, :472:37, :476:{21,41,44}, generators/hardfloat/hardfloat/src/main/scala/common.scala:82:56]
  wire         zQuadPiece_3_A7_sqrt = entering_PA_normalCase_sqrt & io_b[52] & io_b[51];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:211:50, :472:37, :477:{44,62}, generators/hardfloat/hardfloat/src/main/scala/common.scala:82:56]
  wire [8:0]   _zK2_A7_sqrt_T_4 = {zQuadPiece_0_A7_sqrt, (zQuadPiece_0_A7_sqrt ? 8'hC8 : 8'h0) | (zQuadPiece_1_A7_sqrt ? 8'hC1 : 8'h0)} | (zQuadPiece_2_A7_sqrt ? 9'h143 : 9'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:472:{21,41}, :474:{21,41}, :476:{21,41}, :479:{12,50}, :480:{12,50}, :481:12]
  wire [19:0]  _mulAdd9C_A_T_4 = {(zQuadPiece_0_A7_sqrt ? 10'h2F : 10'h0) | (zQuadPiece_1_A7_sqrt ? 10'h1DF : 10'h0) | (zQuadPiece_2_A7_sqrt ? 10'h14D : 10'h0) | (zQuadPiece_3_A7_sqrt ? 10'h27E : 10'h0), {10{entering_PA_normalCase_sqrt}}} | {cyc_A6_sqrt, (cyc_A6_sqrt & ~(sExp_PA[0]) & ~(fractB_PA[51]) ? 13'h1A : 13'h0) | (cyc_A6_sqrt & ~(sExp_PA[0]) & fractB_PA[51] ? 13'hBCA : 13'h0) | (cyc_A6_sqrt & sExp_PA[0] & ~(fractB_PA[51]) ? 13'h12D3 : 13'h0) | (cyc_A6_sqrt & sExp_PA[0] & fractB_PA[51] ? 13'h1B17 : 13'h0), {6{cyc_A6_sqrt}}};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:99:30, :100:30, :211:50, :225:35, :472:{21,41}, :474:{21,41}, :476:{21,41}, :477:{44,62}, :484:{12,57}, :485:{12,57}, :486:{12,57}, :487:12, :489:{44,47,56,60,63,72}, :490:{44,47,60}, :491:{44,60,63}, :492:{44,60}, :494:{12,58}, :495:{12,58}, :496:{12,58}, :497:12, :507:{26,50,68}, :508:{12,53}]
  wire [19:0]  _GEN_0 = {_mulAdd9C_A_T_4[19:8] | (zLinPiece_0_A4_div ? 12'h1C : 12'h0) | (zLinPiece_1_A4_div ? 12'h3A2 : 12'h0) | (zLinPiece_2_A4_div ? 12'h675 : 12'h0) | (zLinPiece_3_A4_div ? 12'h8C6 : 12'h0) | (zLinPiece_4_A4_div ? 12'hAB4 : 12'h0) | (zLinPiece_5_A4_div ? 12'hC56 : 12'h0) | (zLinPiece_6_A4_div ? 12'hDBD : 12'h0) | (zLinPiece_7_A4_div ? 12'hEF4 : 12'h0), _mulAdd9C_A_T_4[7:0] | {8{entering_PA_normalCase_div}}} | (cyc_A5_sqrt ? {1'h0, fractR0_A, 10'h0} + 20'h40000 : 20'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:130:30, :210:50, :226:35, :442:41, :443:41, :444:41, :445:41, :446:41, :447:41, :448:41, :449:41, :460:{12,55}, :461:{12,55}, :462:{12,55}, :463:{12,55}, :464:{12,55}, :465:{12,55}, :466:{12,55}, :467:12, :507:68, :508:71, :509:{53,71}, :510:{12,40}]
  wire [24:0]  _mulAdd9C_A_T_30 = {4'h0, {entering_PA_normalCase_div, _GEN_0[19:11], _GEN_0[10:0] | {cyc_A4_sqrt & ~(hiSqrR0_A_sqrt[9]), 10'h0}} | (cyc_A4_sqrt & hiSqrR0_A_sqrt[9] | cyc_A3_div ? fractB_PA[46:26] + 21'h400 : 21'h0) | (cyc_A3 & sqrtOp_PA | cyc_A2 ? partNegSigma0_A : 21'h0)} | (cyc_A1_sqrt ? {fractR0_A, 16'h0} : 25'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:92:30, :100:30, :130:30, :132:30, :133:30, :210:50, :227:35, :232:30, :233:30, :236:29, :240:30, :242:30, :509:71, :510:65, :511:{12,25,28,44,65}, :512:{12,26,48}, :513:{20,29}, :515:11, :516:{12,25,58}, :517:{12,45}]
  wire [23:0]  _GEN_1 = _mulAdd9C_A_T_30[23:0] | (cyc_A1_div ? {fractR0_A, 15'h0} : 24'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:130:30, :238:29, :516:58, :517:58, :518:{12,45}]
  wire [18:0]  loMulAdd9Out_A = {1'h0, {9'h0, zFractB_A4_div[13:5] | {_zK2_A7_sqrt_T_4[8], _zK2_A7_sqrt_T_4[7:0] | (zQuadPiece_3_A7_sqrt ? 8'h89 : 8'h0)} | (cyc_S ? 9'h0 : nextMulAdd9A_A)} * {9'h0, {_zK1_A4_div_T_4[8], _zK1_A4_div_T_4[7:0] | (zLinPiece_3_A4_div ? 8'hF8 : 8'h0) | (zLinPiece_4_A4_div ? 8'hD2 : 8'h0) | (zLinPiece_5_A4_div ? 8'hB4 : 8'h0) | (zLinPiece_6_A4_div ? 8'h9C : 8'h0) | (zLinPiece_7_A4_div ? 8'h89 : 8'h0)} | zFractB_A7_sqrt | (cyc_S ? 9'h0 : nextMulAdd9B_A)}} + {1'h0, _GEN_1[17:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:134:30, :135:30, :166:27, :440:29, :445:41, :446:41, :447:41, :448:41, :449:41, :451:48, :452:48, :453:48, :454:{12,48}, :455:{12,48}, :456:{12,48}, :457:{12,48}, :458:12, :469:30, :477:{44,62}, :480:50, :481:50, :482:12, :500:{23,32,46}, :501:16, :503:{20,46}, :504:16, :517:58, :519:{37,50,63}]
  wire [6:0]   _mulAdd9Out_A_T_5 = loMulAdd9Out_A[18] ? {_mulAdd9C_A_T_30[24], _GEN_1[23:18]} + 7'h1 : {_mulAdd9C_A_T_30[24], _GEN_1[23:18]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:516:58, :517:58, :519:50, :521:{16,31}, :522:{27,36}]
  wire [15:0]  r1_A1 = (sqrtOp_PA ? {1'h0, _mulAdd9Out_A_T_5, loMulAdd9Out_A[17:10]} : {_mulAdd9Out_A_T_5, loMulAdd9Out_A[17:9]}) | 16'h8000;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:92:30, :519:50, :521:16, :529:60, :538:{27,32,74}]
  wire [16:0]  ER1_A1_sqrt = sExp_PA[0] ? {r1_A1, 1'h0} : {1'h0, r1_A1};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:99:30, :489:56, :538:27, :539:{26,44}]
  wire         _io_latchMulAddB_0_T = cyc_A1 | cyc_B7_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:234:30, :255:36, :577:16]
  wire         io_latchMulAddA_0_0 = _io_latchMulAddB_0_T | cyc_B6_div | cyc_B4 | cyc_B3 | cyc_C6_sqrt | cyc_C4 | cyc_C1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:259:30, :260:30, :264:{29,41}, :283:35, :286:30, :289:30, :577:{16,31,45,55,65}, :578:{25,35}]
  wire [52:0]  _io_mulAddA_0_T_6 = (cyc_A1_sqrt ? {ER1_A1_sqrt, 36'h0} : 53'h0) | (cyc_B7_sqrt | cyc_A1_div ? {1'h1, fractB_PA} : 53'h0) | (cyc_B6_div ? {1'h1, fractA_PA} : 53'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:100:30, :101:30, :238:29, :242:30, :255:36, :264:{29,41}, :348:28, :349:28, :539:26, :580:{12,51,63}, :581:{12,25,63}, :582:12]
  wire [51:0]  _io_mulAddB_0_T_1 = cyc_A1 ? {r1_A1, 36'h0} : 52'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:234:30, :538:27, :580:51, :594:{12,31}]
  wire [52:0]  _io_mulAddB_0_T_7 = {1'h0, _io_mulAddB_0_T_1[51], _io_mulAddB_0_T_1[50:0] | (cyc_B7_sqrt ? {ESqrR1_B_sqrt, 19'h0} : 51'h0)} | (cyc_B6_sqrt ? {ER1_B_sqrt, 36'h0} : 53'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:136:30, :138:30, :255:36, :271:{30,42}, :580:51, :594:{12,51}, :595:{12,39,51}, :596:{12,36}]
  wire [45:0]  _GEN_2 = _io_mulAddB_0_T_7[45:0] | zSigma1_B4;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:595:51, :596:51, :633:22]
  wire [104:0] _io_mulAddC_2_T_1 = cyc_B1 ? {sigX1_B, 47'h0} : 105'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:139:30, :262:30, :619:{12,45}]
  wire [104:0] _io_mulAddC_2_T_8 = {_io_mulAddC_2_T_1[104], _io_mulAddC_2_T_1[103:0] | (cyc_C6_sqrt ? {sigX1_B, 46'h0} : 104'h0)} | (cyc_C4_sqrt | cyc_C2 ? {sigXN_C, 47'h0} : 105'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:139:30, :141:30, :283:35, :288:30, :298:30, :619:{12,45,62}, :620:{12,45,62}, :621:{12,25,45}]
  assign zSigma1_B4 = cyc_B4 ? ~(io_mulAddResult_3[90:45]) : 46'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:259:30, :633:{22,31,49}]
  wire [53:0]  _zComplSigT_C1_T_5 = cyc_C1_div & io_mulAddResult_3[104] | cyc_C1_sqrt ? ~(io_mulAddResult_3[104:51]) : 54'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:295:29, :301:30, :636:39, :638:{12,25,40}, :639:{13,31}]
  assign _zComplSigT_C1_T_5_53 = _zComplSigT_C1_T_5[53];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:638:12, :641:11]
  assign _GEN = _zComplSigT_C1_T_5[52:0] | (cyc_C1_div & ~(io_mulAddResult_3[104]) ? ~(io_mulAddResult_3[102:50]) : 53'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:295:29, :636:{20,39}, :638:12, :641:11, :642:{12,24,37,55}]
  assign zComplSigT_C1_sqrt = cyc_C1_sqrt ? ~(io_mulAddResult_3[104:51]) : 54'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:301:30, :639:31, :644:{12,26}]
  wire [54:0]  _GEN_3 = {1'h0, sigT_E};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:144:30, :695:27]
  wire [13:0]  sExpQuot_S_div = {2'h0, io_a[63:52]} + {{3{io_b[63]}}, ~(io_b[62:52])};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:198:{21,36,44,56}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21]
  wire         notSigNaNIn_invalidExc_S_div = rawA_S_isZero & ~(|(io_b[63:61])) | rawA_S_isInf & rawB_S_isInf;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:172:{24,42,59}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :57:33]
  wire         notSigNaNIn_invalidExc_S_sqrt = ~rawB_S_isNaN & (|(io_b[63:61])) & io_b[64];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:174:{9,24,43}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :56:33, :59:25]
  wire         majorExc_S = io_sqrtOp ? rawB_S_isNaN & ~(io_b[51]) | notSigNaNIn_invalidExc_S_sqrt : rawA_S_isNaN & ~(io_a[51]) | rawB_S_isNaN & ~(io_b[51]) | notSigNaNIn_invalidExc_S_div | ~rawA_S_isNaN & ~rawA_S_isInf & ~(|(io_b[63:61]));	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:172:42, :174:{24,43}, :176:12, :177:38, :178:{38,66}, :179:46, :180:{18,33,36,51}, generators/hardfloat/hardfloat/src/main/scala/common.scala:82:{46,49,56}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :56:33, :57:33]
  wire         isNaN_S = io_sqrtOp ? rawB_S_isNaN | notSigNaNIn_invalidExc_S_sqrt : rawA_S_isNaN | rawB_S_isNaN | notSigNaNIn_invalidExc_S_div;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:172:42, :174:{24,43}, :183:12, :184:26, :185:{26,42}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:56:33]
  wire         isInf_S = io_sqrtOp ? rawB_S_isInf : rawA_S_isInf | ~(|(io_b[63:61]));	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:187:{23,63}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :57:33]
  wire         isZero_S = io_sqrtOp ? ~(|(io_b[63:61])) : rawA_S_isZero | rawB_S_isInf;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:188:{23,64}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :52:{28,53}, :57:33]
  wire         sign_S = ~io_sqrtOp & io_a[64] ^ io_b[64];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:164:55, :189:{31,47}, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:59:25]
  wire         normalCase_S = io_sqrtOp ? normalCase_S_sqrt : normalCase_S_div;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:193:45, :194:46, :195:27]
  wire         entering_PA_normalCase = entering_PA_normalCase_div | entering_PA_normalCase_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :211:50, :213:36]
  wire         entering_PA = entering_PA_normalCase | cyc_S & (valid_PA | ~ready_PB);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :166:27, :213:36, :325:{32,42,55,58}, :390:28]
  wire         entering_PB = cyc_S & ~normalCase_S & ~valid_PA & (leaving_PB | ~valid_PB & ~ready_PC) | leaving_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :104:34, :166:27, :195:27, :354:28, :355:17, :360:{15,18,33,47}, :361:{25,29,40,43}, :364:37, :389:28, :423:28]
  wire         entering_PC = cyc_S & ~normalCase_S & ~valid_PA & ~valid_PB & ready_PC | leaving_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :104:34, :166:27, :195:27, :355:17, :360:18, :361:29, :389:28, :395:{15,33,47,61}, :398:37, :423:28]
  wire [8:0]   zFractR0_A6_sqrt = cyc_A6_sqrt & _mulAdd9Out_A_T_5[1] ? ~{_mulAdd9Out_A_T_5[0], loMulAdd9Out_A[17:10]} : 9'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:225:35, :519:50, :521:16, :529:{12,25,40,46,60}]
  wire [18:0]  sqrR0_A5_sqrt = sExp_PA[0] ? {_mulAdd9Out_A_T_5[0], loMulAdd9Out_A[17:0]} : {_mulAdd9Out_A_T_5[1:0], loMulAdd9Out_A[17:1]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:99:30, :489:56, :519:50, :521:16, :525:27, :529:60, :533:{28,53}]
  wire [8:0]   _GEN_4 = {_mulAdd9Out_A_T_5[1:0], loMulAdd9Out_A[17:11]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:519:50, :521:16, :533:28, :535:59]
  wire [8:0]   zFractR0_A4_div = entering_PA_normalCase_div & _mulAdd9Out_A_T_5[2] ? ~_GEN_4 : 9'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :521:16, :535:{12,24,39,45,59}]
  wire         _GEN_5 = entering_PA_normalCase_sqrt | cyc_A6_sqrt | cyc_A5_sqrt | cyc_A4;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:211:50, :225:35, :226:35, :231:30, :551:{21,36,51}]
  always @(posedge clock) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
    if (reset) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
      cycleNum_A <= 3'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34]
      cycleNum_B <= 4'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34]
      cycleNum_C <= 3'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34]
      cycleNum_E <= 3'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:89:34]
      valid_PA <= 1'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34]
      valid_PB <= 1'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34]
      valid_PC <= 1'h0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:117:34]
    end
    else begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
      if (|{entering_PA_normalCase, cycleNum_A})	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34, :213:36, :217:{34,49}]
        cycleNum_A <= {1'h0, {2{entering_PA_normalCase_div}}} | (entering_PA_normalCase_sqrt ? 3'h6 : 3'h0) | (entering_PA_normalCase ? 3'h0 : cycleNum_A - 3'h1);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:86:34, :210:50, :211:50, :213:36, :219:{16,69}, :220:{16,69}, :221:{16,57}]
      if (|{cyc_A1, cycleNum_B})	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :234:30, :244:{18,33}]
        cycleNum_B <= cyc_A1 ? (sqrtOp_PA ? 4'hA : 4'h6) : cycleNum_B - 4'h1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:87:34, :92:30, :234:30, :246:16, :247:20, :248:28, :257:30]
      if (|{cyc_B1, cycleNum_C})	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34, :262:30, :278:{18,33}]
        cycleNum_C <= cyc_B1 ? (sqrtOp_PB ? 3'h6 : 3'h5) : cycleNum_C - 3'h1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:88:34, :105:30, :262:30, :280:{16,28,62}]
      if (|{cyc_C1, cycleNum_E})	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:89:34, :289:30, :303:{18,33}]
        cycleNum_E <= cyc_C1 ? 3'h4 : cycleNum_E - 3'h1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:89:34, :289:30, :304:{26,51}]
      if (entering_PA | leaving_PA)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:325:32, :327:23, :354:28]
        valid_PA <= entering_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :325:32]
      if (entering_PB | leaving_PB)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:364:37, :366:23, :389:28]
        valid_PB <= entering_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :364:37]
      if (entering_PC | leaving_PC)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:398:37, :400:23, :422:28]
        valid_PC <= entering_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:117:34, :398:37]
    end
    if (entering_PA) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:325:32]
      sqrtOp_PA <= io_sqrtOp;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:92:30]
      majorExc_PA <= majorExc_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:93:30, :176:12]
      isNaN_PA <= isNaN_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:95:30, :183:12]
      isInf_PA <= isInf_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:96:30, :187:23]
      isZero_PA <= isZero_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:97:30, :188:23]
      sign_PA <= sign_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:98:30, :189:47]
    end
    if (entering_PA_normalCase) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:213:36]
      sExp_PA <= io_sqrtOp ? {1'h0, io_b[63:52]} : {$signed(sExpQuot_S_div) > 14'shDFF ? 4'h6 : sExpQuot_S_div[12:9], sExpQuot_S_div[8:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:99:30, :198:21, :201:{13,24}, :203:27, :204:15, :205:27, :257:30, :339:23, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:51:21, :60:27]
      fractB_PA <= io_b[51:0];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:100:30, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:61:49]
      roundingMode_PA <= io_roundingMode;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:102:30]
    end
    if (entering_PA_normalCase_div)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50]
      fractA_PA <= io_a[51:0];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:101:30, generators/hardfloat/hardfloat/src/main/scala/rawFloatFromRecFN.scala:61:49]
    if (entering_PB) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:364:37]
      sqrtOp_PB <= valid_PA ? sqrtOp_PA : io_sqrtOp;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :92:30, :105:30, :370:27]
      majorExc_PB <= valid_PA ? majorExc_PA : majorExc_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :93:30, :106:30, :176:12, :371:27]
      isNaN_PB <= valid_PA ? isNaN_PA : isNaN_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :95:30, :108:30, :183:12, :372:27]
      isInf_PB <= valid_PA ? isInf_PA : isInf_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :96:30, :109:30, :187:23, :373:27]
      isZero_PB <= valid_PA ? isZero_PA : isZero_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :97:30, :110:30, :188:23, :374:27]
      sign_PB <= valid_PA ? sign_PA : sign_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :98:30, :111:30, :189:47, :375:27]
    end
    if (valid_PA & normalCase_PA & valid_normalCase_leaving_PA) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :347:{36,50}, :351:50, :363:{18,35}]
      sExp_PB <= sExp_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:99:30, :112:30]
      bit0FractA_PB <= fractA_PA[0];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:101:30, :113:30, :379:37]
      fractB_PB <= fractB_PA;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:100:30, :114:30]
      roundingMode_PB <= valid_PA ? roundingMode_PA : io_roundingMode;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:91:34, :102:30, :115:30, :381:31]
    end
    if (entering_PC) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:398:37]
      sqrtOp_PC <= valid_PB ? sqrtOp_PB : io_sqrtOp;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :105:30, :118:30, :404:27]
      majorExc_PC <= valid_PB ? majorExc_PB : majorExc_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :106:30, :119:30, :176:12, :405:27]
      isNaN_PC <= valid_PB ? isNaN_PB : isNaN_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :108:30, :121:30, :183:12, :406:27]
      isInf_PC <= valid_PB ? isInf_PB : isInf_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :109:30, :122:30, :187:23, :407:27]
      isZero_PC <= valid_PB ? isZero_PB : isZero_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :110:30, :123:30, :188:23, :408:27]
      sign_PC <= valid_PB ? sign_PB : sign_S;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :111:30, :124:30, :189:47, :409:27]
    end
    if (valid_PB & normalCase_PB & cyc_C3) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :287:30, :384:{36,50}, :397:{18,35}]
      sExp_PC <= sExp_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:112:30, :125:30]
      bit0FractA_PC <= bit0FractA_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:113:30, :126:30]
      fractB_PC <= fractB_PB;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:114:30, :127:30]
      roundingMode_PC <= valid_PB ? roundingMode_PB : io_roundingMode;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:104:34, :115:30, :128:30, :415:31]
    end
    if (cyc_A6_sqrt | entering_PA_normalCase_div)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:210:50, :225:35, :541:23]
      fractR0_A <= zFractR0_A6_sqrt | zFractR0_A4_div;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:130:30, :529:12, :535:12, :542:39]
    if (cyc_A5_sqrt)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:226:35]
      hiSqrR0_A_sqrt <= sqrR0_A5_sqrt[18:9];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:132:30, :533:28, :545:{24,40}]
    if (cyc_A4_sqrt | cyc_A3)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:227:35, :232:30, :547:23]
      partNegSigma0_A <= cyc_A4_sqrt ? {_mulAdd9Out_A_T_5[2:0], loMulAdd9Out_A[17:0]} : {5'h0, _mulAdd9Out_A_T_5, loMulAdd9Out_A[17:9]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :133:30, :227:35, :519:50, :521:{12,16}, :525:27, :538:74, :548:31]
    if (_GEN_5 | cyc_A3 | cyc_A2)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:232:30, :233:30, :551:{21,36,51,61,71}]
      nextMulAdd9A_A <= (entering_PA_normalCase_sqrt ? ~_GEN_4 : 9'h0) | zFractR0_A6_sqrt | (cyc_A4_sqrt ? fractB_PA[43:35] : 9'h0) | zFractB_A4_div[8:0] | (cyc_A5_sqrt | cyc_A3 ? {1'h1, fractB_PA[51:44]} : 9'h0) | (cyc_A2 & loMulAdd9Out_A[11] ? ~(loMulAdd9Out_A[10:2]) : 9'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:100:30, :134:30, :211:50, :226:35, :227:35, :232:30, :233:30, :440:29, :519:50, :529:12, :535:59, :537:{12,20,35,41,55}, :554:{16,40,64}, :555:68, :556:{16,47,64}, :557:{27,68}, :558:{16,29,47,64}]
    if (_GEN_5 | cyc_A2)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:233:30, :551:{21,36,51}, :561:63]
      nextMulAdd9B_A <= zFractB_A7_sqrt | zFractR0_A6_sqrt | (cyc_A5_sqrt ? sqrR0_A5_sqrt[8:0] : 9'h0) | zFractR0_A4_div | (cyc_A4_sqrt ? hiSqrR0_A_sqrt[8:0] : 9'h0) | (cyc_A2 ? {1'h1, fractR0_A[8:1]} : 9'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:130:30, :132:30, :135:30, :226:35, :227:35, :233:30, :469:30, :529:12, :533:28, :535:12, :563:73, :564:73, :565:{16,43,69}, :566:73, :567:{16,44,69}, :568:{16,33,53}]
    if (cyc_A1_sqrt)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:242:30]
      ER1_B_sqrt <= ER1_A1_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:136:30, :539:26]
    if (cyc_B8_sqrt)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:254:36]
      ESqrR1_B_sqrt <= io_mulAddResult_3[103:72];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:138:30, :632:43]
    if (cyc_B3)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:260:30]
      sigX1_B <= io_mulAddResult_3[104:47];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:139:30, :635:38]
    if (cyc_B1)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:262:30]
      sqrSigma1_C <= io_mulAddResult_3[79:47];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:140:30, :634:41]
    if (cyc_C6_sqrt | cyc_C5 & ~sqrtOp_PB | cyc_C3 & sqrtOp_PB)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:105:30, :267:32, :283:35, :285:30, :287:30, :291:29, :299:30, :661:{23,37}]
      sigXN_C <= io_mulAddResult_3[104:47];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:141:30, :635:38]
    if (cyc_C5 & sqrtOp_PB)	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:105:30, :285:30, :297:30]
      u_C_sqrt <= io_mulAddResult_3[103:73];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:142:30, :665:33]
    if (cyc_C1) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:289:30]
      E_E_div <= ~(io_mulAddResult_3[104]);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:143:30, :636:{20,39}]
      sigT_E <= ~{_zComplSigT_C1_T_5_53, _GEN};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:144:30, :641:11, :648:19]
    end
    if (cycleNum_E == 3'h2) begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:89:34, :309:30]
      isNegRemT_E <= sqrtOp_PC ? io_mulAddResult_3[55] : io_mulAddResult_3[53];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:118:30, :145:30, :649:36, :673:{27,47,61}]
      isZeroRemT_E <= io_mulAddResult_3[53:0] == 54'h0 & (~sqrtOp_PC | io_mulAddResult_3[55:54] == 2'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:118:30, :146:30, :294:32, :649:36, :675:{21,29,38}, :676:{30,41,50}]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
      `FIRRTL_BEFORE_INITIAL	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:19];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
    initial begin	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
        `INIT_RANDOM_PROLOG_	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
        for (logic [4:0] i = 5'h0; i < 5'h14; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
        end	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
        cycleNum_A = _RANDOM[5'h0][2:0];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34]
        cycleNum_B = _RANDOM[5'h0][6:3];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :87:34]
        cycleNum_C = _RANDOM[5'h0][9:7];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :88:34]
        cycleNum_E = _RANDOM[5'h0][12:10];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :89:34]
        valid_PA = _RANDOM[5'h0][13];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :91:34]
        sqrtOp_PA = _RANDOM[5'h0][14];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :92:30]
        majorExc_PA = _RANDOM[5'h0][15];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :93:30]
        isNaN_PA = _RANDOM[5'h0][16];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :95:30]
        isInf_PA = _RANDOM[5'h0][17];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :96:30]
        isZero_PA = _RANDOM[5'h0][18];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :97:30]
        sign_PA = _RANDOM[5'h0][19];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :98:30]
        sExp_PA = {_RANDOM[5'h0][31:20], _RANDOM[5'h1][0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :86:34, :99:30]
        fractB_PA = {_RANDOM[5'h1][31:1], _RANDOM[5'h2][20:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :99:30, :100:30]
        fractA_PA = {_RANDOM[5'h2][31:21], _RANDOM[5'h3], _RANDOM[5'h4][8:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :100:30, :101:30]
        roundingMode_PA = _RANDOM[5'h4][11:9];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :102:30]
        valid_PB = _RANDOM[5'h4][12];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :104:34]
        sqrtOp_PB = _RANDOM[5'h4][13];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :105:30]
        majorExc_PB = _RANDOM[5'h4][14];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :106:30]
        isNaN_PB = _RANDOM[5'h4][15];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :108:30]
        isInf_PB = _RANDOM[5'h4][16];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :109:30]
        isZero_PB = _RANDOM[5'h4][17];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :110:30]
        sign_PB = _RANDOM[5'h4][18];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :111:30]
        sExp_PB = _RANDOM[5'h4][31:19];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :101:30, :112:30]
        bit0FractA_PB = _RANDOM[5'h5][0];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :113:30]
        fractB_PB = {_RANDOM[5'h5][31:1], _RANDOM[5'h6][20:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :113:30, :114:30]
        roundingMode_PB = _RANDOM[5'h6][23:21];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :115:30]
        valid_PC = _RANDOM[5'h6][24];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :117:34]
        sqrtOp_PC = _RANDOM[5'h6][25];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :118:30]
        majorExc_PC = _RANDOM[5'h6][26];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :119:30]
        isNaN_PC = _RANDOM[5'h6][27];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :121:30]
        isInf_PC = _RANDOM[5'h6][28];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :122:30]
        isZero_PC = _RANDOM[5'h6][29];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :123:30]
        sign_PC = _RANDOM[5'h6][30];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :124:30]
        sExp_PC = {_RANDOM[5'h6][31], _RANDOM[5'h7][11:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :114:30, :125:30]
        bit0FractA_PC = _RANDOM[5'h7][12];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :125:30, :126:30]
        fractB_PC = {_RANDOM[5'h7][31:13], _RANDOM[5'h8], _RANDOM[5'h9][0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :125:30, :127:30]
        roundingMode_PC = _RANDOM[5'h9][3:1];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :127:30, :128:30]
        fractR0_A = _RANDOM[5'h9][12:4];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :127:30, :130:30]
        hiSqrR0_A_sqrt = _RANDOM[5'h9][22:13];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :127:30, :132:30]
        partNegSigma0_A = {_RANDOM[5'h9][31:23], _RANDOM[5'hA][11:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :127:30, :133:30]
        nextMulAdd9A_A = _RANDOM[5'hA][20:12];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :133:30, :134:30]
        nextMulAdd9B_A = _RANDOM[5'hA][29:21];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :133:30, :135:30]
        ER1_B_sqrt = {_RANDOM[5'hA][31:30], _RANDOM[5'hB][14:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :133:30, :136:30]
        ESqrR1_B_sqrt = {_RANDOM[5'hB][31:15], _RANDOM[5'hC][14:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :136:30, :138:30]
        sigX1_B = {_RANDOM[5'hC][31:15], _RANDOM[5'hD], _RANDOM[5'hE][8:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :138:30, :139:30]
        sqrSigma1_C = {_RANDOM[5'hE][31:9], _RANDOM[5'hF][9:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :139:30, :140:30]
        sigXN_C = {_RANDOM[5'hF][31:10], _RANDOM[5'h10], _RANDOM[5'h11][3:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :140:30, :141:30]
        u_C_sqrt = {_RANDOM[5'h11][31:4], _RANDOM[5'h12][2:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :141:30, :142:30]
        E_E_div = _RANDOM[5'h12][3];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :142:30, :143:30]
        sigT_E = {_RANDOM[5'h12][31:4], _RANDOM[5'h13][25:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :142:30, :144:30]
        isNegRemT_E = _RANDOM[5'h13][26];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :144:30, :145:30]
        isZeroRemT_E = _RANDOM[5'h13][27];	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :144:30, :146:30]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
      `FIRRTL_AFTER_INITIAL	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_inReady_div = io_inReady_div_0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :430:{18,35,52,69}, :431:{27,39,51,68}, :432:22]
  assign io_inReady_sqrt = io_inReady_sqrt_0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :434:{18,35,52,69}, :435:26]
  assign io_usingMulAdd = {cyc_A4 | cyc_A3_div | cyc_A1_div | cycleNum_B == 4'hA | cyc_B9_sqrt | cyc_B7_sqrt | cyc_B6 | cyc_B5_sqrt | cyc_B3_sqrt | cyc_B2_div | cyc_B1_sqrt | cyc_C4, cyc_A3 | cyc_A2 & ~sqrtOp_PA | cyc_B9_sqrt | cyc_B8_sqrt | cyc_B6 | cyc_B5 | cyc_B4_sqrt | cyc_B2_sqrt | cyc_B1 & ~sqrtOp_PB | cyc_C6_sqrt | cyc_C3, cyc_A2 | cyc_A1_div | cyc_B8_sqrt | cyc_B7_sqrt | cyc_B5 | cyc_B4 | cyc_B3_sqrt | cyc_B1_sqrt | cyc_C5 | cyc_C2, io_latchMulAddA_0_0 | cyc_B6 | cyc_B2_sqrt};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :87:34, :92:30, :105:30, :231:30, :232:30, :233:30, :236:{29,32}, :237:29, :238:29, :252:36, :253:36, :254:36, :255:36, :257:30, :258:30, :259:30, :262:30, :267:32, :268:29, :269:29, :272:{30,42}, :273:{30,42}, :274:30, :275:30, :276:30, :283:35, :285:30, :286:30, :287:30, :288:30, :577:{31,45,55,65}, :578:{25,35}, :603:{12,20,34,48}, :604:{30,45,60,70}, :605:{29,44,58,73}, :607:{20,34}, :608:{29,44,54,64}, :609:{29,44,58,73}, :611:{20,34}, :612:{29,44,54,64}, :613:{29,44,54}, :615:{31,41}]
  assign io_latchMulAddA_0 = io_latchMulAddA_0_0;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :577:{31,45,55,65}, :578:{25,35}]
  assign io_mulAddA_0 = {1'h0, {_io_mulAddA_0_T_6[52:46], {_io_mulAddA_0_T_6[45:34], _io_mulAddA_0_T_6[33:0] | zSigma1_B4[45:12]} | (cyc_B3 | cyc_C6_sqrt ? io_mulAddResult_3[104:59] : 46'h0) | (cyc_C4 & ~sqrtOp_PB ? {sigXN_C[57:25], 13'h0} : 46'h0) | (cyc_C4_sqrt ? {u_C_sqrt, 15'h0} : 46'h0)} | (cyc_C1_div ? {1'h1, fractB_PC} : 53'h0)} | zComplSigT_C1_sqrt;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :105:30, :127:30, :141:30, :142:30, :260:30, :267:32, :283:35, :286:30, :292:29, :295:29, :298:30, :419:28, :580:63, :581:63, :582:63, :583:{19,67}, :585:{12,20,48,63}, :586:{12,43,51,63}, :587:{12,44,63}, :588:{12,63}, :633:22, :644:12]
  assign io_latchMulAddB_0 = _io_latchMulAddB_0_T | cyc_B6_sqrt | cyc_B4 | cyc_C6_sqrt | cyc_C4 | cyc_C1;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :259:30, :271:{30,42}, :283:35, :286:30, :289:30, :577:16, :591:{31,46,56}, :592:{25,35}]
  assign io_mulAddB_0 = {_zComplSigT_C1_T_5_53, _io_mulAddB_0_T_7[52:46] | _GEN[52:46], _GEN_2[45:33] | _GEN[45:33], {_GEN_2[32:30], _GEN_2[29:0] | (cyc_C6_sqrt ? sqrSigma1_C[30:1] : 30'h0)} | (cyc_C4 ? sqrSigma1_C : 33'h0) | _GEN[32:0]};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :140:30, :283:35, :286:30, :595:51, :596:51, :597:55, :598:{12,37,51}, :599:{12,51}, :641:11]
  assign io_mulAddC_2 = {_io_mulAddC_2_T_8[104:56], {_io_mulAddC_2_T_8[55:54], _io_mulAddC_2_T_8[53:0] | (cyc_E3 & ~sqrtOp_PC & ~E_E_div ? {bit0FractA_PC, 53'h0} : 54'h0)} | (cyc_E3 & sqrtOp_PC ? {(sExp_PC[0] ? {fractB_PC[0], 1'h0} : {fractB_PC[1] ^ fractB_PC[0], fractB_PC[0]}) ^ {~(sigT_E[0]), 1'h0}, 54'h0} : 56'h0)};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :118:30, :125:30, :126:30, :127:30, :143:30, :144:30, :294:32, :308:30, :313:29, :318:30, :620:62, :621:62, :622:{12,24,27,51,62}, :623:12, :624:{17,25}, :625:{25,28}, :626:{26,30,44}, :627:{16,20,28,32}, :628:14]
  assign io_rawOutValid_div = leaving_PC & ~sqrtOp_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :118:30, :294:32, :422:28, :699:39]
  assign io_rawOutValid_sqrt = leaving_PC & sqrtOp_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :118:30, :422:28, :700:39]
  assign io_roundingModeOut = roundingMode_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :128:30]
  assign io_invalidExc = majorExc_PC & isNaN_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :119:30, :121:30, :702:40]
  assign io_infiniteExc = majorExc_PC & ~isNaN_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :119:30, :121:30, :418:25, :703:40]
  assign io_rawOut_isNaN = isNaN_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :121:30]
  assign io_rawOut_isInf = isInf_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :122:30]
  assign io_rawOut_isZero = isZero_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :123:30]
  assign io_rawOut_sign = sign_PC;	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :124:30]
  assign io_rawOut_sExp = (~sqrtOp_PC & E_E_div ? sExp_PC : 13'h0) | (sqrtOp_PC | E_E_div ? 13'h0 : sExp_PC + 13'h1) | (sqrtOp_PC ? {sExp_PC[12], sExp_PC[12:1]} + 13'h400 : 13'h0);	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :118:30, :125:30, :143:30, :294:32, :694:29, :709:{12,25,72}, :710:{12,72}, :711:{12,47,52}]
  assign io_rawOut_sig = {(sqrtOp_PC ? ~isNegRemT_E & ~isZeroRemT_E : isNegRemT_E) ? _GEN_3 : _GEN_3 + 55'h1, ~isZeroRemT_E};	// @[generators/hardfloat/hardfloat/src/main/scala/DivSqrtRecF64_mulAddZ31.scala:51:7, :118:30, :145:30, :146:30, :686:{12,24,38,41}, :695:27, :712:{25,56}]
endmodule

