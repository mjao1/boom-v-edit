// Generated by CIRCT unknown git version
// VCS coverage exclude_file
module lb_32x128(	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
  input  [4:0]   R0_addr,
  input          R0_en,
  input          R0_clk,
  output [127:0] R0_data,
  input  [4:0]   W0_addr,
  input          W0_en,
  input          W0_clk,
  input  [127:0] W0_data
);

  reg [127:0] Memory[0:31];	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
  always @(posedge W0_clk) begin	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
    if (W0_en & 1'h1)	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
      Memory[W0_addr] <= W0_data;	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
    reg [127:0] _RANDOM_MEM;	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
    initial begin	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
      `INIT_RANDOM_PROLOG_	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
      `ifdef RANDOMIZE_MEM_INIT	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          for (logic [7:0] j = 8'h0; j < 8'h80; j += 8'h20) begin
            _RANDOM_MEM[j +: 32] = `RANDOM;	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
          end
          Memory[i[4:0]] = _RANDOM_MEM;	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
        end
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 128'bx;	// @[generators/boom/src/main/scala/v3/lsu/mshrs.scala:580:15]
endmodule

