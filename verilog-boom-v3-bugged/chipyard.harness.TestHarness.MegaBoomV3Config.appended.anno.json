[
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntXbar_i1_o1",
    "group": "IntXbar_i1_o1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockSinkDomain",
    "group": "ClockSinkDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupAggregator_sbus",
    "group": "ClockGroupAggregator_sbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroup",
    "group": "ClockGroup"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FixedClockBroadcast_4",
    "group": "FixedClockBroadcast_4"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_1",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_2",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_3",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_1",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_sbus_i2_o2_a32d128s6k4z4c",
    "group": "TLXbar_sbus_i2_o2_a32d128s6k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFIFOFixer",
    "group": "TLFIFOFixer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_4",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_5",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_2",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a29d128s6k1z4u",
    "group": "Repeater_TLBundleA_a29d128s6k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget16",
    "group": "TLWidthWidget16"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_sbus_to_bus_named_cbus",
    "group": "TLInterconnectCoupler_sbus_to_bus_named_cbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_6",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_7",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_3",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleD_a32d128s5k4z4u",
    "group": "Repeater_TLBundleD_a32d128s5k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget8",
    "group": "TLWidthWidget8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_sbus_from_bus_named_fbus",
    "group": "TLInterconnectCoupler_sbus_from_bus_named_fbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget16_1",
    "group": "TLWidthWidget16"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_sbus_to_bus_named_coh",
    "group": "TLInterconnectCoupler_sbus_to_bus_named_coh"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_sbus_from_boom_tile",
    "group": "TLInterconnectCoupler_sbus_from_boom_tile"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SystemBus",
    "group": "SystemBus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupAggregator_pbus",
    "group": "ClockGroupAggregator_pbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroup_1",
    "group": "ClockGroup"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FixedClockBroadcast_2",
    "group": "FixedClockBroadcast_2"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput_1",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFIFOFixer_1",
    "group": "TLFIFOFixer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_pbus_in_i1_o1_a29d64s7k1z3u",
    "group": "TLXbar_pbus_in_i1_o1_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_8",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_9",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_4",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_pbus_out_i1_o2_a29d64s7k1z3u",
    "group": "TLXbar_pbus_out_i1_o2_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_10",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_11",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_5",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a29d64s7k1z3u",
    "group": "Queue2_TLBundleA_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a29d64s7k1z3u",
    "group": "Queue2_TLBundleD_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a29d64s7k1z3u",
    "group": "TLBuffer_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_12",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_13",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_6",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLAtomicAutomata_pbus",
    "group": "TLAtomicAutomata_pbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_14",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_15",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_7",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a29d64s7k1z3u_1",
    "group": "Queue2_TLBundleA_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a29d64s7k1z3u_1",
    "group": "Queue2_TLBundleD_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a29d64s7k1z3u_1",
    "group": "TLBuffer_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_16",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_17",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_8",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a13d64s7k1z3u",
    "group": "Repeater_TLBundleA_a13d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_BootAddrReg",
    "group": "TLFragmenter_BootAddrReg"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_pbus_to_bootaddressreg",
    "group": "TLInterconnectCoupler_pbus_to_boot-address-reg"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_18",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_19",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_9",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a29d64s7k1z3u",
    "group": "Repeater_TLBundleA_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_UART",
    "group": "TLFragmenter_UART"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_pbus_to_device_named_uart_0",
    "group": "TLInterconnectCoupler_pbus_to_device_named_uart_0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_20",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_21",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_10",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PeripheryBus_pbus",
    "group": "PeripheryBus_pbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupAggregator_fbus",
    "group": "ClockGroupAggregator_fbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroup_2",
    "group": "ClockGroup"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FixedClockBroadcast_2_1",
    "group": "FixedClockBroadcast_2"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput_2",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_22",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_23",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_11",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_24",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_25",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_12",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_fbus_i2_o1_a32d64s5k4z4u",
    "group": "TLXbar_fbus_i2_o1_a32d64s5k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_26",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_27",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_13",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a32d64s5k4z4u",
    "group": "Queue2_TLBundleA_a32d64s5k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a32d64s5k4z4u",
    "group": "Queue2_TLBundleD_a32d64s5k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a32d64s5k4z4u",
    "group": "TLBuffer_a32d64s5k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_28",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_29",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_14",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleD_a32d64s1k4z4u",
    "group": "Repeater_TLBundleD_a32d64s1k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget1",
    "group": "TLWidthWidget1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_fbus_from_debug_sb",
    "group": "TLInterconnectCoupler_fbus_from_debug_sb"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_30",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_31",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_15",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a32d64s4k4z4u",
    "group": "Queue2_TLBundleA_a32d64s4k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a32d64s4k4z4u",
    "group": "Queue2_TLBundleD_a32d64s4k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a32d64s4k4z4u",
    "group": "TLBuffer_a32d64s4k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_fbus_from_port_named_serial_tl_0_in",
    "group": "TLInterconnectCoupler_fbus_from_port_named_serial_tl_0_in"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FrontBus",
    "group": "FrontBus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupAggregator_cbus",
    "group": "ClockGroupAggregator_cbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroup_3",
    "group": "ClockGroup"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FixedClockBroadcast_7",
    "group": "FixedClockBroadcast_7"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput_3",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFIFOFixer_2",
    "group": "TLFIFOFixer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_32",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_33",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_16",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_34",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_35",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_17",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_cbus_in_i2_o1_a29d64s7k1z4u",
    "group": "TLXbar_cbus_in_i2_o1_a29d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_36",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_37",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_18",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_cbus_out_i1_o8_a29d64s7k1z4u",
    "group": "TLXbar_cbus_out_i1_o8_a29d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_38",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_39",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_19",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a29d64s7k1z4u",
    "group": "Queue2_TLBundleA_a29d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a29d64s7k1z4u",
    "group": "Queue2_TLBundleD_a29d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a29d64s7k1z4u",
    "group": "TLBuffer_a29d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_40",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_41",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_20",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLAtomicAutomata_cbus",
    "group": "TLAtomicAutomata_cbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_42",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_43",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_21",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleA_a14d64s7k1z4u",
    "group": "Queue1_TLBundleA_a14d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLError",
    "group": "TLError"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_44",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_45",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_22",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a14d64s7k1z4u",
    "group": "Queue2_TLBundleA_a14d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a14d64s7k1z4u",
    "group": "Queue2_TLBundleD_a14d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a14d64s7k1z4u",
    "group": "TLBuffer_a14d64s7k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ErrorDeviceWrapper",
    "group": "ErrorDeviceWrapper"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_46",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_47",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_23",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleA_a26d64s11k1z2u",
    "group": "Queue1_TLBundleA_a26d64s11k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleD_a26d64s11k1z2u",
    "group": "Queue1_TLBundleD_a26d64s11k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a26d64s11k1z2u",
    "group": "TLBuffer_a26d64s11k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_48",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_49",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_24",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a26d64s7k1z3u",
    "group": "Repeater_TLBundleA_a26d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_LLCCtrl",
    "group": "TLFragmenter_LLCCtrl"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_to_l2_ctrl",
    "group": "TLInterconnectCoupler_cbus_to_l2_ctrl"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a29d64s6k1z4u",
    "group": "TLBuffer_a29d64s6k1z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget8_1",
    "group": "TLWidthWidget8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_to_bus_named_pbus",
    "group": "TLInterconnectCoupler_cbus_to_bus_named_pbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_50",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_51",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_25",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a26d64s7k1z3u_1",
    "group": "Repeater_TLBundleA_a26d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_CLINT",
    "group": "TLFragmenter_CLINT"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_to_clint",
    "group": "TLInterconnectCoupler_cbus_to_clint"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_52",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_53",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_26",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a28d64s7k1z3u",
    "group": "Repeater_TLBundleA_a28d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_PLIC",
    "group": "TLFragmenter_PLIC"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_to_plic",
    "group": "TLInterconnectCoupler_cbus_to_plic"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_54",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_55",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_27",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a12d64s7k1z3u",
    "group": "Repeater_TLBundleA_a12d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_Debug",
    "group": "TLFragmenter_Debug"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_to_debug",
    "group": "TLInterconnectCoupler_cbus_to_debug"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget8_2",
    "group": "TLWidthWidget8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_to_boom_tile",
    "group": "TLInterconnectCoupler_cbus_to_boom_tile"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_56",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_57",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_28",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a17d64s7k1z3u",
    "group": "Repeater_TLBundleA_a17d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_bootrom",
    "group": "TLFragmenter_bootrom"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_to_bootrom",
    "group": "TLInterconnectCoupler_cbus_to_bootrom"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_from_port_named_custom_boot_pin",
    "group": "TLInterconnectCoupler_cbus_from_port_named_custom_boot_pin"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFIFOFixer_3",
    "group": "TLFIFOFixer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_58",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_59",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_29",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a21d64s7k1z3u",
    "group": "Queue2_TLBundleA_a21d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a21d64s7k1z3u",
    "group": "Queue2_TLBundleD_a21d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a21d64s7k1z3u",
    "group": "TLBuffer_a21d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_cbus_to_prci_ctrl",
    "group": "TLInterconnectCoupler_cbus_to_prci_ctrl"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PeripheryBus_cbus",
    "group": "PeripheryBus_cbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupAggregator_mbus",
    "group": "ClockGroupAggregator_mbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroup_4",
    "group": "ClockGroup"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FixedClockBroadcast_3",
    "group": "FixedClockBroadcast_3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput_4",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_60",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_61",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_30",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_mbus_i1_o2_a32d64s5k1z3u",
    "group": "TLXbar_mbus_i1_o2_a32d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFIFOFixer_4",
    "group": "TLFIFOFixer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_62",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_63",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_31",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_64",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_65",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_32",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ProbePicker",
    "group": "ProbePicker"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a32d64s5k1z3u",
    "group": "TLBuffer_a32d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer",
    "group": "TLBuffer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLSourceShrinker",
    "group": "TLSourceShrinker"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget8_3",
    "group": "TLWidthWidget8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_mbus_to_memory_controller_port_named_tl_mem",
    "group": "TLInterconnectCoupler_mbus_to_memory_controller_port_named_tl_mem"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_i1_o1_a32d64s5k1z3u",
    "group": "TLXbar_i1_o1_a32d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BundleMap",
    "group": "Queue2_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BundleMap_1",
    "group": "Queue2_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BundleMap_2",
    "group": "Queue2_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BundleMap_3",
    "group": "Queue2_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_1",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_2",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_3",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_4",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_5",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_6",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_7",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_8",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_9",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_10",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_11",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BundleMap_4",
    "group": "Queue2_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BundleMap_5",
    "group": "Queue2_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BundleMap_6",
    "group": "Queue2_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BundleMap_7",
    "group": "Queue2_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_12",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_13",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_14",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_15",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_16",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_17",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_18",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_19",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_20",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_21",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_22",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BundleMap_23",
    "group": "Queue1_BundleMap"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AXI4UserYanker",
    "group": "AXI4UserYanker"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AXI4IdIndexer",
    "group": "AXI4IdIndexer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_66",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_67",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_33",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_AXI4BundleW",
    "group": "Queue1_AXI4BundleW"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_AXI4BundleARW",
    "group": "Queue1_AXI4BundleARW"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLToAXI4",
    "group": "TLToAXI4"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget8_4",
    "group": "TLWidthWidget8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_mbus_to_memory_controller_port_named_axi4",
    "group": "TLInterconnectCoupler_mbus_to_memory_controller_port_named_axi4"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_mbus_to_mbusscratchpad00",
    "group": "TLInterconnectCoupler_mbus_to_mbus-scratchpad-0-0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_68",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_69",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_34",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a28d64s5k1z3u",
    "group": "Queue2_TLBundleA_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a28d64s5k1z3u",
    "group": "Queue2_TLBundleD_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a28d64s5k1z3u",
    "group": "TLBuffer_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MemoryBus",
    "group": "MemoryBus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupAggregator_coh",
    "group": "ClockGroupAggregator_coh"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroup_5",
    "group": "ClockGroup"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FixedClockBroadcast_1",
    "group": "FixedClockBroadcast_1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput_5",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_70",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_71",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_35",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_RegMapperInput_i9_m8",
    "group": "Queue1_RegMapperInput_i9_m8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|InclusiveCacheControl",
    "group": "InclusiveCacheControl"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_72",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_73",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_36",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a32d64s4k3z3c",
    "group": "Queue2_TLBundleA_a32d64s4k3z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SourceA",
    "group": "SourceA"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SourceB",
    "group": "SourceB"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue12_TLBundleC_a32d64s4k3z3c",
    "group": "Queue12_TLBundleC_a32d64s4k3z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SourceC",
    "group": "SourceC"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue3_BankedStoreInnerDecoded",
    "group": "Queue3_BankedStoreInnerDecoded"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Atomics",
    "group": "Atomics"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SourceD",
    "group": "SourceD"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleE_a32d64s4k3z3c",
    "group": "Queue2_TLBundleE_a32d64s4k3z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SourceE",
    "group": "SourceE"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_SourceXRequest",
    "group": "Queue1_SourceXRequest"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SourceX",
    "group": "SourceX"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ListBuffer_PutBufferAEntry_q40_e40",
    "group": "ListBuffer_PutBufferAEntry_q40_e40"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SinkA",
    "group": "SinkA"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleC_a32d128s6k4z3c",
    "group": "Queue2_TLBundleC_a32d128s6k4z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BankedStoreInnerAddress",
    "group": "Queue1_BankedStoreInnerAddress"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ListBuffer_PutBufferCEntry_q2_e8",
    "group": "ListBuffer_PutBufferCEntry_q2_e8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SinkC",
    "group": "SinkC"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a32d64s4k3z3c",
    "group": "Queue2_TLBundleD_a32d64s4k3z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SinkD",
    "group": "SinkD"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SinkE",
    "group": "SinkE"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_SinkXRequest",
    "group": "Queue1_SinkXRequest"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SinkX",
    "group": "SinkX"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_DirectoryWrite",
    "group": "Queue1_DirectoryWrite"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Directory",
    "group": "Directory"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BankedStore",
    "group": "BankedStore"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ListBuffer_QueuedRequest_q36_e28",
    "group": "ListBuffer_QueuedRequest_q36_e28"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_1",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_2",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_3",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_4",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_5",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_6",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_7",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_8",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_9",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_10",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MSHR_11",
    "group": "MSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|InclusiveCacheBankScheduler",
    "group": "InclusiveCacheBankScheduler"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|InclusiveCache",
    "group": "InclusiveCache"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFilter",
    "group": "TLFilter"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_74",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_75",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_37",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleA_a32d128s6k4z3c",
    "group": "Queue1_TLBundleA_a32d128s6k4z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleD_a32d128s6k4z3c",
    "group": "Queue1_TLBundleD_a32d128s6k4z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a32d128s6k4z3c",
    "group": "TLBuffer_a32d128s6k4z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a32d64s4k3z3c",
    "group": "TLBuffer_a32d64s4k3z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_76",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_77",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_38",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IDPool",
    "group": "IDPool"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a32d64s4k3z3c_1",
    "group": "Queue2_TLBundleD_a32d64s4k3z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a32d64s4k3z3c_2",
    "group": "Queue2_TLBundleD_a32d64s4k3z3c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLCacheCork",
    "group": "TLCacheCork"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLJbar",
    "group": "TLJbar"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_78",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_79",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_39",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BankBinder",
    "group": "BankBinder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget8_5",
    "group": "TLWidthWidget8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLInterconnectCoupler_coh_to_bus_named_mbus",
    "group": "TLInterconnectCoupler_coh_to_bus_named_mbus"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CoherenceManagerWrapper",
    "group": "CoherenceManagerWrapper"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_80",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_81",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_40",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_82",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_83",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_41",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_MasterXbar_BoomTile_i2_o1_a32d128s5k4z4c",
    "group": "TLXbar_MasterXbar_BoomTile_i2_o1_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_SlaveXbar_BoomTile_i0_o0_a1d8s1k1z1u",
    "group": "TLXbar_SlaveXbar_BoomTile_i0_o0_a1d8s1k1z1u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntXbar_i4_o1",
    "group": "IntXbar_i4_o1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_UInt1",
    "group": "BundleBridgeNexus_UInt<1>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_UInt32",
    "group": "BundleBridgeNexus_UInt<32>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput_6",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_TraceAux",
    "group": "BundleBridgeNexus_TraceAux"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput_7",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget16_2",
    "group": "TLWidthWidget16"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomWritebackUnit",
    "group": "BoomWritebackUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomProbeUnit",
    "group": "BoomProbeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|NLPrefetcher",
    "group": "NLPrefetcher"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter8_LineBufferReadReq",
    "group": "Arbiter8_LineBufferReadReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter8_LineBufferWriteReq",
    "group": "Arbiter8_LineBufferWriteReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter8_L1MetaWriteReq",
    "group": "Arbiter8_L1MetaWriteReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter8_L1MetaReadReq",
    "group": "Arbiter8_L1MetaReadReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter8_WritebackReq",
    "group": "Arbiter8_WritebackReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter8_BoomDCacheReqInternal",
    "group": "Arbiter8_BoomDCacheReqInternal"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter9_BoomDCacheResp",
    "group": "Arbiter9_BoomDCacheResp"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter8_L1DataWriteReq",
    "group": "Arbiter8_L1DataWriteReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHR",
    "group": "BoomMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_1",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHR_1",
    "group": "BoomMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_2",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHR_2",
    "group": "BoomMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_3",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHR_3",
    "group": "BoomMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_4",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHR_4",
    "group": "BoomMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_5",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHR_5",
    "group": "BoomMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_6",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHR_6",
    "group": "BoomMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_7",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHR_7",
    "group": "BoomMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter1_Bool",
    "group": "Arbiter1_Bool"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomIOMSHR",
    "group": "BoomIOMSHR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_8",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomMSHRFile",
    "group": "BoomMSHRFile"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|L1MetadataArray",
    "group": "L1MetadataArray"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|L1MetadataArray_1",
    "group": "L1MetadataArray"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter2_L1MetaWriteReq",
    "group": "Arbiter2_L1MetaWriteReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter6_BoomL1MetaReadReq",
    "group": "Arbiter6_BoomL1MetaReadReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomDuplicatedDataArray",
    "group": "BoomDuplicatedDataArray"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter2_L1DataWriteReq",
    "group": "Arbiter2_L1DataWriteReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter3_BoomL1DataReadReq",
    "group": "Arbiter3_BoomL1DataReadReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_1",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter2_WritebackReq",
    "group": "Arbiter2_WritebackReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter2_TLBundleC_a32d128s4k4z4c",
    "group": "Arbiter2_TLBundleC_a32d128s4k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AMOALU",
    "group": "AMOALU"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomNonBlockingDCache",
    "group": "BoomNonBlockingDCache"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_2",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ICache",
    "group": "ICache"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorColumn",
    "group": "LoopBranchPredictorColumn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorColumn_1",
    "group": "LoopBranchPredictorColumn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorColumn_2",
    "group": "LoopBranchPredictorColumn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorColumn_3",
    "group": "LoopBranchPredictorColumn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorBank",
    "group": "LoopBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_1",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_2",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_3",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_4",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_5",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_3",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_4",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_5",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_6",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageBranchPredictorBank",
    "group": "TageBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BTBBranchPredictorBank",
    "group": "BTBBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BIMBranchPredictorBank",
    "group": "BIMBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FAMicroBTBBranchPredictorBank",
    "group": "FAMicroBTBBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ComposedBranchPredictorBank",
    "group": "ComposedBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorColumn_4",
    "group": "LoopBranchPredictorColumn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorColumn_5",
    "group": "LoopBranchPredictorColumn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorColumn_6",
    "group": "LoopBranchPredictorColumn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorColumn_7",
    "group": "LoopBranchPredictorColumn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LoopBranchPredictorBank_1",
    "group": "LoopBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_6",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_7",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_8",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_9",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_10",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageTable_11",
    "group": "TageTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_7",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_8",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_9",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MaxPeriodFibonacciLFSR_10",
    "group": "MaxPeriodFibonacciLFSR"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TageBranchPredictorBank_1",
    "group": "TageBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BTBBranchPredictorBank_1",
    "group": "BTBBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BIMBranchPredictorBank_1",
    "group": "BIMBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FAMicroBTBBranchPredictorBank_1",
    "group": "FAMicroBTBBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ComposedBranchPredictorBank_1",
    "group": "ComposedBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|NullLocalBranchPredictorBank",
    "group": "NullLocalBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|NullLocalBranchPredictorBank_1",
    "group": "NullLocalBranchPredictorBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchPredictor",
    "group": "BranchPredictor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomRAS",
    "group": "BoomRAS"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PMPChecker_s4",
    "group": "PMPChecker_s4"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PMAChecker",
    "group": "PMAChecker"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_1",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_2",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_3",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_4",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_5",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_6",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_7",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_8",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_9",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_10",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_11",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_12",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_TLBEntryData_13",
    "group": "OptimizationBarrier_TLBEntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ITLB",
    "group": "ITLB"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_FrontendResp",
    "group": "Queue1_FrontendResp"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_BranchPredictionBundle",
    "group": "Queue1_BranchPredictionBundle"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_1",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_1",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_1",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_2",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_2",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_2",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_3",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_3",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_3",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_4",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_4",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_4",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_5",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_6",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_5",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_6",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_7",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_7",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_5",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_8",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_8",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_6",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_9",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_9",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_7",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RVCExpander_10",
    "group": "RVCExpander"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchDecode_10",
    "group": "BranchDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_BranchPredictionUpdate",
    "group": "Queue2_BranchPredictionUpdate"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_FetchBundle",
    "group": "Queue1_FetchBundle"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FetchBuffer",
    "group": "FetchBuffer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FetchTargetQueue",
    "group": "FetchTargetQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter2_BranchPredictionUpdate",
    "group": "Arbiter2_BranchPredictionUpdate"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomFrontend",
    "group": "BoomFrontend"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLWidthWidget16_3",
    "group": "TLWidthWidget16"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a32d128s5k4z4c",
    "group": "TLBuffer_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_1",
    "group": "TLBuffer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_8",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MemAddrCalcUnit",
    "group": "MemAddrCalcUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUExeUnit",
    "group": "ALUExeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BreakpointUnit_9",
    "group": "BreakpointUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MemAddrCalcUnit_1",
    "group": "MemAddrCalcUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUExeUnit_1",
    "group": "ALUExeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RocketALU",
    "group": "RocketALU"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUUnit",
    "group": "ALUUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UOPCodeFPUDecoder",
    "group": "UOPCodeFPUDecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie7_is64_oe8_os24",
    "group": "RoundAnyRawFNToRecFN_ie7_is64_oe8_os24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|INToRecFN_i64_e8_s24",
    "group": "INToRecFN_i64_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie7_is64_oe11_os53",
    "group": "RoundAnyRawFNToRecFN_ie7_is64_oe11_os53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|INToRecFN_i64_e11_s53",
    "group": "INToRecFN_i64_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntToFP",
    "group": "IntToFP"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntToFPUnit",
    "group": "IntToFPUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_9",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUExeUnit_2",
    "group": "ALUExeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RocketALU_1",
    "group": "RocketALU"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUUnit_1",
    "group": "ALUUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUExeUnit_3",
    "group": "ALUExeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RocketALU_2",
    "group": "RocketALU"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUUnit_2",
    "group": "ALUUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PipelinedMultiplier",
    "group": "PipelinedMultiplier"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PipelinedMulUnit",
    "group": "PipelinedMulUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUExeUnit_4",
    "group": "ALUExeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RocketALU_3",
    "group": "RocketALU"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUUnit_3",
    "group": "ALUUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulDiv",
    "group": "MulDiv"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DivUnit",
    "group": "DivUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ALUExeUnit_5",
    "group": "ALUExeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UOPCodeFPUDecoder_1",
    "group": "UOPCodeFPUDecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNToRaw_preMul_e11_s53",
    "group": "MulAddRecFNToRaw_preMul_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNToRaw_postMul_e11_s53",
    "group": "MulAddRecFNToRaw_postMul_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie11_is55_oe11_os53",
    "group": "RoundAnyRawFNToRecFN_ie11_is55_oe11_os53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundRawFNToRecFN_e11_s53",
    "group": "RoundRawFNToRecFN_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNPipe_l2_e11_s53",
    "group": "MulAddRecFNPipe_l2_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPUFMAPipe_l4_f64",
    "group": "FPUFMAPipe_l4_f64"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FMADecoder",
    "group": "FMADecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNToRaw_preMul_e8_s24",
    "group": "MulAddRecFNToRaw_preMul_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNToRaw_postMul_e8_s24",
    "group": "MulAddRecFNToRaw_postMul_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie8_is26_oe8_os24",
    "group": "RoundAnyRawFNToRecFN_ie8_is26_oe8_os24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundRawFNToRecFN_e8_s24",
    "group": "RoundRawFNToRecFN_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNPipe_l2_e8_s24",
    "group": "MulAddRecFNPipe_l2_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPUFMAPipe_l4_f32",
    "group": "FPUFMAPipe_l4_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FMADecoder_1",
    "group": "FMADecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CompareRecFN",
    "group": "CompareRecFN"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToIN_e11_s53_i64",
    "group": "RecFNToIN_e11_s53_i64"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToIN_e11_s53_i32",
    "group": "RecFNToIN_e11_s53_i32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPToInt",
    "group": "FPToInt"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FMADecoder_2",
    "group": "FMADecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie11_is53_oe8_os24",
    "group": "RoundAnyRawFNToRecFN_ie11_is53_oe8_os24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToRecFN",
    "group": "RecFNToRecFN"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPToFP",
    "group": "FPToFP"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPU",
    "group": "FPU"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPUUnit",
    "group": "FPUUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UOPCodeFDivDecoder",
    "group": "UOPCodeFDivDecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie8_is24_oe11_os53",
    "group": "RoundAnyRawFNToRecFN_ie8_is24_oe11_os53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToRecFN_1",
    "group": "RecFNToRecFN"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie8_is24_oe11_os53_1",
    "group": "RoundAnyRawFNToRecFN_ie8_is24_oe11_os53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToRecFN_2",
    "group": "RecFNToRecFN"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DivSqrtRecF64ToRaw_mulAddZ31",
    "group": "DivSqrtRecF64ToRaw_mulAddZ31"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie11_is55_oe11_os53_1",
    "group": "RoundAnyRawFNToRecFN_ie11_is55_oe11_os53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundRawFNToRecFN_e11_s53_1",
    "group": "RoundRawFNToRecFN_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DivSqrtRecF64_mulAddZ31",
    "group": "DivSqrtRecF64_mulAddZ31"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Mul54",
    "group": "Mul54"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DivSqrtRecF64",
    "group": "DivSqrtRecF64"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie11_is53_oe8_os24_1",
    "group": "RoundAnyRawFNToRecFN_ie11_is53_oe8_os24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToRecFN_3",
    "group": "RecFNToRecFN"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FDivSqrtUnit",
    "group": "FDivSqrtUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_10",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchKillableQueue_11",
    "group": "BranchKillableQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter2_ExeUnitResp",
    "group": "Arbiter2_ExeUnitResp"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPUExeUnit",
    "group": "FPUExeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UOPCodeFPUDecoder_2",
    "group": "UOPCodeFPUDecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNToRaw_preMul_e11_s53_1",
    "group": "MulAddRecFNToRaw_preMul_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNToRaw_postMul_e11_s53_1",
    "group": "MulAddRecFNToRaw_postMul_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie11_is55_oe11_os53_2",
    "group": "RoundAnyRawFNToRecFN_ie11_is55_oe11_os53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundRawFNToRecFN_e11_s53_2",
    "group": "RoundRawFNToRecFN_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNPipe_l2_e11_s53_1",
    "group": "MulAddRecFNPipe_l2_e11_s53"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPUFMAPipe_l4_f64_1",
    "group": "FPUFMAPipe_l4_f64"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FMADecoder_3",
    "group": "FMADecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNToRaw_preMul_e8_s24_1",
    "group": "MulAddRecFNToRaw_preMul_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNToRaw_postMul_e8_s24_1",
    "group": "MulAddRecFNToRaw_postMul_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie8_is26_oe8_os24_1",
    "group": "RoundAnyRawFNToRecFN_ie8_is26_oe8_os24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundRawFNToRecFN_e8_s24_1",
    "group": "RoundRawFNToRecFN_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|MulAddRecFNPipe_l2_e8_s24_1",
    "group": "MulAddRecFNPipe_l2_e8_s24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPUFMAPipe_l4_f32_1",
    "group": "FPUFMAPipe_l4_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FMADecoder_4",
    "group": "FMADecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CompareRecFN_1",
    "group": "CompareRecFN"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToIN_e11_s53_i64_1",
    "group": "RecFNToIN_e11_s53_i64"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToIN_e11_s53_i32_1",
    "group": "RecFNToIN_e11_s53_i32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPToInt_1",
    "group": "FPToInt"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FMADecoder_5",
    "group": "FMADecoder"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RoundAnyRawFNToRecFN_ie11_is53_oe8_os24_2",
    "group": "RoundAnyRawFNToRecFN_ie11_is53_oe8_os24"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RecFNToRecFN_4",
    "group": "RecFNToRecFN"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPToFP_1",
    "group": "FPToFP"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPU_1",
    "group": "FPU"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPUUnit_1",
    "group": "FPUUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FPUExeUnit_1",
    "group": "FPUExeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_1",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_2",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_3",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_4",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_5",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_6",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_7",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_8",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_9",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_10",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_11",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_12",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_13",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_14",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_15",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_16",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_17",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_18",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_19",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_20",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_21",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_22",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_23",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_24",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_25",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_26",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_27",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_28",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_29",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_30",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_31",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueUnitCollapsing",
    "group": "IssueUnitCollapsing"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterFileSynthesizable",
    "group": "RegisterFileSynthesizable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterReadDecode",
    "group": "RegisterReadDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterReadDecode_1",
    "group": "RegisterReadDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterRead",
    "group": "RegisterRead"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter2_ExeUnitResp_1",
    "group": "Arbiter2_ExeUnitResp"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FpPipeline",
    "group": "FpPipeline"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DecodeUnit",
    "group": "DecodeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DecodeUnit_1",
    "group": "DecodeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DecodeUnit_2",
    "group": "DecodeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DecodeUnit_3",
    "group": "DecodeUnit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BranchMaskGenerationLogic",
    "group": "BranchMaskGenerationLogic"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RenameMapTable",
    "group": "RenameMapTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RenameFreeList",
    "group": "RenameFreeList"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RenameBusyTable",
    "group": "RenameBusyTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RenameStage",
    "group": "RenameStage"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RenameMapTable_1",
    "group": "RenameMapTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RenameFreeList_1",
    "group": "RenameFreeList"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RenameBusyTable_1",
    "group": "RenameBusyTable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RenameStage_1",
    "group": "RenameStage"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PredRenameStage",
    "group": "PredRenameStage"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_32",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_33",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_34",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_35",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_36",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_37",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_38",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_39",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_40",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_41",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_42",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_43",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_44",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_45",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_46",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_47",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_48",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_49",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_50",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_51",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_52",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_53",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_54",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_55",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueUnitCollapsing_1",
    "group": "IssueUnitCollapsing"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_56",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_57",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_58",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_59",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_60",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_61",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_62",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_63",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_64",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_65",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_66",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_67",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_68",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_69",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_70",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_71",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_72",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_73",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_74",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_75",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_76",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_77",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_78",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_79",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_80",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_81",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_82",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_83",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_84",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_85",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_86",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_87",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_88",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_89",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_90",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_91",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_92",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_93",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_94",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueSlot_95",
    "group": "IssueSlot"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IssueUnitCollapsing_2",
    "group": "IssueUnitCollapsing"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BasicDispatcher",
    "group": "BasicDispatcher"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterFileSynthesizable_1",
    "group": "RegisterFileSynthesizable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterFileSynthesizable_2",
    "group": "RegisterFileSynthesizable"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter2_ExeUnitResp_2",
    "group": "Arbiter2_ExeUnitResp"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterReadDecode_2",
    "group": "RegisterReadDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterReadDecode_3",
    "group": "RegisterReadDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterReadDecode_4",
    "group": "RegisterReadDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterReadDecode_5",
    "group": "RegisterReadDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterReadDecode_6",
    "group": "RegisterReadDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterReadDecode_7",
    "group": "RegisterReadDecode"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|RegisterRead_1",
    "group": "RegisterRead"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Rob",
    "group": "Rob"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CSRFile",
    "group": "CSRFile"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter3_UInt6",
    "group": "Arbiter3_UInt<6>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomCore",
    "group": "BoomCore"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_1",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PMPChecker_s3",
    "group": "PMPChecker_s3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PMPChecker_s3_1",
    "group": "PMPChecker_s3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_2",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_3",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_4",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_5",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_6",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_7",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_8",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_9",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_10",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_11",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_12",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_13",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_14",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_15",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_16",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_17",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_18",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_19",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_20",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_21",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_22",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_23",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_24",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_25",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_26",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_27",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_28",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_29",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_30",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_31",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_32",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_33",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_34",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_35",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_36",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_37",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_38",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_39",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_40",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_41",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_42",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_43",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_44",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_45",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_46",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_47",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_48",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_49",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_50",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_51",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_52",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_53",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_54",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_55",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_56",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_57",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_58",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_59",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_60",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_61",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_62",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_63",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_64",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_65",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_66",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_67",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_68",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_69",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_70",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_71",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_72",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_73",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_74",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_75",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_76",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_EntryData_77",
    "group": "OptimizationBarrier_EntryData"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|NBDTLB",
    "group": "NBDTLB"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ForwardingAgeLogic",
    "group": "ForwardingAgeLogic"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ForwardingAgeLogic_1",
    "group": "ForwardingAgeLogic"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LSU",
    "group": "LSU"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Arbiter3_Valid_PTWReq",
    "group": "Arbiter3_Valid_PTWReq"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_UInt",
    "group": "OptimizationBarrier_UInt"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|OptimizationBarrier_PTE",
    "group": "OptimizationBarrier_PTE"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PTW",
    "group": "PTW"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|HellaCacheArbiter",
    "group": "HellaCacheArbiter"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BoomTile",
    "group": "BoomTile"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|HierarchicalElementResetDomain",
    "group": "HierarchicalElementResetDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FixedClockBroadcast_1_1",
    "group": "FixedClockBroadcast_1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_84",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_85",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_42",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a32d128s5k4z4c",
    "group": "Queue2_TLBundleA_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a32d128s5k4z4c",
    "group": "Queue2_TLBundleD_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleB_a32d128s5k4z4c",
    "group": "Queue2_TLBundleB_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleC_a32d128s5k4z4c",
    "group": "Queue2_TLBundleC_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleE_a32d128s5k4z4c",
    "group": "Queue2_TLBundleE_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a32d128s5k4z4c_1",
    "group": "TLBuffer_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_2",
    "group": "TLBuffer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|NonSyncResetSynchronizerPrimitiveShiftReg_d3",
    "group": "NonSyncResetSynchronizerPrimitiveShiftReg_d3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SynchronizerShiftReg_w1_d3",
    "group": "SynchronizerShiftReg_w1_d3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncAsyncCrossingSink_n1x1",
    "group": "IntSyncAsyncCrossingSink_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncSyncCrossingSink_n1x2",
    "group": "IntSyncSyncCrossingSink_n1x2"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncSyncCrossingSink_n1x1",
    "group": "IntSyncSyncCrossingSink_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncSyncCrossingSink_n1x1_1",
    "group": "IntSyncSyncCrossingSink_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncSyncCrossingSink_n1x1_2",
    "group": "IntSyncSyncCrossingSink_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w1_i0",
    "group": "AsyncResetRegVec_w1_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncCrossingSource_n1x1",
    "group": "IntSyncCrossingSource_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncSyncCrossingSink_n1x1_3",
    "group": "IntSyncSyncCrossingSink_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w1_i0_1",
    "group": "AsyncResetRegVec_w1_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncCrossingSource_n1x1_1",
    "group": "IntSyncCrossingSource_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncSyncCrossingSink_n1x1_4",
    "group": "IntSyncSyncCrossingSink_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w1_i0_2",
    "group": "AsyncResetRegVec_w1_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncCrossingSource_n1x1_2",
    "group": "IntSyncCrossingSource_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TilePRCIDomain",
    "group": "TilePRCIDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntXbar_i1_o1_1",
    "group": "IntXbar_i1_o1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntXbar_i1_o1_2",
    "group": "IntXbar_i1_o1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntXbar_i1_o1_3",
    "group": "IntXbar_i1_o1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_UInt1_1",
    "group": "BundleBridgeNexus_UInt<1>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_UInt32_1",
    "group": "BundleBridgeNexus_UInt<32>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_86",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_87",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_43",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CLINT",
    "group": "CLINT"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w2_i0",
    "group": "AsyncResetRegVec_w2_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncCrossingSource_n1x2",
    "group": "IntSyncCrossingSource_n1x2"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CLINTClockSinkDomain",
    "group": "CLINTClockSinkDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_88",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_89",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_44",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|LevelGateway",
    "group": "LevelGateway"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PLICFanIn",
    "group": "PLICFanIn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PLICFanIn_1",
    "group": "PLICFanIn"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_RegMapperInput_i23_m8",
    "group": "Queue1_RegMapperInput_i23_m8"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLPLIC",
    "group": "TLPLIC"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w1_i0_3",
    "group": "AsyncResetRegVec_w1_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncCrossingSource_n1x1_3",
    "group": "IntSyncCrossingSource_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w1_i0_4",
    "group": "AsyncResetRegVec_w1_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncCrossingSource_n1x1_4",
    "group": "IntSyncCrossingSource_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PLICClockSinkDomain",
    "group": "PLICClockSinkDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_90",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_91",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_45",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_dmixbar_i1_o2_a9d32s1k1z2u",
    "group": "TLXbar_dmixbar_i1_o2_a9d32s1k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DMIToTL",
    "group": "DMIToTL"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_92",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_93",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_46",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLDebugModuleOuter",
    "group": "TLDebugModuleOuter"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncCrossingSource_n1x1_Registered",
    "group": "IntSyncCrossingSource_n1x1_Registered"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_94",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_95",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_47",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBusBypassBar",
    "group": "TLBusBypassBar"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_96",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_97",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_48",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLError_1",
    "group": "TLError"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBusBypass",
    "group": "TLBusBypass"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_98",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_99",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_49",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_1",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_1",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_2",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_2",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_1",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_3",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_3",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_2",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_4",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_4",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_3",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_TLBundleA_a9d32s1k1z2u",
    "group": "AsyncQueueSource_TLBundleA_a9d32s1k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_5",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_5",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w43",
    "group": "ClockCrossingReg_w43"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_6",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_6",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_4",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_7",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_7",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_5",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_8",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_8",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_6",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_9",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_9",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_7",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_TLBundleD_a9d32s1k1z2u",
    "group": "AsyncQueueSink_TLBundleD_a9d32s1k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLAsyncCrossingSource_a9d32s1k1z2u",
    "group": "TLAsyncCrossingSource_a9d32s1k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_10",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_10",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_11",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_11",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_12",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_12",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_8",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_13",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_13",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_9",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_14",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_14",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_10",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_15",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_15",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_11",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_DebugInternalBundle",
    "group": "AsyncQueueSource_DebugInternalBundle"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLDebugModuleOuterAsync",
    "group": "TLDebugModuleOuterAsync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a32d8s1k4z4u",
    "group": "Queue2_TLBundleD_a32d8s1k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SBToTL",
    "group": "SBToTL"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_100",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_101",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_50",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_102",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_103",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_51",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_16",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_16",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLDebugModuleInner",
    "group": "TLDebugModuleInner"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_17",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_17",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w55",
    "group": "ClockCrossingReg_w55"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_18",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_18",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_12",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_19",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_19",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_13",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_20",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_20",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_14",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_21",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_21",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_15",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_TLBundleA_a9d32s1k1z2u",
    "group": "AsyncQueueSink_TLBundleA_a9d32s1k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_22",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_22",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_23",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_23",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_16",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_24",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_24",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_17",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_25",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_25",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_18",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_26",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_26",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_19",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_TLBundleD_a9d32s1k1z2u",
    "group": "AsyncQueueSource_TLBundleD_a9d32s1k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLAsyncCrossingSink_a9d32s1k1z2u",
    "group": "TLAsyncCrossingSink_a9d32s1k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_27",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_27",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_28",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_28",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w15",
    "group": "ClockCrossingReg_w15"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_29",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_29",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_20",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_30",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_30",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_21",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_31",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_31",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_22",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_32",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_32",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_23",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_DebugInternalBundle",
    "group": "AsyncQueueSink_DebugInternalBundle"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLDebugModuleInnerAsync",
    "group": "TLDebugModuleInnerAsync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLDebugModule",
    "group": "TLDebugModule"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DebugCustomXbar",
    "group": "DebugCustomXbar"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_TraceBundle",
    "group": "BundleBridgeNexus_TraceBundle"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_TraceCoreInterface",
    "group": "BundleBridgeNexus_TraceCoreInterface"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_104",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_105",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_52",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLROM",
    "group": "TLROM"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|bootromClockSinkDomain",
    "group": "bootromClockSinkDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_i1_o1_a28d64s5k1z3u",
    "group": "TLXbar_i1_o1_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_106",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_107",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_53",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLRAM_ScratchpadBank",
    "group": "TLRAM_ScratchpadBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_108",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_109",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_54",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a28d64s5k1z3u",
    "group": "Repeater_TLBundleA_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_ScratchpadBank",
    "group": "TLFragmenter_ScratchpadBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_110",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_111",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_55",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a28d64s5k1z3u_1",
    "group": "Queue2_TLBundleA_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a28d64s5k1z3u_1",
    "group": "Queue2_TLBundleD_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a28d64s5k1z3u_1",
    "group": "TLBuffer_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ScratchpadBank",
    "group": "ScratchpadBank"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleD_a64d64s8k8z8c",
    "group": "Queue1_TLBundleD_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLDToBeat_serial_tl_0_a64d64s8k8z8c",
    "group": "TLDToBeat_serial_tl_0_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleB_a64d64s8k8z8c",
    "group": "Queue1_TLBundleB_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBToBeat_serial_tl_0_a64d64s8k8z8c",
    "group": "TLBToBeat_serial_tl_0_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericSerializer_TLBeatw67_f32",
    "group": "GenericSerializer_TLBeatw67_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericSerializer_TLBeatw87_f32",
    "group": "GenericSerializer_TLBeatw87_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLEFromBeat_serial_tl_0_a64d64s8k8z8c",
    "group": "TLEFromBeat_serial_tl_0_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLDFromBeat_serial_tl_0_a64d64s8k8z8c",
    "group": "TLDFromBeat_serial_tl_0_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLCFromBeat_serial_tl_0_a64d64s8k8z8c",
    "group": "TLCFromBeat_serial_tl_0_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBFromBeat_serial_tl_0_a64d64s8k8z8c",
    "group": "TLBFromBeat_serial_tl_0_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLAFromBeat_serial_tl_0_a64d64s8k8z8c",
    "group": "TLAFromBeat_serial_tl_0_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw10_f32",
    "group": "GenericDeserializer_TLBeatw10_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw67_f32",
    "group": "GenericDeserializer_TLBeatw67_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw88_f32",
    "group": "GenericDeserializer_TLBeatw88_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw87_f32",
    "group": "GenericDeserializer_TLBeatw87_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw88_f32_1",
    "group": "GenericDeserializer_TLBeatw88_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLSerdesser_serial_tl_0",
    "group": "TLSerdesser_serial_tl_0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_33",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_33",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ResetCatchAndSync_d3",
    "group": "ResetCatchAndSync_d3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_34",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_35",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_36",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_37",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_38",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_34",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_24",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_39",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_35",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_25",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_40",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_36",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_26",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_41",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_37",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_27",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_42",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_43",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_44",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_45",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_1",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_46",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_38",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_28",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_47",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_39",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_29",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_48",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_40",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_30",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_49",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_41",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_31",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_50",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_51",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_52",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_53",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_2",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_54",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_42",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_32",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_55",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_43",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_33",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_56",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_44",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_34",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_57",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_45",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_35",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_1",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_58",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_59",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_60",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_61",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_3",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_1",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_62",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_46",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_36",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_63",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_47",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_37",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_64",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_48",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_38",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_65",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_49",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_39",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_1",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_1",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_1",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_1",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_66",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_67",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_68",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_69",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_4",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_70",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_50",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_40",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_71",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_51",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_41",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_72",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_52",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_42",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_73",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_53",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_43",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_2",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_74",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_75",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_76",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_77",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_5",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_2",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_78",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_54",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_44",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_79",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_55",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_45",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_80",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_56",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_46",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_81",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_57",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_47",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_2",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_2",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_2",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_2",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_82",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_83",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_84",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_85",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_6",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_86",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_58",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_48",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_87",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_59",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_49",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_88",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_60",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_50",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_89",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_61",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_51",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_3",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_90",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_91",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_92",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_93",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_7",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_3",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_94",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_62",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_52",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_95",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_63",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_53",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_96",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_64",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_54",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_97",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_65",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_55",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_3",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_3",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_3",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_3",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_98",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_99",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_100",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_101",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_8",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_102",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_66",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_56",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_103",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_67",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_57",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_104",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_68",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_58",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_105",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_69",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_59",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_4",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_106",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_107",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_108",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_109",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_9",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_4",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_110",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_70",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_60",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_111",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_71",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_61",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_112",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_72",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_62",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_113",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_73",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_63",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_4",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_4",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_4",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_4",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitArbiter_p32_f32_n5",
    "group": "PhitArbiter_p32_f32_n5"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_114",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_115",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_116",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_117",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_10",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_118",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_74",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_64",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_119",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_75",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_65",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_120",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_76",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_66",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_121",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_77",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_67",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_5",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_122",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_123",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_124",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_125",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_11",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_5",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_126",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_78",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_68",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_127",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_79",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_69",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_128",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_80",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_70",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_129",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_81",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_71",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_5",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_5",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_5",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_130",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_131",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_132",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_133",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_12",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_134",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_82",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_72",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_135",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_83",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_73",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_136",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_84",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_74",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_137",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_85",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_75",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_6",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_138",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_139",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_140",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_141",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_13",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_6",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_142",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_86",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_76",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_143",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_87",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_77",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_144",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_88",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_78",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_145",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_89",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_79",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_6",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_6",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_1",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_6",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_146",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_147",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_148",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_149",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_14",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_150",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_90",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_80",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_151",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_91",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_81",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_152",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_92",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_82",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_153",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_93",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_83",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_7",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_154",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_155",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_156",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_157",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_15",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_7",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_158",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_94",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_84",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_159",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_95",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_85",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_160",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_96",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_86",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_161",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_97",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_87",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_7",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_7",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_2",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_7",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_162",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_163",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_164",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_165",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_16",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_166",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_98",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_88",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_167",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_99",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_89",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_168",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_100",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_90",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_169",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_101",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_91",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_8",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_170",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_171",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_172",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_173",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_17",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_8",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_174",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_102",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_92",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_175",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_103",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_93",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_176",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_104",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_94",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_177",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_105",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_95",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_8",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_8",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_3",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_8",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_178",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_179",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_180",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_181",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_18",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_182",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_106",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_96",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_183",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_107",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_97",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_184",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_108",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_98",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_185",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_109",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_99",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_9",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_186",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_187",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_188",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_189",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_19",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_9",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_190",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_110",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_100",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_191",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_111",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_101",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_192",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_112",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_102",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_193",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_113",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_103",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_9",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_9",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_4",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_9",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitDemux_p32_f32_n5",
    "group": "PhitDemux_p32_f32_n5"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DecoupledSerialPhy",
    "group": "DecoupledSerialPhy"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_194",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_114",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ResetCatchAndSync_d3_1",
    "group": "ResetCatchAndSync_d3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SerialTL0ClockSinkDomain",
    "group": "SerialTL0ClockSinkDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a29d64s11k1z2u",
    "group": "TLBuffer_a29d64s11k1z2u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w1_i0_5",
    "group": "AsyncResetRegVec_w1_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncCrossingSource_n1x1_5",
    "group": "IntSyncCrossingSource_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_112",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_113",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_56",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_114",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_115",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UARTTx",
    "group": "UARTTx"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_UInt8",
    "group": "Queue8_UInt<8>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UARTRx",
    "group": "UARTRx"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_UInt8_1",
    "group": "Queue8_UInt<8>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLUART",
    "group": "TLUART"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLUARTClockSinkDomain",
    "group": "TLUARTClockSinkDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|IntSyncSyncCrossingSink_n1x1_5",
    "group": "IntSyncSyncCrossingSink_n1x1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_116",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_117",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_57",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLXbar_prcibus_i1_o2_a21d64s7k1z3u",
    "group": "TLXbar_prcibus_i1_o2_a21d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_195",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_115",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ResetCatchAndSync_d3_2",
    "group": "ResetCatchAndSync_d3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupResetSynchronizer",
    "group": "ClockGroupResetSynchronizer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_118",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_119",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_58",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w1_i1",
    "group": "AsyncResetRegVec_w1_i1"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TileClockGater",
    "group": "TileClockGater"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_120",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_121",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_59",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a21d64s7k1z3u",
    "group": "Repeater_TLBundleA_a21d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_TileClockGater",
    "group": "TLFragmenter_TileClockGater"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_122",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_123",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_60",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetRegVec_w1_i0_6",
    "group": "AsyncResetRegVec_w1_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TileResetSetter",
    "group": "TileResetSetter"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_124",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_125",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_61",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Repeater_TLBundleA_a21d64s7k1z3u_1",
    "group": "Repeater_TLBundleA_a21d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLFragmenter_TileResetSetter",
    "group": "TLFragmenter_TileResetSetter"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ChipyardPRCICtrlClockSinkDomain",
    "group": "ChipyardPRCICtrlClockSinkDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupAggregator_allClocks",
    "group": "ClockGroupAggregator_allClocks"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupParameterModifier",
    "group": "ClockGroupParameterModifier"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupParameterModifier_1",
    "group": "ClockGroupParameterModifier"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupCombiner",
    "group": "ClockGroupCombiner"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroupAsyncResetCoercer",
    "group": "ClockGroupAsyncResetCoercer"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockGroup_6",
    "group": "ClockGroup"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockSinkDomain_1",
    "group": "ClockSinkDomain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_NoOutput_8",
    "group": "BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CaptureUpdateChain_DTMInfo_To_DTMInfo",
    "group": "CaptureUpdateChain_DTMInfo_To_DTMInfo"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CaptureUpdateChain_DMIAccessCapture_To_DMIAccessUpdate",
    "group": "CaptureUpdateChain_DMIAccessCapture_To_DMIAccessUpdate"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CaptureChain_JTAGIdcodeBundle",
    "group": "CaptureChain_JTAGIdcodeBundle"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|JtagStateMachine",
    "group": "JtagStateMachine"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|CaptureUpdateChain_UInt5_To_UInt5",
    "group": "CaptureUpdateChain_UInt<5>_To_UInt<5>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|JtagTapController",
    "group": "JtagTapController"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|JtagBypassChain",
    "group": "JtagBypassChain"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DebugTransportModuleJTAG",
    "group": "DebugTransportModuleJTAG"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DigitalTop",
    "group": "DigitalTop"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_1",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_196",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_116",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|InferredResetSynchronizerPrimitiveShiftReg_d3_i0",
    "group": "InferredResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ResetSynchronizerShiftReg_w1_d3_i0",
    "group": "ResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|EICG_wrapper",
    "group": "EICG_wrapper"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_197",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_117",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ResetCatchAndSync_d3_3",
    "group": "ResetCatchAndSync_d3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_2",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_1",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_3",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_4",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_5",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_2",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_6",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_3",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_4",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_5",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_6",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_7",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_8",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_9",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_10",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_11",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_12",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_13",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_14",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_15",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_16",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_17",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_18",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_19",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_20",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_21",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_22",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_23",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_24",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_25",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_26",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_27",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_28",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_29",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_30",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_31",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_32",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_33",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_34",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_35",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_7",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_8",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_9",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_10",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_11",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_12",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_13",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_14",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_15",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_16",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_17",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_18",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_19",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_20",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_21",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_22",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_23",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_24",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_25",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_26",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_27",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_28",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_29",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_30",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_31",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_32",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_33",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_34",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_35",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_36",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_37",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_38",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_39",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalInIOCell_40",
    "group": "GenericDigitalInIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDigitalOutIOCell_36",
    "group": "GenericDigitalOutIOCell"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ChipTop",
    "group": "ChipTop"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SimUART",
    "group": "SimUART"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UARTRx_1",
    "group": "UARTRx"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_UInt8_2",
    "group": "Queue8_UInt<8>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_126",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_127",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UARTTx_1",
    "group": "UARTTx"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_UInt8_3",
    "group": "Queue8_UInt<8>"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|UARTAdapter",
    "group": "UARTAdapter"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SimDRAM",
    "group": "SimDRAM"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_128",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SimJTAG",
    "group": "SimJTAG"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_129",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_130",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_131",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_62",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleE_a64d64s8k8z8c",
    "group": "Queue1_TLBundleE_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLEToBeat_SerialRAM_a64d64s8k8z8c",
    "group": "TLEToBeat_SerialRAM_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleC_a64d64s8k8z8c",
    "group": "Queue1_TLBundleC_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLCToBeat_SerialRAM_a64d64s8k8z8c",
    "group": "TLCToBeat_SerialRAM_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue1_TLBundleA_a64d64s8k8z8c",
    "group": "Queue1_TLBundleA_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLAToBeat_SerialRAM_a64d64s8k8z8c",
    "group": "TLAToBeat_SerialRAM_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericSerializer_TLBeatw10_f32",
    "group": "GenericSerializer_TLBeatw10_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericSerializer_TLBeatw88_f32",
    "group": "GenericSerializer_TLBeatw88_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericSerializer_TLBeatw88_f32_1",
    "group": "GenericSerializer_TLBeatw88_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLEFromBeat_SerialRAM_a64d64s8k8z8c",
    "group": "TLEFromBeat_SerialRAM_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLDFromBeat_SerialRAM_a64d64s8k8z8c",
    "group": "TLDFromBeat_SerialRAM_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLCFromBeat_SerialRAM_a64d64s8k8z8c",
    "group": "TLCFromBeat_SerialRAM_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBFromBeat_SerialRAM_a64d64s8k8z8c",
    "group": "TLBFromBeat_SerialRAM_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLAFromBeat_SerialRAM_a64d64s8k8z8c",
    "group": "TLAFromBeat_SerialRAM_a64d64s8k8z8c"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw10_f32_1",
    "group": "GenericDeserializer_TLBeatw10_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw67_f32_1",
    "group": "GenericDeserializer_TLBeatw67_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw88_f32_2",
    "group": "GenericDeserializer_TLBeatw88_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw87_f32_1",
    "group": "GenericDeserializer_TLBeatw87_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|GenericDeserializer_TLBeatw88_f32_3",
    "group": "GenericDeserializer_TLBeatw88_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLSerdesser_SerialRAM",
    "group": "TLSerdesser_SerialRAM"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TSIToTileLink",
    "group": "TSIToTileLink"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_132",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|plusarg_reader_133",
    "group": "plusarg_reader"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLMonitor_63",
    "group": "TLMonitor"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleA_a32d64s1k4z4u",
    "group": "Queue2_TLBundleA_a32d64s1k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue2_TLBundleD_a32d64s1k4z4u",
    "group": "Queue2_TLBundleD_a32d64s1k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TLBuffer_a32d64s1k4z4u",
    "group": "TLBuffer_a32d64s1k4z4u"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_198",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_199",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_200",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_201",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_20",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_202",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_118",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_104",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_203",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_119",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_105",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_204",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_120",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_106",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_205",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_121",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_107",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_10",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_206",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_207",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_208",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_209",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_21",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_10",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_210",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_122",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_108",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_211",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_123",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_109",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_212",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_124",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_110",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_213",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_125",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_111",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_10",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_10",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_10",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_5",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_214",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_215",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_216",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_217",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_22",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_218",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_126",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_112",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_219",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_127",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_113",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_220",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_128",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_114",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_221",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_129",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_115",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_11",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_222",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_223",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_224",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_225",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_23",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_11",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_226",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_130",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_116",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_227",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_131",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_117",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_228",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_132",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_118",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_229",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_133",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_119",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_11",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_11",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_11",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_6",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_230",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_231",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_232",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_233",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_24",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_234",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_134",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_120",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_235",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_135",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_121",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_236",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_136",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_122",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_237",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_137",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_123",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_12",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_238",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_239",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_240",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_241",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_25",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_12",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_242",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_138",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_124",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_243",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_139",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_125",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_244",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_140",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_126",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_245",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_141",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_127",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_12",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_12",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_12",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_7",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_246",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_247",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_248",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_249",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_26",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_250",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_142",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_128",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_251",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_143",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_129",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_252",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_144",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_130",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_253",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_145",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_131",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_13",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_254",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_255",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_256",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_257",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_27",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_13",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_258",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_146",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_132",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_259",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_147",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_133",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_260",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_148",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_134",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_261",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_149",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_135",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_13",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_13",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_13",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_8",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_262",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_263",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_264",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_265",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_28",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_266",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_150",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_136",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_267",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_151",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_137",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_268",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_152",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_138",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_269",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_153",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_139",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_14",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_270",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_271",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_272",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_273",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_29",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_14",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_274",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_154",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_140",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_275",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_155",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_141",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_276",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_156",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_142",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_277",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_157",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_143",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_14",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_14",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_14",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|FlitToPhit_f32_p32_9",
    "group": "FlitToPhit_f32_p32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitArbiter_p32_f32_n5_1",
    "group": "PhitArbiter_p32_f32_n5"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_278",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_279",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_280",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_281",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_30",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_282",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_158",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_144",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_283",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_159",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_145",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_284",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_160",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_146",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_285",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_161",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_147",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_15",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_286",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_287",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_288",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_289",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_31",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_15",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_290",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_162",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_148",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_291",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_163",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_149",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_292",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_164",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_150",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_293",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_165",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_151",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_15",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_15",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_5",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_15",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_294",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_295",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_296",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_297",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_32",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_298",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_166",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_152",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_299",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_167",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_153",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_300",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_168",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_154",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_301",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_169",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_155",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_16",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_302",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_303",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_304",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_305",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_33",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_16",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_306",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_170",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_156",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_307",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_171",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_157",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_308",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_172",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_158",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_309",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_173",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_159",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_16",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_16",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_6",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_16",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_310",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_311",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_312",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_313",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_34",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_314",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_174",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_160",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_315",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_175",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_161",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_316",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_176",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_162",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_317",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_177",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_163",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_17",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_318",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_319",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_320",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_321",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_35",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_17",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_322",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_178",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_164",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_323",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_179",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_165",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_324",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_180",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_166",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_325",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_181",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_167",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_17",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_17",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_7",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_17",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_326",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_327",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_328",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_329",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_36",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_330",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_182",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_168",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_331",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_183",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_169",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_332",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_184",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_170",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_333",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_185",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_171",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_18",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_334",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_335",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_336",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_337",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_37",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_18",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_338",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_186",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_172",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_339",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_187",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_173",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_340",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_188",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_174",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_341",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_189",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_175",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_18",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_18",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_8",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_18",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_342",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_343",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_344",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_345",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_38",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_346",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_190",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_176",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_347",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_191",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_177",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_348",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_192",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_178",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_349",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_193",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_179",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSource_Phit_19",
    "group": "AsyncQueueSource_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_350",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_351",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_352",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_353",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w4_d3_i0_39",
    "group": "AsyncResetSynchronizerShiftReg_w4_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockCrossingReg_w32_19",
    "group": "ClockCrossingReg_w32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_354",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_194",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_180",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_355",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_195",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_181",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_356",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_196",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_182",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_357",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_197",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncValidSync_183",
    "group": "AsyncValidSync"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueueSink_Phit_19",
    "group": "AsyncQueueSink_Phit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncQueue_19",
    "group": "AsyncQueue"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitToFlit_p32_f32_9",
    "group": "PhitToFlit_p32_f32"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|Queue8_Flit_19",
    "group": "Queue8_Flit"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|PhitDemux_p32_f32_n5_1",
    "group": "PhitDemux_p32_f32_n5"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|DecoupledSerialPhy_1",
    "group": "DecoupledSerialPhy"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SerialRAM",
    "group": "SerialRAM"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|SimTSI",
    "group": "SimTSI"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerPrimitiveShiftReg_d3_i0_358",
    "group": "AsyncResetSynchronizerPrimitiveShiftReg_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|AsyncResetSynchronizerShiftReg_w1_d3_i0_198",
    "group": "AsyncResetSynchronizerShiftReg_w1_d3_i0"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ResetCatchAndSync_d3_4",
    "group": "ResetCatchAndSync_d3"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockSourceAtFreqMHz",
    "group": "ClockSourceAtFreqMHz"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|ClockSourceAtFreqMHz_1",
    "group": "ClockSourceAtFreqMHz"
  },
  {
    "class": "firrtl.transforms.DedupGroupAnnotation",
    "target": "~TestHarness|TestHarness",
    "group": "TestHarness"
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.BoomTile.traceCoreSourceNodeOut.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumDefAnnotation",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "definition": {
      "ITBrNTaken": 4,
      "ITBrTaken": 5,
      "ITReserved7": 7,
      "ITExcReturn": 3,
      "ITCoSwap": 12,
      "ITInJump": 15,
      "ITUnJump": 14,
      "ITUnTail": 10,
      "ITInterrupt": 2,
      "ITException": 1,
      "ITUnCall": 8,
      "ITReserved6": 6,
      "ITNothing": 0,
      "ITReturn": 13,
      "ITInTail": 11,
      "ITInCall": 9
    }
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.BoomTile.auto.trace_core_source_out.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.HierarchicalElementResetDomain.auto.boom_tile_trace_core_source_out.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.TilePRCIDomain.auto.element_reset_domain_boom_tile_trace_core_source_out.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.BundleBridgeNexus_TraceCoreInterface.nodeIn.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.BundleBridgeNexus_TraceCoreInterface.nodeOut.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.BundleBridgeNexus_TraceCoreInterface.auto.out.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.BundleBridgeNexus_TraceCoreInterface.auto.in.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "chisel3.experimental.EnumAnnotations$EnumVecAnnotation",
    "target": "TestHarness.DigitalTop.traceCoreNodesIn.group",
    "typeName": "freechips.rocketchip.trace.TraceItype",
    "fields": [
      [
        "itype"
      ]
    ]
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.IntXbar_i1_o1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockSinkDomain"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroupAggregator_sbus"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroup"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_NoOutput"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_1",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_2",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_3",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLFIFOFixer"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_4",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_5",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_6",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_7",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLWidthWidget16_1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLInterconnectCoupler_sbus_to_bus_named_coh"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLInterconnectCoupler_sbus_from_boom_tile"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroupAggregator_pbus"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroup_1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_NoOutput_1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLFIFOFixer_1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLXbar_pbus_in_i1_o1_a29d64s7k1z3u"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_8",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_9",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_10",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_11",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_12",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_13",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_14",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_15",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_16",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_17",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_18",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_19",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_20",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_21",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroupAggregator_fbus"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroup_2"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_NoOutput_2"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_22",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_23",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_24",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_25",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_26",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_27",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_28",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_29",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_30",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_31",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroupAggregator_cbus"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroup_3"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_NoOutput_3"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLFIFOFixer_2"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_32",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_33",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_34",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_35",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_36",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_37",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_38",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_39",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_40",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_41",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_42",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_43",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_44",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_45",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_46",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_47",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_48",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_49",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLBuffer_a29d64s6k1z4u"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLWidthWidget8_1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLInterconnectCoupler_cbus_to_bus_named_pbus"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_50",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_51",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_52",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_53",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_54",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_55",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLWidthWidget8_2"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLInterconnectCoupler_cbus_to_boom_tile"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_56",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_57",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLInterconnectCoupler_cbus_from_port_named_custom_boot_pin"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLFIFOFixer_3"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_58",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_59",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroupAggregator_mbus"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroup_4"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_NoOutput_4"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_60",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_61",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLFIFOFixer_4"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_62",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_63",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_64",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_65",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLBuffer_a32d64s5k1z3u"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLSourceShrinker"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLWidthWidget8_3"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLXbar_i1_o1_a32d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_66",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_67",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLWidthWidget8_4"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLInterconnectCoupler_mbus_to_mbusscratchpad00"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_68",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_69",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroupAggregator_coh"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroup_5"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.FixedClockBroadcast_1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_NoOutput_5"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_70",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_71",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_72",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_73",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLFilter"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_74",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_75",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLBuffer_a32d64s4k3z3c"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_76",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_77",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLJbar"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_78",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_79",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLWidthWidget8_5"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLInterconnectCoupler_coh_to_bus_named_mbus"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_80",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_81",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_82",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_83",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_UInt1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_UInt32"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_NoOutput_6"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_TraceAux"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_NoOutput_7"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLWidthWidget16_2"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_1>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_2>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_3>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_4>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_5>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_6>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_7>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_8>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_9>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|BranchDecode_10>bpd_csignals_decoded",
    "truthTable": "?????????????????000?????0010011->00010\n?????????????????000?????0011011->00010\n0000000??????????000?????0110011->00011\n?????????????????????????0110111->00010\n0000000??????????000?????0111011->00011\n?????????????????000?????1100011->1000?\n?????????????????000?????1100111->0010?\n?????????????????????????1101111->0100?\n000000???????????001?????0010011->00010\n0000000??????????001?????0011011->00010\n0000000??????????001?????0110011->00011\n0000000??????????001?????0111011->00011\n?????????????????001?????1100011->1000?\n?????????????????010?????0010011->00010\n0000000??????????010?????0110011->00011\n?????????????????011?????0010011->00010\n0000000??????????011?????0110011->00011\n?????????????????100?????0010011->00010\n0000000??????????100?????0110011->00011\n?????????????????100?????1100011->1000?\n000000???????????101?????0010011->00010\n0000000??????????101?????0011011->00010\n0000000??????????101?????0110011->00011\n0000000??????????101?????0111011->00011\n?????????????????101?????1100011->1000?\n?????????????????110?????0010011->00010\n0000000??????????110?????0110011->00011\n?????????????????110?????1100011->1000?\n?????????????????111?????0010011->00010\n0000000??????????111?????0110011->00011\n?????????????????111?????1100011->1000?\n0100000??????????000?????0110011->00011\n0100000??????????000?????0111011->00011\n010000???????????101?????0010011->00010\n0100000??????????101?????0011011->00010\n0100000??????????101?????0110011->00011\n0100000??????????101?????0111011->00011\n                                  0000?",
    "minimizedTable": "???????????????????0?????0010011->???1?\n?????????????????000?????001?011->???1?\n0?00000??????????000?????011?011->???11\n0000000??????????????????0110011->???11\n0000000??????????00??????011?011->????1\n?????????????????????????0110111->???1?\n??????????????????0??????1100011->1????\n?????????????????000?????1100111->??1??\n?????????????????????????1101111->?1???\n000000????????????01?????0010011->???1?\n0000000???????????01?????0?11011->???1?\n??????????????????1??????0010011->???1?\n?????????????????1???????1100011->1????\n0?0000???????????101?????0010011->???1?\n0?00000??????????101?????0?11011->???1?\n0?00000??????????101?????011?011->???11\n                                  0000?"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLWidthWidget16_3"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLBuffer_a32d128s5k4z4c"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLBuffer_1"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|UOPCodeFPUDecoder>decoder_decoded",
    "truthTable": "1000100->0000000011000000\n1000101->0000000111000000\n1000110->0010000100100000\n1000111->0010000110100000\n1001000->0011000000010000\n1001001->0011000110010000\n1001010->0010000100010001\n1001011->0010000010010001\n1001100->0000000001000001\n1001101->0000000111000001\n1001110->0010000000100001\n1001111->0010000110100001\n1010000->0011000000100001\n1010001->0011000110100001\n1010010->0010000000100000\n1010011->0010000110100000\n1010100->0011000000010001\n1010101->0011000110010001\n1010111->0011001000001001\n1011000->0011001000001001\n1011001->0011000000001001\n1011010->0011001110001001\n1011011->0011001110001001\n1011100->0011000110001001\n1011101->0011100000001001\n1011110->0011100000001001\n1011111->0011100000001001\n1100000->0011100000001001\n1100001->0011100110001001\n1100010->0011100110001001\n1100011->0011100110001001\n1100100->0011100110001001\n         0000000000000000",
    "minimizedTable": "1?00100->????????1???????\n100?10?->?????????1??????\n10?0101->????????1???????\n100?1?1->???????11???????\n100?11?->??1???????1?????\n100011?->???????1????????\n10?10??->??1?????????????\n10?100?->???1????????????\n10010??->???????????1????\n1001??1->????????1???????\n1001?01->???????1????????\n10?1?1?->??1????????????1\n10?1010->???????1????????\n10?11??->???????????????1\n101??0?->??11???????????1\n101?0??->??1?????????????\n10100??->??????????1?????\n101???1->??1?????????????\n1010?01->???????1????????\n10100?1->????????1???????\n101?011->???????1????????\n101010?->???????????1????\n101?1?1->???1???????????1\n101?111->????????????1???\n1010111->??????1?????????\n1011???->???1????????1???\n10110?0->??????1?????????\n101101?->??????1?1???????\n1011100->???????11???????\n10111?1->????1???????????\n101111?->????1???????????\n1100?00->??111???????1??1\n11000??->??111???????1??1\n11000?1->???????11???????\n110001?->???????11???????\n1100100->???????1????????\n         0000000000000000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|PipelinedMultiplier>decoded",
    "truthTable": "00->0??\n01->111\n10->110\n11->100\n    ???",
    "minimizedTable": "0?->?11\n?1->1??\n1?->1??\n10->?1?\n    ???"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|MulDiv>decoded",
    "truthTable": "000->10??\n001->1111\n010->1110\n011->1100\n100->0011\n101->0000\n110->0111\n111->0100\n     ????",
    "minimizedTable": "??0->??1?\n0??->1???\n00?->??11\n0?1->?1??\n?1?->?1??\n1?0->???1\n     ????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|UOPCodeFPUDecoder_1>decoder_decoded",
    "truthTable": "1000100->0000000011000000\n1000101->0000000111000000\n1000110->0010000100100000\n1000111->0010000110100000\n1001000->0011000000010000\n1001001->0011000110010000\n1001010->0010000100010001\n1001011->0010000010010001\n1001100->0000000001000001\n1001101->0000000111000001\n1001110->0010000000100001\n1001111->0010000110100001\n1010000->0011000000100001\n1010001->0011000110100001\n1010010->0010000000100000\n1010011->0010000110100000\n1010100->0011000000010001\n1010101->0011000110010001\n1010111->0011001000001001\n1011000->0011001000001001\n1011001->0011000000001001\n1011010->0011001110001001\n1011011->0011001110001001\n1011100->0011000110001001\n1011101->0011100000001001\n1011110->0011100000001001\n1011111->0011100000001001\n1100000->0011100000001001\n1100001->0011100110001001\n1100010->0011100110001001\n1100011->0011100110001001\n1100100->0011100110001001\n         0000000000000000",
    "minimizedTable": "1?00100->????????1???????\n100?10?->?????????1??????\n10?0101->????????1???????\n100?1?1->???????11???????\n100?11?->??1???????1?????\n100011?->???????1????????\n10?10??->??1?????????????\n10?100?->???1????????????\n10010??->???????????1????\n1001??1->????????1???????\n1001?01->???????1????????\n10?1?1?->??1????????????1\n10?1010->???????1????????\n10?11??->???????????????1\n101??0?->??11???????????1\n101?0??->??1?????????????\n10100??->??????????1?????\n101???1->??1?????????????\n1010?01->???????1????????\n10100?1->????????1???????\n101?011->???????1????????\n101010?->???????????1????\n101?1?1->???1???????????1\n101?111->????????????1???\n1010111->??????1?????????\n1011???->???1????????1???\n10110?0->??????1?????????\n101101?->??????1?1???????\n1011100->???????11???????\n10111?1->????1???????????\n101111?->????1???????????\n1100?00->??111???????1??1\n11000??->??111???????1??1\n11000?1->???????11???????\n110001?->???????11???????\n1100100->???????1????????\n         0000000000000000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|FMADecoder>decoder_decoded",
    "truthTable": "1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable": "1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|FMADecoder_1>decoder_decoded",
    "truthTable": "1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable": "1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|FMADecoder_2>decoder_decoded",
    "truthTable": "1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable": "1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|UOPCodeFDivDecoder>decoder_decoded",
    "truthTable": "1100101->??11???00????101\n1100110->??11???11????101\n1100111->??10???00????011\n1101000->??10???11????011\n         ????????????????",
    "minimizedTable": "???????->??1????????????1\n110010?->???1?????????1??\n1100110->???1???11????1??\n1100111->??????????????1?\n1101???->???????11?????1?\n         ????????????????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|UOPCodeFPUDecoder_2>decoder_decoded",
    "truthTable": "1000100->0000000011000000\n1000101->0000000111000000\n1000110->0010000100100000\n1000111->0010000110100000\n1001000->0011000000010000\n1001001->0011000110010000\n1001010->0010000100010001\n1001011->0010000010010001\n1001100->0000000001000001\n1001101->0000000111000001\n1001110->0010000000100001\n1001111->0010000110100001\n1010000->0011000000100001\n1010001->0011000110100001\n1010010->0010000000100000\n1010011->0010000110100000\n1010100->0011000000010001\n1010101->0011000110010001\n1010111->0011001000001001\n1011000->0011001000001001\n1011001->0011000000001001\n1011010->0011001110001001\n1011011->0011001110001001\n1011100->0011000110001001\n1011101->0011100000001001\n1011110->0011100000001001\n1011111->0011100000001001\n1100000->0011100000001001\n1100001->0011100110001001\n1100010->0011100110001001\n1100011->0011100110001001\n1100100->0011100110001001\n         0000000000000000",
    "minimizedTable": "1?00100->????????1???????\n100?10?->?????????1??????\n10?0101->????????1???????\n100?1?1->???????11???????\n100?11?->??1???????1?????\n100011?->???????1????????\n10?10??->??1?????????????\n10?100?->???1????????????\n10010??->???????????1????\n1001??1->????????1???????\n1001?01->???????1????????\n10?1?1?->??1????????????1\n10?1010->???????1????????\n10?11??->???????????????1\n101??0?->??11???????????1\n101?0??->??1?????????????\n10100??->??????????1?????\n101???1->??1?????????????\n1010?01->???????1????????\n10100?1->????????1???????\n101?011->???????1????????\n101010?->???????????1????\n101?1?1->???1???????????1\n101?111->????????????1???\n1010111->??????1?????????\n1011???->???1????????1???\n10110?0->??????1?????????\n101101?->??????1?1???????\n1011100->???????11???????\n10111?1->????1???????????\n101111?->????1???????????\n1100?00->??111???????1??1\n11000??->??111???????1??1\n11000?1->???????11???????\n110001?->???????11???????\n1100100->???????1????????\n         0000000000000000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|FMADecoder_3>decoder_decoded",
    "truthTable": "1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable": "1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|FMADecoder_4>decoder_decoded",
    "truthTable": "1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable": "1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|FMADecoder_5>decoder_decoded",
    "truthTable": "1010111->00\n1011000->01\n1011001->00\n1011010->00\n1011011->01\n1011100->00\n1011101->00\n1011110->01\n1011111->11\n1100000->10\n1100001->00\n1100010->01\n1100011->11\n1100100->10\n         ??",
    "minimizedTable": "1011000->?1\n1011?11->?1\n101111?->?1\n1011111->1?\n1100?00->1?\n110001?->?1\n1100011->1?\n         ??"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|IssueUnitCollapsing>count"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|RegisterReadDecode>rrd_cs_decoder_decoded",
    "truthTable": "0000100->0000100000001010010111000\n0000101->0000100000001000010001000\n0000110->0000100001111000010001000\n0000111->0000100001101000010001000\n0001000->0000100001001000010001000\n0001001->0000100011001000010001000\n0001010->0000100011101000010001000\n0001011->0000100000011000010001000\n0001100->0000100010111000010001000\n0001101->0000100001011000010001000\n0001110->000010000001100000???1000\n0001111->000010000000100000???1000\n0010000->000010001010100000???1000\n0010001->000010001100100000???1000\n0010010->000010001110100000???1000\n0010011->000010000111100000???1000\n0010100->000010000110100000???1000\n0010101->000010000100100000???1000\n0010110->000010001011100000???1000\n0010111->000010000101100000???1000\n0011000->0010100010101?????0100000\n0011001->0001100010101?????0100000\n0011010->0011100011001?????0100000\n0011011->0100100011101?????0100000\n0011100->0101100011001?????0100000\n0011101->0110100011101?????0100000\n0101011->0000100000000000010001000\n0101100->000010000000000000???1000\n0101101->000010001010000000???1000\n0101110->0000100000010000010001000\n0101111->000010000001000000???1000\n0110000->0000100010110000010001000\n0110001->000010001011000000???1000\n0110010->0000100001010000010001000\n0110011->000010000101000000???1000\n1000110->0000100?????1????????1000\n1000111->0000100?????1????????1000\n1001000->0000100?????1????????1000\n1001001->0000100?????1????????1000\n1001010->0000100?????1????????1000\n1001011->0000100?????1????????1000\n1001100->0000100?????1????????1000\n1001101->0000100?????1????????1000\n1001110->0000100?????1????????1000\n1001111->0000100?????1????????1000\n1010000->0000100?????1????????1000\n1010001->0000100?????1????????1000\n1010010->0000100?????1????????1000\n1010011->0000100?????1????????1000\n1010100->0000100?????1????????1000\n1010101->0000100?????1????????1000\n1010111->0000100?????1????????1000\n1011000->0000100?????1????????1000\n1011001->0000100?????1????????1000\n1011010->0000100?????1????????1000\n1011011->0000100?????1????????1000\n1011100->0000100?????1????????1000\n1011101->0000100?????1????????1000\n1011110->0000100?????1????????1000\n1011111->0000100?????1????????1000\n1100000->0000100?????1????????1000\n1100001->0000100?????1????????1000\n1100010->0000100?????1????????1000\n1100011->0000100?????1????????1000\n1100100->0000100?????1????????1000\n1100101->0000010?????1????????1000\n1100110->0000010?????1????????1000\n1100111->0000010?????1????????1000\n1101000->0000010?????1????????1000\n         0000100000001????????0000",
    "minimizedTable": "000??0?->?????????????????1???????\n0000???->?????????????????1???????\n00?01??->?????????????????????1???\n0000100->??????????????1????11????\n?00?11?->?????????????????????1???\n?00?110->???????????1?????????????\n?00011?->?????????11??????????????\n00?0110->???????????1?????????????\n?001???->?????????????????????1???\n?0010?0->?????????1???????????????\n00010??->?????????????????1???????\n?0?1001->????????1????????????????\n?001?01->?????????1???????????????\n0?010?1->?????????????????1???????\n?0?1010->????????1????????????????\n?001010->??????????1??????????????\n?001011->???????????1?????????????\n0?01?11->?????????????????????1???\n?0?1100->????????1????????????????\n?00110?->???????????1?????????????\n?001100->??????????1??????????????\n0?011??->?????????????????????1???\n?01?0?0->????????1????????????????\n?01?000->??????????1??????????????\n?010?0?->?????????????????????1???\n?0100??->?????????????????????1???\n0?100??->?????????????????????1???\n0?1000?->????????1????????????????\n001????->???????????????????1?????\n0010??0->??????????1??????????????\n?010??1->?????????1???????????1???\n?01?01?->?????????1???????????????\n0?1001?->?????????1???????????????\n0010?10->????????1????????????????\n?01?011->??????????1??????????????\n?010?11->???????????1?????????????\n?01?10?->?????????1???????????????\n?011?0?->????????1????????????????\n?0110??->????????1????????????????\n00110?0->??1??????????????????????\n?011?01->??????????1??????????????\n0011001->???1?????????????????????\n0011010->???1?????????????????????\n0011011->?1???????????????????????\n001110?->?1???????????????????????\n0011100->???1?????????????????????\n0011101->??1??????????????????????\n0101?11->????????????1????????????\n01011??->????????????1????????????\n0101101->????????1?1??????????????\n010111?->???????????1?????????????\n0101110->?????????????????1???????\n01100??->???????????11????????????\n01100?0->?????????????????1???????\n011000?->??????????1??????????????\n100?11?->???????11??1?????????????\n10??111->???????1?????????????????\n1?01000->???????11111?????????1???\n10?1???->???????11111?????????1???\n101??0?->???????11?11?????????????\n101?0??->???????1?111?????????????\n101???1->????????1?1??????????????\n1100???->???????11111?????????1???\n11001?1->????11???????????????????\n110011?->????11???????????????????\n1101000->????11???????????????????\n         0000100000001????????0000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|RegisterReadDecode_1>rrd_cs_decoder_decoded",
    "truthTable": "0000100->0000100000001010010111000\n0000101->0000100000001000010001000\n0000110->0000100001111000010001000\n0000111->0000100001101000010001000\n0001000->0000100001001000010001000\n0001001->0000100011001000010001000\n0001010->0000100011101000010001000\n0001011->0000100000011000010001000\n0001100->0000100010111000010001000\n0001101->0000100001011000010001000\n0001110->000010000001100000???1000\n0001111->000010000000100000???1000\n0010000->000010001010100000???1000\n0010001->000010001100100000???1000\n0010010->000010001110100000???1000\n0010011->000010000111100000???1000\n0010100->000010000110100000???1000\n0010101->000010000100100000???1000\n0010110->000010001011100000???1000\n0010111->000010000101100000???1000\n0011000->0010100010101?????0100000\n0011001->0001100010101?????0100000\n0011010->0011100011001?????0100000\n0011011->0100100011101?????0100000\n0011100->0101100011001?????0100000\n0011101->0110100011101?????0100000\n0101011->0000100000000000010001000\n0101100->000010000000000000???1000\n0101101->000010001010000000???1000\n0101110->0000100000010000010001000\n0101111->000010000001000000???1000\n0110000->0000100010110000010001000\n0110001->000010001011000000???1000\n0110010->0000100001010000010001000\n0110011->000010000101000000???1000\n1000110->0000100?????1????????1000\n1000111->0000100?????1????????1000\n1001000->0000100?????1????????1000\n1001001->0000100?????1????????1000\n1001010->0000100?????1????????1000\n1001011->0000100?????1????????1000\n1001100->0000100?????1????????1000\n1001101->0000100?????1????????1000\n1001110->0000100?????1????????1000\n1001111->0000100?????1????????1000\n1010000->0000100?????1????????1000\n1010001->0000100?????1????????1000\n1010010->0000100?????1????????1000\n1010011->0000100?????1????????1000\n1010100->0000100?????1????????1000\n1010101->0000100?????1????????1000\n1010111->0000100?????1????????1000\n1011000->0000100?????1????????1000\n1011001->0000100?????1????????1000\n1011010->0000100?????1????????1000\n1011011->0000100?????1????????1000\n1011100->0000100?????1????????1000\n1011101->0000100?????1????????1000\n1011110->0000100?????1????????1000\n1011111->0000100?????1????????1000\n1100000->0000100?????1????????1000\n1100001->0000100?????1????????1000\n1100010->0000100?????1????????1000\n1100011->0000100?????1????????1000\n1100100->0000100?????1????????1000\n         0000100000001????????0000",
    "minimizedTable": "000??0?->?????????????????1???????\n0000???->?????????????????1???????\n00?01??->?????????????????????1???\n0000100->??????????????1????11????\n?00?11?->?????????????????????1???\n?00?110->???????????1?????????????\n?00011?->?????????11??????????????\n00?0110->???????????1?????????????\n?001???->?????????????????????1???\n?0010?0->?????????1???????????????\n00010??->?????????????????1???????\n?0?1001->????????1????????????????\n?001?01->?????????1???????????????\n0?010?1->?????????????????1???????\n?0?1010->????????1????????????????\n?001010->??????????1??????????????\n?001011->???????????1?????????????\n0?01?11->?????????????????????1???\n?0?1100->????????1????????????????\n?00110?->???????????1?????????????\n?001100->??????????1??????????????\n0?011??->?????????????????????1???\n?01?0?0->????????1????????????????\n?01?000->??????????1??????????????\n?010?0?->?????????????????????1???\n?0100??->?????????????????????1???\n0?100??->?????????????????????1???\n0?1000?->????????1????????????????\n001????->???????????????????1?????\n0010??0->??????????1??????????????\n?010??1->?????????1???????????1???\n?01?01?->?????????1???????????????\n0?1001?->?????????1???????????????\n0010?10->????????1????????????????\n?01?011->??????????1??????????????\n?010?11->???????????1?????????????\n?01?10?->?????????1???????????????\n?011?0?->????????1????????????????\n?0110??->????????1????????????????\n00110?0->??1??????????????????????\n?011?01->??????????1??????????????\n0011001->???1?????????????????????\n0011010->???1?????????????????????\n0011011->?1???????????????????????\n001110?->?1???????????????????????\n0011100->???1?????????????????????\n0011101->??1??????????????????????\n0101?11->????????????1????????????\n01011??->????????????1????????????\n0101101->????????1?1??????????????\n010111?->???????????1?????????????\n0101110->?????????????????1???????\n01100??->???????????11????????????\n01100?0->?????????????????1???????\n011000?->??????????1??????????????\n100?11?->???????11??1?????????????\n10?1???->???????11111?????????1???\n101??0?->???????11?11?????????????\n101?0??->???????1?111?????????????\n101???1->???????11?1??????????????\n1100?00->???????11111?????????1???\n11000??->???????11111?????????1???\n         0000100000001????????0000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|DecodeUnit>cs_decoder_decoded",
    "truthTable": "?????????????????000?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????000?????0001111->10?010101000100000001001010100???01010?????0000011000\n?????????????????000?????0010011->10?00001010010000000001000010000000000?????0110000000\n?????????????????????????0010111->10?01001110010000000010001010001100000?????0100000000\n?????????????????000?????0011011->10?01010110010000000001000010000000000?????0110000000\n?????????????????000?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????000?????0110011->10?00011110010000000001000000000000000?????0110000000\n?????????????????????????0110111->10?00001000010000000001001010001100000?????0110000000\n0000000??????????000?????0111011->10?01011000010000000001000000000000000?????0110000000\n?????00??????????????????1000011->111101110110000010000000101011???00000?????0000000000\n?????00??????????????????1000111->111101111010000010000000101011???00000?????0000000000\n?????00??????????????????1001011->111110000010000010000000101011???00000?????0000000000\n?????00??????????????????1001111->111101111110000010000000101011???00000?????0000000000\n0000000??????????????????1010011->111101011110000010000000101010???00000?????0000000000\n?????????????????000?????1100011->10?00110000010000000001100000001000000?????0001000000\n?????????????????000?????1100111->10?01001100010000000010000010000000000?????0100000000\n?????????????????????????1101111->10?01001010010000000010001010010000000?????0100000000\n00000000000000000000000001110011->10?11010100010000100000101010000000000?????0000111100\n?????????????????001?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????001?????0001111->10?0000000001??????????1010100???00001?????0000011000\n000000???????????001?????0010011->10?00010110010000000001000010000000000?????0110000000\n0000000??????????001?????0011011->10?01011100010000000001000010000000000?????0110000000\n?????????????????001?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????001?????0110011->10?00011100010000000001000000000000000?????0110000000\n0000000??????????001?????0111011->10?01011110010000000001000000000000000?????0110000000\n?????????????????001?????1100011->10?00110010010000000001100000001000000?????0001000000\n?????????????????001?????1110011->10?00111100010000100000000010000000000?????0000011101\n?????????????????010?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????010?????0000111->11100000010100000000100010010000010000000000000000000\n?????????????????010?????0010011->10?00010010010000000001000010000000000?????0110000000\n?????????????????010?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????010?????0100111->11100000101101000000100100001000101000000010000000000\n00000????????????010?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????010?????0110011->10?00100010010000000001000000000000000?????0110000000\n?????????????????010?????1110011->10?00111110010000100000000010000000000?????0000011110\n?????????????????011?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????011?????0000111->11000000010100000000100010010000010000000000000000000\n?????????????????011?????0010011->10?00010100010000000001000010000000000?????0110000000\n?????????????????011?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????011?????0100111->11000000101101000000100100001000101000000010000000000\n00000????????????011?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????011?????0110011->10?00100100010000000001000000000000000?????0110000000\n?????????????????011?????1110011->10?01000000010000100000000010000000000?????0000011111\n?????????????????100?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????100?????0010011->10?00010000010000000001000010000000000?????0110000000\n0000000??????????100?????0110011->10?00101010010000000001000000000000000?????0110000000\n?????????????????100?????1100011->10?00111000010000000001100000001000000?????0001000000\n?????????????????101?????0000011->10?00000010100000000100000010000010000000001100000000\n000000???????????101?????0010011->10?00011010010000000001000010000000000?????0110000000\n0000000??????????101?????0011011->10?01100100010000000001000010000000000?????0110000000\n0000000??????????101?????0110011->10?001011100100000000010000000???00000?????0110000000\n0000000??????????101?????0111011->10?011001100100000000010000000???00000?????0110000000\n?????????????????101?????1100011->10?00110100010000000001100000001000000?????0001000000\n?????????????????101?????1110011->10?01000010010000100000001110000000000?????0000011101\n?????????????????110?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????110?????0010011->10?00001110010000000001000010000000000?????0110000000\n0000000??????????110?????0110011->10?00101000010000000001000000000000000?????0110000000\n?????????????????110?????1100011->10?00111010010000000001100000001000000?????0001000000\n?????????????????110?????1110011->10?01000100010000100000001110000000000?????0000011110\n?????????????????111?????0010011->10?00001100010000000001000010000000000?????0110000000\n0000000??????????111?????0110011->10?00100110010000000001000000000000000?????0110000000\n?????????????????111?????1100011->10?00110110010000000001100000001000000?????0001000000\n?????????????????111?????1110011->10?01000110010000100000001110000000000?????0000011111\n00000000000100000000000001110011->10?11010100010000100000101010000000000?????0000111100\n0000001??????????000?????0110011->10?011010000100000010000000000???00000?????0000000000\n0000001??????????000?????0111011->10?011100000100000010000000000???00000?????0000000000\n?????01??????????????????1000011->110110000110000010000000101011???00000?????0000000000\n?????01??????????????????1000111->110110001010000010000000101011???00000?????0000000000\n?????01??????????????????1001011->110110010010000010000000101011???00000?????0000000000\n?????01??????????????????1001111->110110001110000010000000101011???00000?????0000000000\n0000001??????????????????1010011->110101101010000010000000101010???00000?????0000000000\n0000001??????????001?????0110011->10?011010100100000010000000000???00000?????0000000000\n0000001??????????010?????0110011->10?011011100100000010000000000???00000?????0000000000\n0000001??????????011?????0110011->10?011011000100000010000000000???00000?????0000000000\n0000001??????????100?????0110011->10?011100100100000100000000000???00000?????0000000000\n0000001??????????100?????0111011->10?011110100100000100000000000???00000?????0000000000\n0000001??????????101?????0110011->10?011101000100000100000000000???00000?????0000000000\n0000001??????????101?????0111011->10?011111000100000100000000000???00000?????0000000000\n0000001??????????110?????0110011->10?011101100100000100000000000???00000?????0000000000\n0000001??????????110?????0111011->10?011111100100000100000000000???00000?????0000000000\n0000001??????????111?????0110011->10?011110000100000100000000000???00000?????0000000000\n0000001??????????111?????0111011->10?100000000100000100000000000???00000?????0000000000\n0000100??????????????????1010011->111101100010000010000000101010???00000?????0000000000\n00001????????????010?????0101111->10?100001101000000001000000000???01100001000000011000\n00001????????????011?????0101111->10?100001101000000001000000000???01100001000000011000\n0000101??????????????????1010011->110101101110000010000000101010???00000?????0000000000\n0001000??????????????????1010011->111101100110000010000000101010???00000?????0000000000\n00010??00000?????010?????0101111->10?000000101000000001000000100???10000001100000011000\n00010??00000?????011?????0101111->10?000000101000000001000000100???10000001100000011000\n00010000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n00010000010100000000000001110011->10?110100100100001000001010100???00000?????0000011100\n0001001??????????????????1010011->110101110010000010000000101010???00000?????0000000000\n0001001??????????000000001110011->10?110101101000000001001000000???00000101000000011000\n0001100??????????????????1010011->111110010110000100000000101010???00000?????0000000000\n00011????????????010?????0101111->10?100001101000000001000000000???01100001110000011000\n00011????????????011?????0101111->10?100001101000000001000000000???01100001110000011000\n0001101??????????????????1010011->110110011010000100000000101010???00000?????0000000000\n0010000??????????000?????1010011->111100100010000010000000101010???00000?????0000000000\n0010000??????????001?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????010?????0101111->10?100001101000000001000000000???01100010010000011000\n0010000??????????010?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????011?????0101111->10?100001101000000001000000000???01100010010000011000\n0010001??????????000?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????001?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????010?????1010011->110100100110000010000000101010???00000?????0000000000\n0010100??????????000?????1010011->111101010010000010000000101010???00000?????0000000000\n0010100??????????001?????1010011->111101010010000010000000101010???00000?????0000000000\n0010101??????????000?????1010011->110101010110000010000000101010???00000?????0000000000\n0010101??????????001?????1010011->110101010110000010000000101010???00000?????0000000000\n00110000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n0100000??????????000?????0110011->10?00100000010000000001000000000000000?????0110000000\n0100000??????????000?????0111011->10?01011010010000000001000000000000000?????0110000000\n01000????????????010?????0101111->10?100001101000000001000000000???01100010100000011000\n01000????????????011?????0101111->10?100001101000000001000000000???01100010100000011000\n010000???????????101?????0010011->10?00011000010000000001000010000000000?????0110000000\n0100000??????????101?????0011011->10?01100000010000000001000010000000000?????0110000000\n0100000??????????101?????0110011->10?00101100010000000001000000000000000?????0110000000\n0100000??????????101?????0111011->10?01100010010000000001000000000000000?????0110000000\n010000000001?????????????1010011->11110010101000001000000010110000000000?????0000000000\n010000100000?????????????1010011->11010010111000001000000010110000000000?????0000000000\n010110000000?????????????1010011->111110011110000100000000101100???00000?????0000000000\n010110100000?????????????1010011->110110100010000100000000101100???00000?????0000000000\n01100????????????010?????0101111->10?100001101000000001000000000???01100010110000011000\n01100????????????011?????0101111->10?100001101000000001000000000???01100010110000011000\n01111011001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n10000????????????010?????0101111->10?100001101000000001000000000???01100011000000011000\n10000????????????011?????0101111->10?100001101000000001000000000???01100011000000011000\n1010000??????????000?????1010011->111101000010010000000000001010???00000?????0000000000\n1010000??????????001?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????010?????0101111->10?100001101000000001000000000???01100011010000011000\n1010000??????????010?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????011?????0101111->10?100001101000000001000000000???01100011010000011000\n1010001??????????000?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????001?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????010?????1010011->110101000110010000000000001010???00000?????0000000000\n110000000000?????????????1010011->11110011101001000000000000110000000000?????0000000000\n11000????????????010?????0101111->10?100001101000000001000000000???01100011100000011000\n11000????????????011?????0101111->10?100001101000000001000000000???01100011100000011000\n110000000001?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000010?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000011?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000100000?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100001?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100010?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100011?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110100000000?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000001?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000010?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000011?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100100000?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100001?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100010?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100011?????????????1010011->11010011010010100000000010010000000000?????0000000000\n111000000000?????000?????1010011->11110001101001000000000000110000000000?????0000000000\n111000000000?????001?????1010011->11110100101001000000000000110000000000?????0000000000\n11100????????????010?????0101111->10?100001101000000001000000000???01100011110000011000\n11100????????????011?????0101111->10?100001101000000001000000000???01100011110000011000\n111000100000?????000?????1010011->11010001111001000000000000110000000000?????0000000000\n111000100000?????001?????1010011->11010100111001000000000000110000000000?????0000000000\n111100000000?????000?????1010011->11110001000010100000000010010000000000?????0000000000\n111100100000?????000?????1010011->11010001010010100000000010010000000000?????0000000000\n                                  00????????001??????????10????????????0?????????00????",
    "minimizedTable": "???????????????????0?????00?0011->1??????????????????????1???1????????????????1????????\n???????????????????0?????0000011->???????????11???????1????????????1?????????1?????????\n??????????????????0??????0000011->1????????1?11???????1??1???1?????1?????????11????????\n?????????????????0???????0?00011->1??????????11???????1????????????????????????????????\n?????????????????0???????0000011->???????????????????????????????????????????11????????\n?????????????????00??????0001111->1????????????????????????1?1????????????????????11???\n?????????????????000?????0001111->????1?1?1???????????1?????????????1?1????????????????\n???????????????????0?????0010011->??????????????????????1??????????????????????1???????\n?????????????????000?????001?011->1????????1????????????11???1????????????????11???????\n?????????????????000?????0010011->???????1?????????????????????????????????????????????\n?????????????????????????0?10111->1??????1???????????????1?1?1???11???????????1????????\n?????????????????????????0010111->????1???11???????????1???????????????????????????????\n?????????????????000?????0011011->????1?1?1????????????????????????????????????????????\n?????????????????0???????0100011->????????1???????????????????????1?1???????1??????????\n0?00000??????????000?????011?011->1?????????????????????11????????????????????11???????\n000000???????????????????0110011->1??????????????????????1?????????????????????????????\n000000???????????000?????011?011->1??????????????????????1?????????????????????????????\n0000000??????????????????0110011->??????????????????????1?????????????????????11???????\n0000000???????????00?????0110011->?????????1???????????????????????????????????????????\n0000000??????????00??????011?011->??????11?????????????????????????????????????????????\n0000000??????????00??????0110011->????????1????????????????????????????????????????????\n?????????????????????????0110111->??????????????????????1??????????????????????1???????\n0?00000??????????000?????0111011->????1?11?????????????????????????????????????????????\n000000???????????000?????0111011->??????1??????????????????????????????????????????????\n?????????????????????????100??11->???1????????????1?????????1?11???????????????????????\n?????0???????????????????100??11->11????????1?1??????????11????????????????????????????\n?????0???????????????????1000011->?????????1???????????????????????????????????????????\n?????00??????????????????100??11->??1??????????????????????????????????????????????????\n?????00??????????????????1000?11->?????111?????????????????????????????????????????????\n?????0???????????????????100?111->????????1????????????????????????????????????????????\n?????00??????????????????100?111->?????111?????????????????????????????????????????????\n?????0???????????????????1001011->????1????????????????????????????????????????????????\n?????0???????????????????1001111->?????????1???????????????????????????????????????????\n000??0???????????????????1010011->11?1??????1?1??????????11?1?1????????????????????????\n000??00??????????????????1010011->??1??????????????????????????????????????????????????\n000?00???????????????????1010011->?????1??????????1????????????????????????????????????\n000?000??????????????????1010011->?????????1???????????????????????????????????????????\n0000?0???????????????????1010011->?????1??????????1????????????????????????????????????\n000000???????????????????1010011->????????1????????????????????????????????????????????\n0000000??????????????????1010011->???????1?????????????????????????????????????????????\n??????????????????0??????1100011->?????11???????????????1????????1??????????????1??????\n?????????????????000?????1100?11->1????????????????????????????????????????????????????\n?????????????????000?????1100111->????1??11????????????1?1???1????????????????1????????\n?????????????????????????1101111->1???1??1?1???????????1?1?1?1??1?????????????1????????\n00000000000?0000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00000000000?00000000000001110011->1??????????????????????????????????????????????11????\n?????????????????001?????0001111->?????????????????????????????????????1???????????????\n000000????????????01?????0?10011->1??????????????????????1?????????????????????????????\n000000????????????01?????0010011->??????1??1????????????1????1????????????????11???????\n000000???????????001?????0010011->????????1????????????????????????????????????????????\n0000000???????????01?????0?11011->1???1???1?????????????11????????????????????11???????\n0000000???????????01?????0011011->???????????????????????????1?????????????????????????\n0000000??????????001?????0?11011->??????11?????????????????????????????????????????????\n0000000????????????1?????0110011->????????1????????????????????????????????????????????\n0000000???????????01?????0111011->?????????1???????????????????????????????????????????\n??????????????????01?????11?0011->1????????????????????????????????????????????????????\n?????????????????001?????11?0011->?????11??????????????????????????????????????????????\n?????????????????001?????1100011->?????????1???????????????????????????????????????????\n???????????????????1?????1110011->?????????????????1?????1???1????????????????????111?1\n?????????????????001?????1110011->???????11????????????????????????????????????????????\n??????????????????10?????00?0011->?????????1???????????????????????????????????????????\n?????????????????01??????0?00?11->1??????????11???????1????????????????????????????????\n?????????????????01??????0000?11->?????????1?????????????1???1?????1???????????????????\n?????????????????01??????0?00111->?1???????????????????????????????????????????????????\n?????????????????01??????0000111->????????????????????????1????????????????????????????\n?????????????????010?????0?00111->??1??????????????????????????????????????????????????\n??????????????????1??????0010011->1?????????????????????11???1????????????????11???????\n?????????????????01??????0010011->??????1??????????????????????????????????????????????\n?????????????????01??????0100?11->????????1???????????????????????1?1???????1??????????\n?????????????????01??????0100111->??????????1??1??????????????1????????????????????????\n???00????????????01??????0101111->1??1????11?11???????1??1??????????11???1????????11???\n000000????????????1??????0110011->?????1???????????????????????????????????????????????\n000000???????????010?????0110011->?????????1???????????????????????????????????????????\n??????????????????1??????1110011->1????????????????1?????1???1????????????????????1111?\n??????????????????10?????1110011->????????1????????????????????????????????????????????\n?????????????????010?????1110011->?????111?1???????????????????????????????????????????\n??????????????????11?????0010011->????????1????????????????????????????????????????????\n??????????????????11?????1110011->????1????????????????????????????????????????????????\n?????????????????100?????0010011->??????1??????????????????????????????????????????????\n000000???????????1???????0110011->?????1???????????????????????????????????????????????\n0000000??????????1?0?????0110011->???????1?????????????????????????????????????????????\n?????????????????1???????1100011->1????11???????????????1????????1??????????????1??????\n?????????????????1?0?????1100011->???????1?????????????????????????????????????????????\n0?0000???????????101?????0010011->1?????11??????????????11???1????????????????11???????\n0?00000??????????101?????0?11011->1???11????????????????11????????????????????11???????\n0?00000??????????101?????0011011->???????????????????????????1?????????????????????????\n0?00000??????????101?????011?011->1????1????????????????11????????????????????11???????\n0?00000??????????101?????0110011->???????11????????????????????????????????????????????\n000000???????????101?????011?011->?????1??1????????????????????????????????????????????\n0000000??????????1?1?????0110011->?????????1???????????????????????????????????????????\n0?00000??????????101?????0111011->?????????1???????????????????????????????????????????\n?????????????????1?1?????1100011->????????1????????????????????????????????????????????\n?????????????????1?1?????1110011->????1????1???????????????11??????????????????????????\n?????????????????11??????0010011->???????11????????????????????????????????????????????\n?????????????????11??????1100011->?????????1???????????????????????????????????????????\n?????????????????11??????1110011->????1???1????????????????11??????????????????????????\n0000001??????????????????0110011->????11???????????????????????????????????????????????\n0000001???????????00?????011?011->????11???????????????????????????????????????????????\n0000001??????????0???????0110011->???????1???????????1?????????????????????????????????\n0000001??????????000?????011?011->???????????????????1?????????????????????????????????\n?????01??????????????????100??11->????1????????????????????????????????????????????????\n?????01??????????????????1001011->???????1?????????????????????????????????????????????\n0000?01??????????????????1010011->??????1??????????????????????????????????????????????\n0000001??????????001?????0110011->?????????1???????????????????????????????????????????\n0000001??????????01??????0110011->????????1????????????????????????????????????????????\n0000001???????????11?????0110011->???????1?????????????????????????????????????????????\n0000001??????????1???????011?011->1?????????????????1????1?????????????????????????????\n0000001??????????1???????0110011->??????1??????????????????????????????????????????????\n0000001??????????1?0?????011?011->????111??1???????????????????????????????????????????\n0000001??????????10??????011?011->????1?1??????????????????????????????????????????????\n0000001??????????1?0?????0111011->???????1?????????????????????????????????????????????\n0000001??????????10??????0111011->???????1?????????????????????????????????????????????\n0000001??????????110?????011?011->????????1????????????????????????????????????????????\n0000001??????????111?????0111011->???1?????????????????????????????????????????????????\n000010???????????????????1010011->??????1??????????????????????????????????????????????\n000?1????????????01??????0101111->1??1????11?11???????1??1??????????11????1???????11???\n000?101??????????????????1010011->????????1????????????????????????????????????????????\n0000101??????????????????1010011->?????????1???????????????????????????????????????????\n00010??00000?????????????0101111->?????????1??????????1??????1?????1??????11???????1???\n0001?00??????????????????1010011->?????????1???????????????????????????????????????????\n000100???????????????????1010011->??????1??????????????????????????????????????????????\n00010??00000?????01??????0101111->1??????????11??????????1????????????????????????1????\n00?1000000100000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00?10000001000000000000001110011->1???????????????????????????????????????????????1????\n0001000001010000000000000111????->???11?1??1???????1???????1?1?????????????????????11??\n00010000010100000000000001110011->1???????????????????????????????????????????????1????\n0001?01??????????????????1010011->???????1?????????????????????????????????????????????\n0001001???????????????0001110011->??????????????????????????????????????1?1????????1???\n0001001??????????00???0001110011->??????1?1????????????????????????????????????????????\n0001001??????????000??0001110011->???11????1??????????1????????????????????????????????\n0001001??????????000000001110011->1??????????11???????????????????????????????????1????\n000110???????????????????1010011->????1??1???????1?????????????????????????????????????\n00011????????????01??????0101111->?????????????????????????????????????????11??????????\n?01000???????????0?0?????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?01000???????????00??????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?010000??????????0?0?????1010011->??1??????????????????????????????????????????????????\n?010000??????????00??????1010011->??1??????????????????????????????????????????????????\n0010?0???????????00??????1010011->11?1??????1?1???1??????11?1?1????????????????????????\n0010?00??????????00??????1010011->??1??????????????????????????????????????????????????\n001000???????????0?0?????1010011->??????1?????????1???????1????????????????????????????\n001000???????????00??????1010011->??????1??????????????????????????????????????????????\n??100????????????01??????0101111->??????????????????????????????????????????1??????????\n?010001??????????0?0?????1010011->?????????1???????????????????????????????????????????\n?010001??????????00??????1010011->?????????1???????????????????????????????????????????\n0010?01??????????00??????1010011->?????????1???????????????????????????????????????????\n001010???????????00??????1010011->?????1?1?????????????????????????????????????????????\n0100000??????????000?????0110011->?????1???????????????????????????????????????????????\n0100000??????????000?????0111011->?????????1???????????????????????????????????????????\n?1?00????????????01??????0101111->?????????????????????????????????????????1???????????\n?10000000001?????????????1010011->1111??1?1?1?1??????????1??11?????????????????????????\n010000000001?????????????1010011->????????????????1???????1????????????????????????????\n?10000100000?????????????1010011->11?1??1?111?1??????????1??11?????????????????????????\n010000100000?????????????1010011->????????????????1???????1????????????????????????????\n010110?00000?????????????1010011->11?11?????1?1??1???????11?11?????????????????????????\n010110000000?????????????1010011->??1????111???????????????????????????????????????????\n010110100000?????????????1010011->??????1??????????????????????????????????????????????\n0111101100100000000000000111????->???11?1?1????????1???????1?1?????????????????????11??\n01111011001000000000000001110011->1???????????????????????????????????????????????1????\n1??00????????????01??????0101111->????????????????????????????????????????1????????????\n101000???????????0?0?????1010011->?????1???????1???????????????????????????????????????\n101000???????????00??????1010011->?????1???????1???????????????????????????????????????\n11??00?00000?????????????1010011->???1???????????????????????1?????????????????????????\n110?00?000???????????????1010011->11?1??11???????????????1???1?????????????????????????\n110?000000???????????????1010011->??1??????????????????????????????????????????????????\n110000?000???????????????1010011->????????1?1?11????????????1??????????????????????????\n110?001000???????????????1010011->?????????1???????????????????????????????????????????\n110100?000???????????????1010011->??????????????1?????????1????????????????????????????\n111?00?00000?????000?????1010011->11?????1???????????????1?????????????????????????????\n111?00000000?????000?????1010011->??1??????????????????????????????????????????????????\n111000?00000?????00??????1010011->11??????1?1?11?????????1??1??????????????????????????\n111000000000?????00??????1010011->??1??????????????????????????????????????????????????\n111000?00000?????001?????1010011->?????1???????????????????????????????????????????????\n111?00100000?????000?????1010011->?????????1???????????????????????????????????????????\n111000100000?????00??????1010011->?????????1???????????????????????????????????????????\n111100?00000?????000?????1010011->??????????????1?????????1????????????????????????????\n                                  00????????001??????????10????????????0?????????00????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|DecodeUnit_1>cs_decoder_decoded",
    "truthTable": "?????????????????000?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????000?????0001111->10?010101000100000001001010100???01010?????0000011000\n?????????????????000?????0010011->10?00001010010000000001000010000000000?????0110000000\n?????????????????????????0010111->10?01001110010000000010001010001100000?????0100000000\n?????????????????000?????0011011->10?01010110010000000001000010000000000?????0110000000\n?????????????????000?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????000?????0110011->10?00011110010000000001000000000000000?????0110000000\n?????????????????????????0110111->10?00001000010000000001001010001100000?????0110000000\n0000000??????????000?????0111011->10?01011000010000000001000000000000000?????0110000000\n?????00??????????????????1000011->111101110110000010000000101011???00000?????0000000000\n?????00??????????????????1000111->111101111010000010000000101011???00000?????0000000000\n?????00??????????????????1001011->111110000010000010000000101011???00000?????0000000000\n?????00??????????????????1001111->111101111110000010000000101011???00000?????0000000000\n0000000??????????????????1010011->111101011110000010000000101010???00000?????0000000000\n?????????????????000?????1100011->10?00110000010000000001100000001000000?????0001000000\n?????????????????000?????1100111->10?01001100010000000010000010000000000?????0100000000\n?????????????????????????1101111->10?01001010010000000010001010010000000?????0100000000\n00000000000000000000000001110011->10?11010100010000100000101010000000000?????0000111100\n?????????????????001?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????001?????0001111->10?0000000001??????????1010100???00001?????0000011000\n000000???????????001?????0010011->10?00010110010000000001000010000000000?????0110000000\n0000000??????????001?????0011011->10?01011100010000000001000010000000000?????0110000000\n?????????????????001?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????001?????0110011->10?00011100010000000001000000000000000?????0110000000\n0000000??????????001?????0111011->10?01011110010000000001000000000000000?????0110000000\n?????????????????001?????1100011->10?00110010010000000001100000001000000?????0001000000\n?????????????????001?????1110011->10?00111100010000100000000010000000000?????0000011101\n?????????????????010?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????010?????0000111->11100000010100000000100010010000010000000000000000000\n?????????????????010?????0010011->10?00010010010000000001000010000000000?????0110000000\n?????????????????010?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????010?????0100111->11100000101101000000100100001000101000000010000000000\n00000????????????010?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????010?????0110011->10?00100010010000000001000000000000000?????0110000000\n?????????????????010?????1110011->10?00111110010000100000000010000000000?????0000011110\n?????????????????011?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????011?????0000111->11000000010100000000100010010000010000000000000000000\n?????????????????011?????0010011->10?00010100010000000001000010000000000?????0110000000\n?????????????????011?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????011?????0100111->11000000101101000000100100001000101000000010000000000\n00000????????????011?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????011?????0110011->10?00100100010000000001000000000000000?????0110000000\n?????????????????011?????1110011->10?01000000010000100000000010000000000?????0000011111\n?????????????????100?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????100?????0010011->10?00010000010000000001000010000000000?????0110000000\n0000000??????????100?????0110011->10?00101010010000000001000000000000000?????0110000000\n?????????????????100?????1100011->10?00111000010000000001100000001000000?????0001000000\n?????????????????101?????0000011->10?00000010100000000100000010000010000000001100000000\n000000???????????101?????0010011->10?00011010010000000001000010000000000?????0110000000\n0000000??????????101?????0011011->10?01100100010000000001000010000000000?????0110000000\n0000000??????????101?????0110011->10?001011100100000000010000000???00000?????0110000000\n0000000??????????101?????0111011->10?011001100100000000010000000???00000?????0110000000\n?????????????????101?????1100011->10?00110100010000000001100000001000000?????0001000000\n?????????????????101?????1110011->10?01000010010000100000001110000000000?????0000011101\n?????????????????110?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????110?????0010011->10?00001110010000000001000010000000000?????0110000000\n0000000??????????110?????0110011->10?00101000010000000001000000000000000?????0110000000\n?????????????????110?????1100011->10?00111010010000000001100000001000000?????0001000000\n?????????????????110?????1110011->10?01000100010000100000001110000000000?????0000011110\n?????????????????111?????0010011->10?00001100010000000001000010000000000?????0110000000\n0000000??????????111?????0110011->10?00100110010000000001000000000000000?????0110000000\n?????????????????111?????1100011->10?00110110010000000001100000001000000?????0001000000\n?????????????????111?????1110011->10?01000110010000100000001110000000000?????0000011111\n00000000000100000000000001110011->10?11010100010000100000101010000000000?????0000111100\n0000001??????????000?????0110011->10?011010000100000010000000000???00000?????0000000000\n0000001??????????000?????0111011->10?011100000100000010000000000???00000?????0000000000\n?????01??????????????????1000011->110110000110000010000000101011???00000?????0000000000\n?????01??????????????????1000111->110110001010000010000000101011???00000?????0000000000\n?????01??????????????????1001011->110110010010000010000000101011???00000?????0000000000\n?????01??????????????????1001111->110110001110000010000000101011???00000?????0000000000\n0000001??????????????????1010011->110101101010000010000000101010???00000?????0000000000\n0000001??????????001?????0110011->10?011010100100000010000000000???00000?????0000000000\n0000001??????????010?????0110011->10?011011100100000010000000000???00000?????0000000000\n0000001??????????011?????0110011->10?011011000100000010000000000???00000?????0000000000\n0000001??????????100?????0110011->10?011100100100000100000000000???00000?????0000000000\n0000001??????????100?????0111011->10?011110100100000100000000000???00000?????0000000000\n0000001??????????101?????0110011->10?011101000100000100000000000???00000?????0000000000\n0000001??????????101?????0111011->10?011111000100000100000000000???00000?????0000000000\n0000001??????????110?????0110011->10?011101100100000100000000000???00000?????0000000000\n0000001??????????110?????0111011->10?011111100100000100000000000???00000?????0000000000\n0000001??????????111?????0110011->10?011110000100000100000000000???00000?????0000000000\n0000001??????????111?????0111011->10?100000000100000100000000000???00000?????0000000000\n0000100??????????????????1010011->111101100010000010000000101010???00000?????0000000000\n00001????????????010?????0101111->10?100001101000000001000000000???01100001000000011000\n00001????????????011?????0101111->10?100001101000000001000000000???01100001000000011000\n0000101??????????????????1010011->110101101110000010000000101010???00000?????0000000000\n0001000??????????????????1010011->111101100110000010000000101010???00000?????0000000000\n00010??00000?????010?????0101111->10?000000101000000001000000100???10000001100000011000\n00010??00000?????011?????0101111->10?000000101000000001000000100???10000001100000011000\n00010000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n00010000010100000000000001110011->10?110100100100001000001010100???00000?????0000011100\n0001001??????????????????1010011->110101110010000010000000101010???00000?????0000000000\n0001001??????????000000001110011->10?110101101000000001001000000???00000101000000011000\n0001100??????????????????1010011->111110010110000100000000101010???00000?????0000000000\n00011????????????010?????0101111->10?100001101000000001000000000???01100001110000011000\n00011????????????011?????0101111->10?100001101000000001000000000???01100001110000011000\n0001101??????????????????1010011->110110011010000100000000101010???00000?????0000000000\n0010000??????????000?????1010011->111100100010000010000000101010???00000?????0000000000\n0010000??????????001?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????010?????0101111->10?100001101000000001000000000???01100010010000011000\n0010000??????????010?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????011?????0101111->10?100001101000000001000000000???01100010010000011000\n0010001??????????000?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????001?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????010?????1010011->110100100110000010000000101010???00000?????0000000000\n0010100??????????000?????1010011->111101010010000010000000101010???00000?????0000000000\n0010100??????????001?????1010011->111101010010000010000000101010???00000?????0000000000\n0010101??????????000?????1010011->110101010110000010000000101010???00000?????0000000000\n0010101??????????001?????1010011->110101010110000010000000101010???00000?????0000000000\n00110000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n0100000??????????000?????0110011->10?00100000010000000001000000000000000?????0110000000\n0100000??????????000?????0111011->10?01011010010000000001000000000000000?????0110000000\n01000????????????010?????0101111->10?100001101000000001000000000???01100010100000011000\n01000????????????011?????0101111->10?100001101000000001000000000???01100010100000011000\n010000???????????101?????0010011->10?00011000010000000001000010000000000?????0110000000\n0100000??????????101?????0011011->10?01100000010000000001000010000000000?????0110000000\n0100000??????????101?????0110011->10?00101100010000000001000000000000000?????0110000000\n0100000??????????101?????0111011->10?01100010010000000001000000000000000?????0110000000\n010000000001?????????????1010011->11110010101000001000000010110000000000?????0000000000\n010000100000?????????????1010011->11010010111000001000000010110000000000?????0000000000\n010110000000?????????????1010011->111110011110000100000000101100???00000?????0000000000\n010110100000?????????????1010011->110110100010000100000000101100???00000?????0000000000\n01100????????????010?????0101111->10?100001101000000001000000000???01100010110000011000\n01100????????????011?????0101111->10?100001101000000001000000000???01100010110000011000\n01111011001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n10000????????????010?????0101111->10?100001101000000001000000000???01100011000000011000\n10000????????????011?????0101111->10?100001101000000001000000000???01100011000000011000\n1010000??????????000?????1010011->111101000010010000000000001010???00000?????0000000000\n1010000??????????001?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????010?????0101111->10?100001101000000001000000000???01100011010000011000\n1010000??????????010?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????011?????0101111->10?100001101000000001000000000???01100011010000011000\n1010001??????????000?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????001?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????010?????1010011->110101000110010000000000001010???00000?????0000000000\n110000000000?????????????1010011->11110011101001000000000000110000000000?????0000000000\n11000????????????010?????0101111->10?100001101000000001000000000???01100011100000011000\n11000????????????011?????0101111->10?100001101000000001000000000???01100011100000011000\n110000000001?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000010?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000011?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000100000?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100001?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100010?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100011?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110100000000?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000001?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000010?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000011?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100100000?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100001?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100010?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100011?????????????1010011->11010011010010100000000010010000000000?????0000000000\n111000000000?????000?????1010011->11110001101001000000000000110000000000?????0000000000\n111000000000?????001?????1010011->11110100101001000000000000110000000000?????0000000000\n11100????????????010?????0101111->10?100001101000000001000000000???01100011110000011000\n11100????????????011?????0101111->10?100001101000000001000000000???01100011110000011000\n111000100000?????000?????1010011->11010001111001000000000000110000000000?????0000000000\n111000100000?????001?????1010011->11010100111001000000000000110000000000?????0000000000\n111100000000?????000?????1010011->11110001000010100000000010010000000000?????0000000000\n111100100000?????000?????1010011->11010001010010100000000010010000000000?????0000000000\n                                  00????????001??????????10????????????0?????????00????",
    "minimizedTable": "???????????????????0?????00?0011->1??????????????????????1???1????????????????1????????\n???????????????????0?????0000011->???????????11???????1????????????1?????????1?????????\n??????????????????0??????0000011->1????????1?11???????1??1???1?????1?????????11????????\n?????????????????0???????0?00011->1??????????11???????1????????????????????????????????\n?????????????????0???????0000011->???????????????????????????????????????????11????????\n?????????????????00??????0001111->1????????????????????????1?1????????????????????11???\n?????????????????000?????0001111->????1?1?1???????????1?????????????1?1????????????????\n???????????????????0?????0010011->??????????????????????1??????????????????????1???????\n?????????????????000?????001?011->1????????1????????????11???1????????????????11???????\n?????????????????000?????0010011->???????1?????????????????????????????????????????????\n?????????????????????????0?10111->1??????1???????????????1?1?1???11???????????1????????\n?????????????????????????0010111->????1???11???????????1???????????????????????????????\n?????????????????000?????0011011->????1?1?1????????????????????????????????????????????\n?????????????????0???????0100011->????????1???????????????????????1?1???????1??????????\n0?00000??????????000?????011?011->1?????????????????????11????????????????????11???????\n000000???????????????????0110011->1??????????????????????1?????????????????????????????\n000000???????????000?????011?011->1??????????????????????1?????????????????????????????\n0000000??????????????????0110011->??????????????????????1?????????????????????11???????\n0000000???????????00?????0110011->?????????1???????????????????????????????????????????\n0000000??????????00??????011?011->??????11?????????????????????????????????????????????\n0000000??????????00??????0110011->????????1????????????????????????????????????????????\n?????????????????????????0110111->??????????????????????1??????????????????????1???????\n0?00000??????????000?????0111011->????1?11?????????????????????????????????????????????\n000000???????????000?????0111011->??????1??????????????????????????????????????????????\n?????????????????????????100??11->???1????????????1?????????1?11???????????????????????\n?????0???????????????????100??11->11????????1?1??????????11????????????????????????????\n?????0???????????????????1000011->?????????1???????????????????????????????????????????\n?????00??????????????????100??11->??1??????????????????????????????????????????????????\n?????00??????????????????1000?11->?????111?????????????????????????????????????????????\n?????0???????????????????100?111->????????1????????????????????????????????????????????\n?????00??????????????????100?111->?????111?????????????????????????????????????????????\n?????0???????????????????1001011->????1????????????????????????????????????????????????\n?????0???????????????????1001111->?????????1???????????????????????????????????????????\n000??0???????????????????1010011->11?1??????1?1??????????11?1?1????????????????????????\n000??00??????????????????1010011->??1??????????????????????????????????????????????????\n000?00???????????????????1010011->?????1??????????1????????????????????????????????????\n000?000??????????????????1010011->?????????1???????????????????????????????????????????\n0000?0???????????????????1010011->?????1??????????1????????????????????????????????????\n000000???????????????????1010011->????????1????????????????????????????????????????????\n0000000??????????????????1010011->???????1?????????????????????????????????????????????\n??????????????????0??????1100011->?????11???????????????1????????1??????????????1??????\n?????????????????000?????1100?11->1????????????????????????????????????????????????????\n?????????????????000?????1100111->????1??11????????????1?1???1????????????????1????????\n?????????????????????????1101111->1???1??1?1???????????1?1?1?1??1?????????????1????????\n00000000000?0000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00000000000?00000000000001110011->1??????????????????????????????????????????????11????\n?????????????????001?????0001111->?????????????????????????????????????1???????????????\n000000????????????01?????0?10011->1??????????????????????1?????????????????????????????\n000000????????????01?????0010011->??????1??1????????????1????1????????????????11???????\n000000???????????001?????0010011->????????1????????????????????????????????????????????\n0000000???????????01?????0?11011->1???1???1?????????????11????????????????????11???????\n0000000???????????01?????0011011->???????????????????????????1?????????????????????????\n0000000??????????001?????0?11011->??????11?????????????????????????????????????????????\n0000000????????????1?????0110011->????????1????????????????????????????????????????????\n0000000???????????01?????0111011->?????????1???????????????????????????????????????????\n??????????????????01?????11?0011->1????????????????????????????????????????????????????\n?????????????????001?????11?0011->?????11??????????????????????????????????????????????\n?????????????????001?????1100011->?????????1???????????????????????????????????????????\n???????????????????1?????1110011->?????????????????1?????1???1????????????????????111?1\n?????????????????001?????1110011->???????11????????????????????????????????????????????\n??????????????????10?????00?0011->?????????1???????????????????????????????????????????\n?????????????????01??????0?00?11->1??????????11???????1????????????????????????????????\n?????????????????01??????0000?11->?????????1?????????????1???1?????1???????????????????\n?????????????????01??????0?00111->?1???????????????????????????????????????????????????\n?????????????????01??????0000111->????????????????????????1????????????????????????????\n?????????????????010?????0?00111->??1??????????????????????????????????????????????????\n??????????????????1??????0010011->1?????????????????????11???1????????????????11???????\n?????????????????01??????0010011->??????1??????????????????????????????????????????????\n?????????????????01??????0100?11->????????1???????????????????????1?1???????1??????????\n?????????????????01??????0100111->??????????1??1??????????????1????????????????????????\n???00????????????01??????0101111->1??1????11?11???????1??1??????????11???1????????11???\n000000????????????1??????0110011->?????1???????????????????????????????????????????????\n000000???????????010?????0110011->?????????1???????????????????????????????????????????\n??????????????????1??????1110011->1????????????????1?????1???1????????????????????1111?\n??????????????????10?????1110011->????????1????????????????????????????????????????????\n?????????????????010?????1110011->?????111?1???????????????????????????????????????????\n??????????????????11?????0010011->????????1????????????????????????????????????????????\n??????????????????11?????1110011->????1????????????????????????????????????????????????\n?????????????????100?????0010011->??????1??????????????????????????????????????????????\n000000???????????1???????0110011->?????1???????????????????????????????????????????????\n0000000??????????1?0?????0110011->???????1?????????????????????????????????????????????\n?????????????????1???????1100011->1????11???????????????1????????1??????????????1??????\n?????????????????1?0?????1100011->???????1?????????????????????????????????????????????\n0?0000???????????101?????0010011->1?????11??????????????11???1????????????????11???????\n0?00000??????????101?????0?11011->1???11????????????????11????????????????????11???????\n0?00000??????????101?????0011011->???????????????????????????1?????????????????????????\n0?00000??????????101?????011?011->1????1????????????????11????????????????????11???????\n0?00000??????????101?????0110011->???????11????????????????????????????????????????????\n000000???????????101?????011?011->?????1??1????????????????????????????????????????????\n0000000??????????1?1?????0110011->?????????1???????????????????????????????????????????\n0?00000??????????101?????0111011->?????????1???????????????????????????????????????????\n?????????????????1?1?????1100011->????????1????????????????????????????????????????????\n?????????????????1?1?????1110011->????1????1???????????????11??????????????????????????\n?????????????????11??????0010011->???????11????????????????????????????????????????????\n?????????????????11??????1100011->?????????1???????????????????????????????????????????\n?????????????????11??????1110011->????1???1????????????????11??????????????????????????\n0000001??????????????????0110011->????11???????????????????????????????????????????????\n0000001???????????00?????011?011->????11???????????????????????????????????????????????\n0000001??????????0???????0110011->???????1???????????1?????????????????????????????????\n0000001??????????000?????011?011->???????????????????1?????????????????????????????????\n?????01??????????????????100??11->????1????????????????????????????????????????????????\n?????01??????????????????1001011->???????1?????????????????????????????????????????????\n0000?01??????????????????1010011->??????1??????????????????????????????????????????????\n0000001??????????001?????0110011->?????????1???????????????????????????????????????????\n0000001??????????01??????0110011->????????1????????????????????????????????????????????\n0000001???????????11?????0110011->???????1?????????????????????????????????????????????\n0000001??????????1???????011?011->1?????????????????1????1?????????????????????????????\n0000001??????????1???????0110011->??????1??????????????????????????????????????????????\n0000001??????????1?0?????011?011->????111??1???????????????????????????????????????????\n0000001??????????10??????011?011->????1?1??????????????????????????????????????????????\n0000001??????????1?0?????0111011->???????1?????????????????????????????????????????????\n0000001??????????10??????0111011->???????1?????????????????????????????????????????????\n0000001??????????110?????011?011->????????1????????????????????????????????????????????\n0000001??????????111?????0111011->???1?????????????????????????????????????????????????\n000010???????????????????1010011->??????1??????????????????????????????????????????????\n000?1????????????01??????0101111->1??1????11?11???????1??1??????????11????1???????11???\n000?101??????????????????1010011->????????1????????????????????????????????????????????\n0000101??????????????????1010011->?????????1???????????????????????????????????????????\n00010??00000?????????????0101111->?????????1??????????1??????1?????1??????11???????1???\n0001?00??????????????????1010011->?????????1???????????????????????????????????????????\n000100???????????????????1010011->??????1??????????????????????????????????????????????\n00010??00000?????01??????0101111->1??????????11??????????1????????????????????????1????\n00?1000000100000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00?10000001000000000000001110011->1???????????????????????????????????????????????1????\n0001000001010000000000000111????->???11?1??1???????1???????1?1?????????????????????11??\n00010000010100000000000001110011->1???????????????????????????????????????????????1????\n0001?01??????????????????1010011->???????1?????????????????????????????????????????????\n0001001???????????????0001110011->??????????????????????????????????????1?1????????1???\n0001001??????????00???0001110011->??????1?1????????????????????????????????????????????\n0001001??????????000??0001110011->???11????1??????????1????????????????????????????????\n0001001??????????000000001110011->1??????????11???????????????????????????????????1????\n000110???????????????????1010011->????1??1???????1?????????????????????????????????????\n00011????????????01??????0101111->?????????????????????????????????????????11??????????\n?01000???????????0?0?????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?01000???????????00??????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?010000??????????0?0?????1010011->??1??????????????????????????????????????????????????\n?010000??????????00??????1010011->??1??????????????????????????????????????????????????\n0010?0???????????00??????1010011->11?1??????1?1???1??????11?1?1????????????????????????\n0010?00??????????00??????1010011->??1??????????????????????????????????????????????????\n001000???????????0?0?????1010011->??????1?????????1???????1????????????????????????????\n001000???????????00??????1010011->??????1??????????????????????????????????????????????\n??100????????????01??????0101111->??????????????????????????????????????????1??????????\n?010001??????????0?0?????1010011->?????????1???????????????????????????????????????????\n?010001??????????00??????1010011->?????????1???????????????????????????????????????????\n0010?01??????????00??????1010011->?????????1???????????????????????????????????????????\n001010???????????00??????1010011->?????1?1?????????????????????????????????????????????\n0100000??????????000?????0110011->?????1???????????????????????????????????????????????\n0100000??????????000?????0111011->?????????1???????????????????????????????????????????\n?1?00????????????01??????0101111->?????????????????????????????????????????1???????????\n?10000000001?????????????1010011->1111??1?1?1?1??????????1??11?????????????????????????\n010000000001?????????????1010011->????????????????1???????1????????????????????????????\n?10000100000?????????????1010011->11?1??1?111?1??????????1??11?????????????????????????\n010000100000?????????????1010011->????????????????1???????1????????????????????????????\n010110?00000?????????????1010011->11?11?????1?1??1???????11?11?????????????????????????\n010110000000?????????????1010011->??1????111???????????????????????????????????????????\n010110100000?????????????1010011->??????1??????????????????????????????????????????????\n0111101100100000000000000111????->???11?1?1????????1???????1?1?????????????????????11??\n01111011001000000000000001110011->1???????????????????????????????????????????????1????\n1??00????????????01??????0101111->????????????????????????????????????????1????????????\n101000???????????0?0?????1010011->?????1???????1???????????????????????????????????????\n101000???????????00??????1010011->?????1???????1???????????????????????????????????????\n11??00?00000?????????????1010011->???1???????????????????????1?????????????????????????\n110?00?000???????????????1010011->11?1??11???????????????1???1?????????????????????????\n110?000000???????????????1010011->??1??????????????????????????????????????????????????\n110000?000???????????????1010011->????????1?1?11????????????1??????????????????????????\n110?001000???????????????1010011->?????????1???????????????????????????????????????????\n110100?000???????????????1010011->??????????????1?????????1????????????????????????????\n111?00?00000?????000?????1010011->11?????1???????????????1?????????????????????????????\n111?00000000?????000?????1010011->??1??????????????????????????????????????????????????\n111000?00000?????00??????1010011->11??????1?1?11?????????1??1??????????????????????????\n111000000000?????00??????1010011->??1??????????????????????????????????????????????????\n111000?00000?????001?????1010011->?????1???????????????????????????????????????????????\n111?00100000?????000?????1010011->?????????1???????????????????????????????????????????\n111000100000?????00??????1010011->?????????1???????????????????????????????????????????\n111100?00000?????000?????1010011->??????????????1?????????1????????????????????????????\n                                  00????????001??????????10????????????0?????????00????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|DecodeUnit_2>cs_decoder_decoded",
    "truthTable": "?????????????????000?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????000?????0001111->10?010101000100000001001010100???01010?????0000011000\n?????????????????000?????0010011->10?00001010010000000001000010000000000?????0110000000\n?????????????????????????0010111->10?01001110010000000010001010001100000?????0100000000\n?????????????????000?????0011011->10?01010110010000000001000010000000000?????0110000000\n?????????????????000?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????000?????0110011->10?00011110010000000001000000000000000?????0110000000\n?????????????????????????0110111->10?00001000010000000001001010001100000?????0110000000\n0000000??????????000?????0111011->10?01011000010000000001000000000000000?????0110000000\n?????00??????????????????1000011->111101110110000010000000101011???00000?????0000000000\n?????00??????????????????1000111->111101111010000010000000101011???00000?????0000000000\n?????00??????????????????1001011->111110000010000010000000101011???00000?????0000000000\n?????00??????????????????1001111->111101111110000010000000101011???00000?????0000000000\n0000000??????????????????1010011->111101011110000010000000101010???00000?????0000000000\n?????????????????000?????1100011->10?00110000010000000001100000001000000?????0001000000\n?????????????????000?????1100111->10?01001100010000000010000010000000000?????0100000000\n?????????????????????????1101111->10?01001010010000000010001010010000000?????0100000000\n00000000000000000000000001110011->10?11010100010000100000101010000000000?????0000111100\n?????????????????001?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????001?????0001111->10?0000000001??????????1010100???00001?????0000011000\n000000???????????001?????0010011->10?00010110010000000001000010000000000?????0110000000\n0000000??????????001?????0011011->10?01011100010000000001000010000000000?????0110000000\n?????????????????001?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????001?????0110011->10?00011100010000000001000000000000000?????0110000000\n0000000??????????001?????0111011->10?01011110010000000001000000000000000?????0110000000\n?????????????????001?????1100011->10?00110010010000000001100000001000000?????0001000000\n?????????????????001?????1110011->10?00111100010000100000000010000000000?????0000011101\n?????????????????010?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????010?????0000111->11100000010100000000100010010000010000000000000000000\n?????????????????010?????0010011->10?00010010010000000001000010000000000?????0110000000\n?????????????????010?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????010?????0100111->11100000101101000000100100001000101000000010000000000\n00000????????????010?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????010?????0110011->10?00100010010000000001000000000000000?????0110000000\n?????????????????010?????1110011->10?00111110010000100000000010000000000?????0000011110\n?????????????????011?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????011?????0000111->11000000010100000000100010010000010000000000000000000\n?????????????????011?????0010011->10?00010100010000000001000010000000000?????0110000000\n?????????????????011?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????011?????0100111->11000000101101000000100100001000101000000010000000000\n00000????????????011?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????011?????0110011->10?00100100010000000001000000000000000?????0110000000\n?????????????????011?????1110011->10?01000000010000100000000010000000000?????0000011111\n?????????????????100?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????100?????0010011->10?00010000010000000001000010000000000?????0110000000\n0000000??????????100?????0110011->10?00101010010000000001000000000000000?????0110000000\n?????????????????100?????1100011->10?00111000010000000001100000001000000?????0001000000\n?????????????????101?????0000011->10?00000010100000000100000010000010000000001100000000\n000000???????????101?????0010011->10?00011010010000000001000010000000000?????0110000000\n0000000??????????101?????0011011->10?01100100010000000001000010000000000?????0110000000\n0000000??????????101?????0110011->10?001011100100000000010000000???00000?????0110000000\n0000000??????????101?????0111011->10?011001100100000000010000000???00000?????0110000000\n?????????????????101?????1100011->10?00110100010000000001100000001000000?????0001000000\n?????????????????101?????1110011->10?01000010010000100000001110000000000?????0000011101\n?????????????????110?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????110?????0010011->10?00001110010000000001000010000000000?????0110000000\n0000000??????????110?????0110011->10?00101000010000000001000000000000000?????0110000000\n?????????????????110?????1100011->10?00111010010000000001100000001000000?????0001000000\n?????????????????110?????1110011->10?01000100010000100000001110000000000?????0000011110\n?????????????????111?????0010011->10?00001100010000000001000010000000000?????0110000000\n0000000??????????111?????0110011->10?00100110010000000001000000000000000?????0110000000\n?????????????????111?????1100011->10?00110110010000000001100000001000000?????0001000000\n?????????????????111?????1110011->10?01000110010000100000001110000000000?????0000011111\n00000000000100000000000001110011->10?11010100010000100000101010000000000?????0000111100\n0000001??????????000?????0110011->10?011010000100000010000000000???00000?????0000000000\n0000001??????????000?????0111011->10?011100000100000010000000000???00000?????0000000000\n?????01??????????????????1000011->110110000110000010000000101011???00000?????0000000000\n?????01??????????????????1000111->110110001010000010000000101011???00000?????0000000000\n?????01??????????????????1001011->110110010010000010000000101011???00000?????0000000000\n?????01??????????????????1001111->110110001110000010000000101011???00000?????0000000000\n0000001??????????????????1010011->110101101010000010000000101010???00000?????0000000000\n0000001??????????001?????0110011->10?011010100100000010000000000???00000?????0000000000\n0000001??????????010?????0110011->10?011011100100000010000000000???00000?????0000000000\n0000001??????????011?????0110011->10?011011000100000010000000000???00000?????0000000000\n0000001??????????100?????0110011->10?011100100100000100000000000???00000?????0000000000\n0000001??????????100?????0111011->10?011110100100000100000000000???00000?????0000000000\n0000001??????????101?????0110011->10?011101000100000100000000000???00000?????0000000000\n0000001??????????101?????0111011->10?011111000100000100000000000???00000?????0000000000\n0000001??????????110?????0110011->10?011101100100000100000000000???00000?????0000000000\n0000001??????????110?????0111011->10?011111100100000100000000000???00000?????0000000000\n0000001??????????111?????0110011->10?011110000100000100000000000???00000?????0000000000\n0000001??????????111?????0111011->10?100000000100000100000000000???00000?????0000000000\n0000100??????????????????1010011->111101100010000010000000101010???00000?????0000000000\n00001????????????010?????0101111->10?100001101000000001000000000???01100001000000011000\n00001????????????011?????0101111->10?100001101000000001000000000???01100001000000011000\n0000101??????????????????1010011->110101101110000010000000101010???00000?????0000000000\n0001000??????????????????1010011->111101100110000010000000101010???00000?????0000000000\n00010??00000?????010?????0101111->10?000000101000000001000000100???10000001100000011000\n00010??00000?????011?????0101111->10?000000101000000001000000100???10000001100000011000\n00010000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n00010000010100000000000001110011->10?110100100100001000001010100???00000?????0000011100\n0001001??????????????????1010011->110101110010000010000000101010???00000?????0000000000\n0001001??????????000000001110011->10?110101101000000001001000000???00000101000000011000\n0001100??????????????????1010011->111110010110000100000000101010???00000?????0000000000\n00011????????????010?????0101111->10?100001101000000001000000000???01100001110000011000\n00011????????????011?????0101111->10?100001101000000001000000000???01100001110000011000\n0001101??????????????????1010011->110110011010000100000000101010???00000?????0000000000\n0010000??????????000?????1010011->111100100010000010000000101010???00000?????0000000000\n0010000??????????001?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????010?????0101111->10?100001101000000001000000000???01100010010000011000\n0010000??????????010?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????011?????0101111->10?100001101000000001000000000???01100010010000011000\n0010001??????????000?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????001?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????010?????1010011->110100100110000010000000101010???00000?????0000000000\n0010100??????????000?????1010011->111101010010000010000000101010???00000?????0000000000\n0010100??????????001?????1010011->111101010010000010000000101010???00000?????0000000000\n0010101??????????000?????1010011->110101010110000010000000101010???00000?????0000000000\n0010101??????????001?????1010011->110101010110000010000000101010???00000?????0000000000\n00110000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n0100000??????????000?????0110011->10?00100000010000000001000000000000000?????0110000000\n0100000??????????000?????0111011->10?01011010010000000001000000000000000?????0110000000\n01000????????????010?????0101111->10?100001101000000001000000000???01100010100000011000\n01000????????????011?????0101111->10?100001101000000001000000000???01100010100000011000\n010000???????????101?????0010011->10?00011000010000000001000010000000000?????0110000000\n0100000??????????101?????0011011->10?01100000010000000001000010000000000?????0110000000\n0100000??????????101?????0110011->10?00101100010000000001000000000000000?????0110000000\n0100000??????????101?????0111011->10?01100010010000000001000000000000000?????0110000000\n010000000001?????????????1010011->11110010101000001000000010110000000000?????0000000000\n010000100000?????????????1010011->11010010111000001000000010110000000000?????0000000000\n010110000000?????????????1010011->111110011110000100000000101100???00000?????0000000000\n010110100000?????????????1010011->110110100010000100000000101100???00000?????0000000000\n01100????????????010?????0101111->10?100001101000000001000000000???01100010110000011000\n01100????????????011?????0101111->10?100001101000000001000000000???01100010110000011000\n01111011001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n10000????????????010?????0101111->10?100001101000000001000000000???01100011000000011000\n10000????????????011?????0101111->10?100001101000000001000000000???01100011000000011000\n1010000??????????000?????1010011->111101000010010000000000001010???00000?????0000000000\n1010000??????????001?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????010?????0101111->10?100001101000000001000000000???01100011010000011000\n1010000??????????010?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????011?????0101111->10?100001101000000001000000000???01100011010000011000\n1010001??????????000?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????001?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????010?????1010011->110101000110010000000000001010???00000?????0000000000\n110000000000?????????????1010011->11110011101001000000000000110000000000?????0000000000\n11000????????????010?????0101111->10?100001101000000001000000000???01100011100000011000\n11000????????????011?????0101111->10?100001101000000001000000000???01100011100000011000\n110000000001?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000010?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000011?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000100000?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100001?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100010?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100011?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110100000000?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000001?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000010?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000011?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100100000?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100001?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100010?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100011?????????????1010011->11010011010010100000000010010000000000?????0000000000\n111000000000?????000?????1010011->11110001101001000000000000110000000000?????0000000000\n111000000000?????001?????1010011->11110100101001000000000000110000000000?????0000000000\n11100????????????010?????0101111->10?100001101000000001000000000???01100011110000011000\n11100????????????011?????0101111->10?100001101000000001000000000???01100011110000011000\n111000100000?????000?????1010011->11010001111001000000000000110000000000?????0000000000\n111000100000?????001?????1010011->11010100111001000000000000110000000000?????0000000000\n111100000000?????000?????1010011->11110001000010100000000010010000000000?????0000000000\n111100100000?????000?????1010011->11010001010010100000000010010000000000?????0000000000\n                                  00????????001??????????10????????????0?????????00????",
    "minimizedTable": "???????????????????0?????00?0011->1??????????????????????1???1????????????????1????????\n???????????????????0?????0000011->???????????11???????1????????????1?????????1?????????\n??????????????????0??????0000011->1????????1?11???????1??1???1?????1?????????11????????\n?????????????????0???????0?00011->1??????????11???????1????????????????????????????????\n?????????????????0???????0000011->???????????????????????????????????????????11????????\n?????????????????00??????0001111->1????????????????????????1?1????????????????????11???\n?????????????????000?????0001111->????1?1?1???????????1?????????????1?1????????????????\n???????????????????0?????0010011->??????????????????????1??????????????????????1???????\n?????????????????000?????001?011->1????????1????????????11???1????????????????11???????\n?????????????????000?????0010011->???????1?????????????????????????????????????????????\n?????????????????????????0?10111->1??????1???????????????1?1?1???11???????????1????????\n?????????????????????????0010111->????1???11???????????1???????????????????????????????\n?????????????????000?????0011011->????1?1?1????????????????????????????????????????????\n?????????????????0???????0100011->????????1???????????????????????1?1???????1??????????\n0?00000??????????000?????011?011->1?????????????????????11????????????????????11???????\n000000???????????????????0110011->1??????????????????????1?????????????????????????????\n000000???????????000?????011?011->1??????????????????????1?????????????????????????????\n0000000??????????????????0110011->??????????????????????1?????????????????????11???????\n0000000???????????00?????0110011->?????????1???????????????????????????????????????????\n0000000??????????00??????011?011->??????11?????????????????????????????????????????????\n0000000??????????00??????0110011->????????1????????????????????????????????????????????\n?????????????????????????0110111->??????????????????????1??????????????????????1???????\n0?00000??????????000?????0111011->????1?11?????????????????????????????????????????????\n000000???????????000?????0111011->??????1??????????????????????????????????????????????\n?????????????????????????100??11->???1????????????1?????????1?11???????????????????????\n?????0???????????????????100??11->11????????1?1??????????11????????????????????????????\n?????0???????????????????1000011->?????????1???????????????????????????????????????????\n?????00??????????????????100??11->??1??????????????????????????????????????????????????\n?????00??????????????????1000?11->?????111?????????????????????????????????????????????\n?????0???????????????????100?111->????????1????????????????????????????????????????????\n?????00??????????????????100?111->?????111?????????????????????????????????????????????\n?????0???????????????????1001011->????1????????????????????????????????????????????????\n?????0???????????????????1001111->?????????1???????????????????????????????????????????\n000??0???????????????????1010011->11?1??????1?1??????????11?1?1????????????????????????\n000??00??????????????????1010011->??1??????????????????????????????????????????????????\n000?00???????????????????1010011->?????1??????????1????????????????????????????????????\n000?000??????????????????1010011->?????????1???????????????????????????????????????????\n0000?0???????????????????1010011->?????1??????????1????????????????????????????????????\n000000???????????????????1010011->????????1????????????????????????????????????????????\n0000000??????????????????1010011->???????1?????????????????????????????????????????????\n??????????????????0??????1100011->?????11???????????????1????????1??????????????1??????\n?????????????????000?????1100?11->1????????????????????????????????????????????????????\n?????????????????000?????1100111->????1??11????????????1?1???1????????????????1????????\n?????????????????????????1101111->1???1??1?1???????????1?1?1?1??1?????????????1????????\n00000000000?0000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00000000000?00000000000001110011->1??????????????????????????????????????????????11????\n?????????????????001?????0001111->?????????????????????????????????????1???????????????\n000000????????????01?????0?10011->1??????????????????????1?????????????????????????????\n000000????????????01?????0010011->??????1??1????????????1????1????????????????11???????\n000000???????????001?????0010011->????????1????????????????????????????????????????????\n0000000???????????01?????0?11011->1???1???1?????????????11????????????????????11???????\n0000000???????????01?????0011011->???????????????????????????1?????????????????????????\n0000000??????????001?????0?11011->??????11?????????????????????????????????????????????\n0000000????????????1?????0110011->????????1????????????????????????????????????????????\n0000000???????????01?????0111011->?????????1???????????????????????????????????????????\n??????????????????01?????11?0011->1????????????????????????????????????????????????????\n?????????????????001?????11?0011->?????11??????????????????????????????????????????????\n?????????????????001?????1100011->?????????1???????????????????????????????????????????\n???????????????????1?????1110011->?????????????????1?????1???1????????????????????111?1\n?????????????????001?????1110011->???????11????????????????????????????????????????????\n??????????????????10?????00?0011->?????????1???????????????????????????????????????????\n?????????????????01??????0?00?11->1??????????11???????1????????????????????????????????\n?????????????????01??????0000?11->?????????1?????????????1???1?????1???????????????????\n?????????????????01??????0?00111->?1???????????????????????????????????????????????????\n?????????????????01??????0000111->????????????????????????1????????????????????????????\n?????????????????010?????0?00111->??1??????????????????????????????????????????????????\n??????????????????1??????0010011->1?????????????????????11???1????????????????11???????\n?????????????????01??????0010011->??????1??????????????????????????????????????????????\n?????????????????01??????0100?11->????????1???????????????????????1?1???????1??????????\n?????????????????01??????0100111->??????????1??1??????????????1????????????????????????\n???00????????????01??????0101111->1??1????11?11???????1??1??????????11???1????????11???\n000000????????????1??????0110011->?????1???????????????????????????????????????????????\n000000???????????010?????0110011->?????????1???????????????????????????????????????????\n??????????????????1??????1110011->1????????????????1?????1???1????????????????????1111?\n??????????????????10?????1110011->????????1????????????????????????????????????????????\n?????????????????010?????1110011->?????111?1???????????????????????????????????????????\n??????????????????11?????0010011->????????1????????????????????????????????????????????\n??????????????????11?????1110011->????1????????????????????????????????????????????????\n?????????????????100?????0010011->??????1??????????????????????????????????????????????\n000000???????????1???????0110011->?????1???????????????????????????????????????????????\n0000000??????????1?0?????0110011->???????1?????????????????????????????????????????????\n?????????????????1???????1100011->1????11???????????????1????????1??????????????1??????\n?????????????????1?0?????1100011->???????1?????????????????????????????????????????????\n0?0000???????????101?????0010011->1?????11??????????????11???1????????????????11???????\n0?00000??????????101?????0?11011->1???11????????????????11????????????????????11???????\n0?00000??????????101?????0011011->???????????????????????????1?????????????????????????\n0?00000??????????101?????011?011->1????1????????????????11????????????????????11???????\n0?00000??????????101?????0110011->???????11????????????????????????????????????????????\n000000???????????101?????011?011->?????1??1????????????????????????????????????????????\n0000000??????????1?1?????0110011->?????????1???????????????????????????????????????????\n0?00000??????????101?????0111011->?????????1???????????????????????????????????????????\n?????????????????1?1?????1100011->????????1????????????????????????????????????????????\n?????????????????1?1?????1110011->????1????1???????????????11??????????????????????????\n?????????????????11??????0010011->???????11????????????????????????????????????????????\n?????????????????11??????1100011->?????????1???????????????????????????????????????????\n?????????????????11??????1110011->????1???1????????????????11??????????????????????????\n0000001??????????????????0110011->????11???????????????????????????????????????????????\n0000001???????????00?????011?011->????11???????????????????????????????????????????????\n0000001??????????0???????0110011->???????1???????????1?????????????????????????????????\n0000001??????????000?????011?011->???????????????????1?????????????????????????????????\n?????01??????????????????100??11->????1????????????????????????????????????????????????\n?????01??????????????????1001011->???????1?????????????????????????????????????????????\n0000?01??????????????????1010011->??????1??????????????????????????????????????????????\n0000001??????????001?????0110011->?????????1???????????????????????????????????????????\n0000001??????????01??????0110011->????????1????????????????????????????????????????????\n0000001???????????11?????0110011->???????1?????????????????????????????????????????????\n0000001??????????1???????011?011->1?????????????????1????1?????????????????????????????\n0000001??????????1???????0110011->??????1??????????????????????????????????????????????\n0000001??????????1?0?????011?011->????111??1???????????????????????????????????????????\n0000001??????????10??????011?011->????1?1??????????????????????????????????????????????\n0000001??????????1?0?????0111011->???????1?????????????????????????????????????????????\n0000001??????????10??????0111011->???????1?????????????????????????????????????????????\n0000001??????????110?????011?011->????????1????????????????????????????????????????????\n0000001??????????111?????0111011->???1?????????????????????????????????????????????????\n000010???????????????????1010011->??????1??????????????????????????????????????????????\n000?1????????????01??????0101111->1??1????11?11???????1??1??????????11????1???????11???\n000?101??????????????????1010011->????????1????????????????????????????????????????????\n0000101??????????????????1010011->?????????1???????????????????????????????????????????\n00010??00000?????????????0101111->?????????1??????????1??????1?????1??????11???????1???\n0001?00??????????????????1010011->?????????1???????????????????????????????????????????\n000100???????????????????1010011->??????1??????????????????????????????????????????????\n00010??00000?????01??????0101111->1??????????11??????????1????????????????????????1????\n00?1000000100000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00?10000001000000000000001110011->1???????????????????????????????????????????????1????\n0001000001010000000000000111????->???11?1??1???????1???????1?1?????????????????????11??\n00010000010100000000000001110011->1???????????????????????????????????????????????1????\n0001?01??????????????????1010011->???????1?????????????????????????????????????????????\n0001001???????????????0001110011->??????????????????????????????????????1?1????????1???\n0001001??????????00???0001110011->??????1?1????????????????????????????????????????????\n0001001??????????000??0001110011->???11????1??????????1????????????????????????????????\n0001001??????????000000001110011->1??????????11???????????????????????????????????1????\n000110???????????????????1010011->????1??1???????1?????????????????????????????????????\n00011????????????01??????0101111->?????????????????????????????????????????11??????????\n?01000???????????0?0?????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?01000???????????00??????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?010000??????????0?0?????1010011->??1??????????????????????????????????????????????????\n?010000??????????00??????1010011->??1??????????????????????????????????????????????????\n0010?0???????????00??????1010011->11?1??????1?1???1??????11?1?1????????????????????????\n0010?00??????????00??????1010011->??1??????????????????????????????????????????????????\n001000???????????0?0?????1010011->??????1?????????1???????1????????????????????????????\n001000???????????00??????1010011->??????1??????????????????????????????????????????????\n??100????????????01??????0101111->??????????????????????????????????????????1??????????\n?010001??????????0?0?????1010011->?????????1???????????????????????????????????????????\n?010001??????????00??????1010011->?????????1???????????????????????????????????????????\n0010?01??????????00??????1010011->?????????1???????????????????????????????????????????\n001010???????????00??????1010011->?????1?1?????????????????????????????????????????????\n0100000??????????000?????0110011->?????1???????????????????????????????????????????????\n0100000??????????000?????0111011->?????????1???????????????????????????????????????????\n?1?00????????????01??????0101111->?????????????????????????????????????????1???????????\n?10000000001?????????????1010011->1111??1?1?1?1??????????1??11?????????????????????????\n010000000001?????????????1010011->????????????????1???????1????????????????????????????\n?10000100000?????????????1010011->11?1??1?111?1??????????1??11?????????????????????????\n010000100000?????????????1010011->????????????????1???????1????????????????????????????\n010110?00000?????????????1010011->11?11?????1?1??1???????11?11?????????????????????????\n010110000000?????????????1010011->??1????111???????????????????????????????????????????\n010110100000?????????????1010011->??????1??????????????????????????????????????????????\n0111101100100000000000000111????->???11?1?1????????1???????1?1?????????????????????11??\n01111011001000000000000001110011->1???????????????????????????????????????????????1????\n1??00????????????01??????0101111->????????????????????????????????????????1????????????\n101000???????????0?0?????1010011->?????1???????1???????????????????????????????????????\n101000???????????00??????1010011->?????1???????1???????????????????????????????????????\n11??00?00000?????????????1010011->???1???????????????????????1?????????????????????????\n110?00?000???????????????1010011->11?1??11???????????????1???1?????????????????????????\n110?000000???????????????1010011->??1??????????????????????????????????????????????????\n110000?000???????????????1010011->????????1?1?11????????????1??????????????????????????\n110?001000???????????????1010011->?????????1???????????????????????????????????????????\n110100?000???????????????1010011->??????????????1?????????1????????????????????????????\n111?00?00000?????000?????1010011->11?????1???????????????1?????????????????????????????\n111?00000000?????000?????1010011->??1??????????????????????????????????????????????????\n111000?00000?????00??????1010011->11??????1?1?11?????????1??1??????????????????????????\n111000000000?????00??????1010011->??1??????????????????????????????????????????????????\n111000?00000?????001?????1010011->?????1???????????????????????????????????????????????\n111?00100000?????000?????1010011->?????????1???????????????????????????????????????????\n111000100000?????00??????1010011->?????????1???????????????????????????????????????????\n111100?00000?????000?????1010011->??????????????1?????????1????????????????????????????\n                                  00????????001??????????10????????????0?????????00????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|DecodeUnit_3>cs_decoder_decoded",
    "truthTable": "?????????????????000?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????000?????0001111->10?010101000100000001001010100???01010?????0000011000\n?????????????????000?????0010011->10?00001010010000000001000010000000000?????0110000000\n?????????????????????????0010111->10?01001110010000000010001010001100000?????0100000000\n?????????????????000?????0011011->10?01010110010000000001000010000000000?????0110000000\n?????????????????000?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????000?????0110011->10?00011110010000000001000000000000000?????0110000000\n?????????????????????????0110111->10?00001000010000000001001010001100000?????0110000000\n0000000??????????000?????0111011->10?01011000010000000001000000000000000?????0110000000\n?????00??????????????????1000011->111101110110000010000000101011???00000?????0000000000\n?????00??????????????????1000111->111101111010000010000000101011???00000?????0000000000\n?????00??????????????????1001011->111110000010000010000000101011???00000?????0000000000\n?????00??????????????????1001111->111101111110000010000000101011???00000?????0000000000\n0000000??????????????????1010011->111101011110000010000000101010???00000?????0000000000\n?????????????????000?????1100011->10?00110000010000000001100000001000000?????0001000000\n?????????????????000?????1100111->10?01001100010000000010000010000000000?????0100000000\n?????????????????????????1101111->10?01001010010000000010001010010000000?????0100000000\n00000000000000000000000001110011->10?11010100010000100000101010000000000?????0000111100\n?????????????????001?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????001?????0001111->10?0000000001??????????1010100???00001?????0000011000\n000000???????????001?????0010011->10?00010110010000000001000010000000000?????0110000000\n0000000??????????001?????0011011->10?01011100010000000001000010000000000?????0110000000\n?????????????????001?????0100011->10?00000100100000000100100000000101000000010000000000\n0000000??????????001?????0110011->10?00011100010000000001000000000000000?????0110000000\n0000000??????????001?????0111011->10?01011110010000000001000000000000000?????0110000000\n?????????????????001?????1100011->10?00110010010000000001100000001000000?????0001000000\n?????????????????001?????1110011->10?00111100010000100000000010000000000?????0000011101\n?????????????????010?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????010?????0000111->11100000010100000000100010010000010000000000000000000\n?????????????????010?????0010011->10?00010010010000000001000010000000000?????0110000000\n?????????????????010?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????010?????0100111->11100000101101000000100100001000101000000010000000000\n00000????????????010?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????010?????0110011->10?00100010010000000001000000000000000?????0110000000\n?????????????????010?????1110011->10?00111110010000100000000010000000000?????0000011110\n?????????????????011?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????011?????0000111->11000000010100000000100010010000010000000000000000000\n?????????????????011?????0010011->10?00010100010000000001000010000000000?????0110000000\n?????????????????011?????0100011->10?00000100100000000100100000000101000000010000000000\n?????????????????011?????0100111->11000000101101000000100100001000101000000010000000000\n00000????????????011?????0101111->10?100001101000000001000000000???01100010000000011000\n0000000??????????011?????0110011->10?00100100010000000001000000000000000?????0110000000\n?????????????????011?????1110011->10?01000000010000100000000010000000000?????0000011111\n?????????????????100?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????100?????0010011->10?00010000010000000001000010000000000?????0110000000\n0000000??????????100?????0110011->10?00101010010000000001000000000000000?????0110000000\n?????????????????100?????1100011->10?00111000010000000001100000001000000?????0001000000\n?????????????????101?????0000011->10?00000010100000000100000010000010000000001100000000\n000000???????????101?????0010011->10?00011010010000000001000010000000000?????0110000000\n0000000??????????101?????0011011->10?01100100010000000001000010000000000?????0110000000\n0000000??????????101?????0110011->10?001011100100000000010000000???00000?????0110000000\n0000000??????????101?????0111011->10?011001100100000000010000000???00000?????0110000000\n?????????????????101?????1100011->10?00110100010000000001100000001000000?????0001000000\n?????????????????101?????1110011->10?01000010010000100000001110000000000?????0000011101\n?????????????????110?????0000011->10?00000010100000000100000010000010000000001100000000\n?????????????????110?????0010011->10?00001110010000000001000010000000000?????0110000000\n0000000??????????110?????0110011->10?00101000010000000001000000000000000?????0110000000\n?????????????????110?????1100011->10?00111010010000000001100000001000000?????0001000000\n?????????????????110?????1110011->10?01000100010000100000001110000000000?????0000011110\n?????????????????111?????0010011->10?00001100010000000001000010000000000?????0110000000\n0000000??????????111?????0110011->10?00100110010000000001000000000000000?????0110000000\n?????????????????111?????1100011->10?00110110010000000001100000001000000?????0001000000\n?????????????????111?????1110011->10?01000110010000100000001110000000000?????0000011111\n00000000000100000000000001110011->10?11010100010000100000101010000000000?????0000111100\n0000001??????????000?????0110011->10?011010000100000010000000000???00000?????0000000000\n0000001??????????000?????0111011->10?011100000100000010000000000???00000?????0000000000\n?????01??????????????????1000011->110110000110000010000000101011???00000?????0000000000\n?????01??????????????????1000111->110110001010000010000000101011???00000?????0000000000\n?????01??????????????????1001011->110110010010000010000000101011???00000?????0000000000\n?????01??????????????????1001111->110110001110000010000000101011???00000?????0000000000\n0000001??????????????????1010011->110101101010000010000000101010???00000?????0000000000\n0000001??????????001?????0110011->10?011010100100000010000000000???00000?????0000000000\n0000001??????????010?????0110011->10?011011100100000010000000000???00000?????0000000000\n0000001??????????011?????0110011->10?011011000100000010000000000???00000?????0000000000\n0000001??????????100?????0110011->10?011100100100000100000000000???00000?????0000000000\n0000001??????????100?????0111011->10?011110100100000100000000000???00000?????0000000000\n0000001??????????101?????0110011->10?011101000100000100000000000???00000?????0000000000\n0000001??????????101?????0111011->10?011111000100000100000000000???00000?????0000000000\n0000001??????????110?????0110011->10?011101100100000100000000000???00000?????0000000000\n0000001??????????110?????0111011->10?011111100100000100000000000???00000?????0000000000\n0000001??????????111?????0110011->10?011110000100000100000000000???00000?????0000000000\n0000001??????????111?????0111011->10?100000000100000100000000000???00000?????0000000000\n0000100??????????????????1010011->111101100010000010000000101010???00000?????0000000000\n00001????????????010?????0101111->10?100001101000000001000000000???01100001000000011000\n00001????????????011?????0101111->10?100001101000000001000000000???01100001000000011000\n0000101??????????????????1010011->110101101110000010000000101010???00000?????0000000000\n0001000??????????????????1010011->111101100110000010000000101010???00000?????0000000000\n00010??00000?????010?????0101111->10?000000101000000001000000100???10000001100000011000\n00010??00000?????011?????0101111->10?000000101000000001000000100???10000001100000011000\n00010000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n00010000010100000000000001110011->10?110100100100001000001010100???00000?????0000011100\n0001001??????????????????1010011->110101110010000010000000101010???00000?????0000000000\n0001001??????????000000001110011->10?110101101000000001001000000???00000101000000011000\n0001100??????????????????1010011->111110010110000100000000101010???00000?????0000000000\n00011????????????010?????0101111->10?100001101000000001000000000???01100001110000011000\n00011????????????011?????0101111->10?100001101000000001000000000???01100001110000011000\n0001101??????????????????1010011->110110011010000100000000101010???00000?????0000000000\n0010000??????????000?????1010011->111100100010000010000000101010???00000?????0000000000\n0010000??????????001?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????010?????0101111->10?100001101000000001000000000???01100010010000011000\n0010000??????????010?????1010011->111100100010000010000000101010???00000?????0000000000\n00100????????????011?????0101111->10?100001101000000001000000000???01100010010000011000\n0010001??????????000?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????001?????1010011->110100100110000010000000101010???00000?????0000000000\n0010001??????????010?????1010011->110100100110000010000000101010???00000?????0000000000\n0010100??????????000?????1010011->111101010010000010000000101010???00000?????0000000000\n0010100??????????001?????1010011->111101010010000010000000101010???00000?????0000000000\n0010101??????????000?????1010011->110101010110000010000000101010???00000?????0000000000\n0010101??????????001?????1010011->110101010110000010000000101010???00000?????0000000000\n00110000001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n0100000??????????000?????0110011->10?00100000010000000001000000000000000?????0110000000\n0100000??????????000?????0111011->10?01011010010000000001000000000000000?????0110000000\n01000????????????010?????0101111->10?100001101000000001000000000???01100010100000011000\n01000????????????011?????0101111->10?100001101000000001000000000???01100010100000011000\n010000???????????101?????0010011->10?00011000010000000001000010000000000?????0110000000\n0100000??????????101?????0011011->10?01100000010000000001000010000000000?????0110000000\n0100000??????????101?????0110011->10?00101100010000000001000000000000000?????0110000000\n0100000??????????101?????0111011->10?01100010010000000001000000000000000?????0110000000\n010000000001?????????????1010011->11110010101000001000000010110000000000?????0000000000\n010000100000?????????????1010011->11010010111000001000000010110000000000?????0000000000\n010110000000?????????????1010011->111110011110000100000000101100???00000?????0000000000\n010110100000?????????????1010011->110110100010000100000000101100???00000?????0000000000\n01100????????????010?????0101111->10?100001101000000001000000000???01100010110000011000\n01100????????????011?????0101111->10?100001101000000001000000000???01100010110000011000\n01111011001000000000000001110011->10?11010100010000100000101010000000000?????0000011100\n10000????????????010?????0101111->10?100001101000000001000000000???01100011000000011000\n10000????????????011?????0101111->10?100001101000000001000000000???01100011000000011000\n1010000??????????000?????1010011->111101000010010000000000001010???00000?????0000000000\n1010000??????????001?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????010?????0101111->10?100001101000000001000000000???01100011010000011000\n1010000??????????010?????1010011->111101000010010000000000001010???00000?????0000000000\n10100????????????011?????0101111->10?100001101000000001000000000???01100011010000011000\n1010001??????????000?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????001?????1010011->110101000110010000000000001010???00000?????0000000000\n1010001??????????010?????1010011->110101000110010000000000001010???00000?????0000000000\n110000000000?????????????1010011->11110011101001000000000000110000000000?????0000000000\n11000????????????010?????0101111->10?100001101000000001000000000???01100011100000011000\n11000????????????011?????0101111->10?100001101000000001000000000???01100011100000011000\n110000000001?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000010?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000000011?????????????1010011->11110011101001000000000000110000000000?????0000000000\n110000100000?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100001?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100010?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110000100011?????????????1010011->11010011111001000000000000110000000000?????0000000000\n110100000000?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000001?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000010?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100000011?????????????1010011->11110011000010100000000010010000000000?????0000000000\n110100100000?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100001?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100010?????????????1010011->11010011010010100000000010010000000000?????0000000000\n110100100011?????????????1010011->11010011010010100000000010010000000000?????0000000000\n111000000000?????000?????1010011->11110001101001000000000000110000000000?????0000000000\n111000000000?????001?????1010011->11110100101001000000000000110000000000?????0000000000\n11100????????????010?????0101111->10?100001101000000001000000000???01100011110000011000\n11100????????????011?????0101111->10?100001101000000001000000000???01100011110000011000\n111000100000?????000?????1010011->11010001111001000000000000110000000000?????0000000000\n111000100000?????001?????1010011->11010100111001000000000000110000000000?????0000000000\n111100000000?????000?????1010011->11110001000010100000000010010000000000?????0000000000\n111100100000?????000?????1010011->11010001010010100000000010010000000000?????0000000000\n                                  00????????001??????????10????????????0?????????00????",
    "minimizedTable": "???????????????????0?????00?0011->1??????????????????????1???1????????????????1????????\n???????????????????0?????0000011->???????????11???????1????????????1?????????1?????????\n??????????????????0??????0000011->1????????1?11???????1??1???1?????1?????????11????????\n?????????????????0???????0?00011->1??????????11???????1????????????????????????????????\n?????????????????0???????0000011->???????????????????????????????????????????11????????\n?????????????????00??????0001111->1????????????????????????1?1????????????????????11???\n?????????????????000?????0001111->????1?1?1???????????1?????????????1?1????????????????\n???????????????????0?????0010011->??????????????????????1??????????????????????1???????\n?????????????????000?????001?011->1????????1????????????11???1????????????????11???????\n?????????????????000?????0010011->???????1?????????????????????????????????????????????\n?????????????????????????0?10111->1??????1???????????????1?1?1???11???????????1????????\n?????????????????????????0010111->????1???11???????????1???????????????????????????????\n?????????????????000?????0011011->????1?1?1????????????????????????????????????????????\n?????????????????0???????0100011->????????1???????????????????????1?1???????1??????????\n0?00000??????????000?????011?011->1?????????????????????11????????????????????11???????\n000000???????????????????0110011->1??????????????????????1?????????????????????????????\n000000???????????000?????011?011->1??????????????????????1?????????????????????????????\n0000000??????????????????0110011->??????????????????????1?????????????????????11???????\n0000000???????????00?????0110011->?????????1???????????????????????????????????????????\n0000000??????????00??????011?011->??????11?????????????????????????????????????????????\n0000000??????????00??????0110011->????????1????????????????????????????????????????????\n?????????????????????????0110111->??????????????????????1??????????????????????1???????\n0?00000??????????000?????0111011->????1?11?????????????????????????????????????????????\n000000???????????000?????0111011->??????1??????????????????????????????????????????????\n?????????????????????????100??11->???1????????????1?????????1?11???????????????????????\n?????0???????????????????100??11->11????????1?1??????????11????????????????????????????\n?????0???????????????????1000011->?????????1???????????????????????????????????????????\n?????00??????????????????100??11->??1??????????????????????????????????????????????????\n?????00??????????????????1000?11->?????111?????????????????????????????????????????????\n?????0???????????????????100?111->????????1????????????????????????????????????????????\n?????00??????????????????100?111->?????111?????????????????????????????????????????????\n?????0???????????????????1001011->????1????????????????????????????????????????????????\n?????0???????????????????1001111->?????????1???????????????????????????????????????????\n000??0???????????????????1010011->11?1??????1?1??????????11?1?1????????????????????????\n000??00??????????????????1010011->??1??????????????????????????????????????????????????\n000?00???????????????????1010011->?????1??????????1????????????????????????????????????\n000?000??????????????????1010011->?????????1???????????????????????????????????????????\n0000?0???????????????????1010011->?????1??????????1????????????????????????????????????\n000000???????????????????1010011->????????1????????????????????????????????????????????\n0000000??????????????????1010011->???????1?????????????????????????????????????????????\n??????????????????0??????1100011->?????11???????????????1????????1??????????????1??????\n?????????????????000?????1100?11->1????????????????????????????????????????????????????\n?????????????????000?????1100111->????1??11????????????1?1???1????????????????1????????\n?????????????????????????1101111->1???1??1?1???????????1?1?1?1??1?????????????1????????\n00000000000?0000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00000000000?00000000000001110011->1??????????????????????????????????????????????11????\n?????????????????001?????0001111->?????????????????????????????????????1???????????????\n000000????????????01?????0?10011->1??????????????????????1?????????????????????????????\n000000????????????01?????0010011->??????1??1????????????1????1????????????????11???????\n000000???????????001?????0010011->????????1????????????????????????????????????????????\n0000000???????????01?????0?11011->1???1???1?????????????11????????????????????11???????\n0000000???????????01?????0011011->???????????????????????????1?????????????????????????\n0000000??????????001?????0?11011->??????11?????????????????????????????????????????????\n0000000????????????1?????0110011->????????1????????????????????????????????????????????\n0000000???????????01?????0111011->?????????1???????????????????????????????????????????\n??????????????????01?????11?0011->1????????????????????????????????????????????????????\n?????????????????001?????11?0011->?????11??????????????????????????????????????????????\n?????????????????001?????1100011->?????????1???????????????????????????????????????????\n???????????????????1?????1110011->?????????????????1?????1???1????????????????????111?1\n?????????????????001?????1110011->???????11????????????????????????????????????????????\n??????????????????10?????00?0011->?????????1???????????????????????????????????????????\n?????????????????01??????0?00?11->1??????????11???????1????????????????????????????????\n?????????????????01??????0000?11->?????????1?????????????1???1?????1???????????????????\n?????????????????01??????0?00111->?1???????????????????????????????????????????????????\n?????????????????01??????0000111->????????????????????????1????????????????????????????\n?????????????????010?????0?00111->??1??????????????????????????????????????????????????\n??????????????????1??????0010011->1?????????????????????11???1????????????????11???????\n?????????????????01??????0010011->??????1??????????????????????????????????????????????\n?????????????????01??????0100?11->????????1???????????????????????1?1???????1??????????\n?????????????????01??????0100111->??????????1??1??????????????1????????????????????????\n???00????????????01??????0101111->1??1????11?11???????1??1??????????11???1????????11???\n000000????????????1??????0110011->?????1???????????????????????????????????????????????\n000000???????????010?????0110011->?????????1???????????????????????????????????????????\n??????????????????1??????1110011->1????????????????1?????1???1????????????????????1111?\n??????????????????10?????1110011->????????1????????????????????????????????????????????\n?????????????????010?????1110011->?????111?1???????????????????????????????????????????\n??????????????????11?????0010011->????????1????????????????????????????????????????????\n??????????????????11?????1110011->????1????????????????????????????????????????????????\n?????????????????100?????0010011->??????1??????????????????????????????????????????????\n000000???????????1???????0110011->?????1???????????????????????????????????????????????\n0000000??????????1?0?????0110011->???????1?????????????????????????????????????????????\n?????????????????1???????1100011->1????11???????????????1????????1??????????????1??????\n?????????????????1?0?????1100011->???????1?????????????????????????????????????????????\n0?0000???????????101?????0010011->1?????11??????????????11???1????????????????11???????\n0?00000??????????101?????0?11011->1???11????????????????11????????????????????11???????\n0?00000??????????101?????0011011->???????????????????????????1?????????????????????????\n0?00000??????????101?????011?011->1????1????????????????11????????????????????11???????\n0?00000??????????101?????0110011->???????11????????????????????????????????????????????\n000000???????????101?????011?011->?????1??1????????????????????????????????????????????\n0000000??????????1?1?????0110011->?????????1???????????????????????????????????????????\n0?00000??????????101?????0111011->?????????1???????????????????????????????????????????\n?????????????????1?1?????1100011->????????1????????????????????????????????????????????\n?????????????????1?1?????1110011->????1????1???????????????11??????????????????????????\n?????????????????11??????0010011->???????11????????????????????????????????????????????\n?????????????????11??????1100011->?????????1???????????????????????????????????????????\n?????????????????11??????1110011->????1???1????????????????11??????????????????????????\n0000001??????????????????0110011->????11???????????????????????????????????????????????\n0000001???????????00?????011?011->????11???????????????????????????????????????????????\n0000001??????????0???????0110011->???????1???????????1?????????????????????????????????\n0000001??????????000?????011?011->???????????????????1?????????????????????????????????\n?????01??????????????????100??11->????1????????????????????????????????????????????????\n?????01??????????????????1001011->???????1?????????????????????????????????????????????\n0000?01??????????????????1010011->??????1??????????????????????????????????????????????\n0000001??????????001?????0110011->?????????1???????????????????????????????????????????\n0000001??????????01??????0110011->????????1????????????????????????????????????????????\n0000001???????????11?????0110011->???????1?????????????????????????????????????????????\n0000001??????????1???????011?011->1?????????????????1????1?????????????????????????????\n0000001??????????1???????0110011->??????1??????????????????????????????????????????????\n0000001??????????1?0?????011?011->????111??1???????????????????????????????????????????\n0000001??????????10??????011?011->????1?1??????????????????????????????????????????????\n0000001??????????1?0?????0111011->???????1?????????????????????????????????????????????\n0000001??????????10??????0111011->???????1?????????????????????????????????????????????\n0000001??????????110?????011?011->????????1????????????????????????????????????????????\n0000001??????????111?????0111011->???1?????????????????????????????????????????????????\n000010???????????????????1010011->??????1??????????????????????????????????????????????\n000?1????????????01??????0101111->1??1????11?11???????1??1??????????11????1???????11???\n000?101??????????????????1010011->????????1????????????????????????????????????????????\n0000101??????????????????1010011->?????????1???????????????????????????????????????????\n00010??00000?????????????0101111->?????????1??????????1??????1?????1??????11???????1???\n0001?00??????????????????1010011->?????????1???????????????????????????????????????????\n000100???????????????????1010011->??????1??????????????????????????????????????????????\n00010??00000?????01??????0101111->1??????????11??????????1????????????????????????1????\n00?1000000100000000000000111???1->???11?1?1????????1???????1?1?????????????????????11??\n00?10000001000000000000001110011->1???????????????????????????????????????????????1????\n0001000001010000000000000111????->???11?1??1???????1???????1?1?????????????????????11??\n00010000010100000000000001110011->1???????????????????????????????????????????????1????\n0001?01??????????????????1010011->???????1?????????????????????????????????????????????\n0001001???????????????0001110011->??????????????????????????????????????1?1????????1???\n0001001??????????00???0001110011->??????1?1????????????????????????????????????????????\n0001001??????????000??0001110011->???11????1??????????1????????????????????????????????\n0001001??????????000000001110011->1??????????11???????????????????????????????????1????\n000110???????????????????1010011->????1??1???????1?????????????????????????????????????\n00011????????????01??????0101111->?????????????????????????????????????????11??????????\n?01000???????????0?0?????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?01000???????????00??????1010011->11?1??????1?1??????????1??1?1????????????????????????\n?010000??????????0?0?????1010011->??1??????????????????????????????????????????????????\n?010000??????????00??????1010011->??1??????????????????????????????????????????????????\n0010?0???????????00??????1010011->11?1??????1?1???1??????11?1?1????????????????????????\n0010?00??????????00??????1010011->??1??????????????????????????????????????????????????\n001000???????????0?0?????1010011->??????1?????????1???????1????????????????????????????\n001000???????????00??????1010011->??????1??????????????????????????????????????????????\n??100????????????01??????0101111->??????????????????????????????????????????1??????????\n?010001??????????0?0?????1010011->?????????1???????????????????????????????????????????\n?010001??????????00??????1010011->?????????1???????????????????????????????????????????\n0010?01??????????00??????1010011->?????????1???????????????????????????????????????????\n001010???????????00??????1010011->?????1?1?????????????????????????????????????????????\n0100000??????????000?????0110011->?????1???????????????????????????????????????????????\n0100000??????????000?????0111011->?????????1???????????????????????????????????????????\n?1?00????????????01??????0101111->?????????????????????????????????????????1???????????\n?10000000001?????????????1010011->1111??1?1?1?1??????????1??11?????????????????????????\n010000000001?????????????1010011->????????????????1???????1????????????????????????????\n?10000100000?????????????1010011->11?1??1?111?1??????????1??11?????????????????????????\n010000100000?????????????1010011->????????????????1???????1????????????????????????????\n010110?00000?????????????1010011->11?11?????1?1??1???????11?11?????????????????????????\n010110000000?????????????1010011->??1????111???????????????????????????????????????????\n010110100000?????????????1010011->??????1??????????????????????????????????????????????\n0111101100100000000000000111????->???11?1?1????????1???????1?1?????????????????????11??\n01111011001000000000000001110011->1???????????????????????????????????????????????1????\n1??00????????????01??????0101111->????????????????????????????????????????1????????????\n101000???????????0?0?????1010011->?????1???????1???????????????????????????????????????\n101000???????????00??????1010011->?????1???????1???????????????????????????????????????\n11??00?00000?????????????1010011->???1???????????????????????1?????????????????????????\n110?00?000???????????????1010011->11?1??11???????????????1???1?????????????????????????\n110?000000???????????????1010011->??1??????????????????????????????????????????????????\n110000?000???????????????1010011->????????1?1?11????????????1??????????????????????????\n110?001000???????????????1010011->?????????1???????????????????????????????????????????\n110100?000???????????????1010011->??????????????1?????????1????????????????????????????\n111?00?00000?????000?????1010011->11?????1???????????????1?????????????????????????????\n111?00000000?????000?????1010011->??1??????????????????????????????????????????????????\n111000?00000?????00??????1010011->11??????1?1?11?????????1??1??????????????????????????\n111000000000?????00??????1010011->??1??????????????????????????????????????????????????\n111000?00000?????001?????1010011->?????1???????????????????????????????????????????????\n111?00100000?????000?????1010011->?????????1???????????????????????????????????????????\n111000100000?????00??????1010011->?????????1???????????????????????????????????????????\n111100?00000?????000?????1010011->??????????????1?????????1????????????????????????????\n                                  00????????001??????????10????????????0?????????00????"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|IssueUnitCollapsing_1>count"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|IssueUnitCollapsing_2>count"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|RegisterReadDecode_2>rrd_cs_decoder_decoded",
    "truthTable": "0000001->0000001000001000010000000\n0000010->0000001000001000010010000\n0000011->0000001?????100000???0000\n0000100->0000100000001010010111000\n0000101->0000100000001000010001000\n0000110->0000100001111000010001000\n0000111->0000100001101000010001000\n0001000->0000100001001000010001000\n0001001->0000100011001000010001000\n0001010->0000100011101000010001000\n0001011->0000100000011000010001000\n0001100->0000100010111000010001000\n0001101->0000100001011000010001000\n0001110->000010000001100000???1000\n0001111->000010000000100000???1000\n0010000->000010001010100000???1000\n0010001->000010001100100000???1000\n0010010->000010001110100000???1000\n0010011->000010000111100000???1000\n0010100->000010000110100000???1000\n0010101->000010000100100000???1000\n0010110->000010001011100000???1000\n0010111->000010000101100000???1000\n0011000->0010100010101?????0100000\n0011001->0001100010101?????0100000\n0011010->0011100011001?????0100000\n0011011->0100100011101?????0100000\n0011100->0101100011001?????0100000\n0011101->0110100011101?????0100000\n0101011->0000100000000000010001000\n0101100->000010000000000000???1000\n0101101->000010001010000000???1000\n0101110->0000100000010000010001000\n0101111->000010000001000000???1000\n0110000->0000100010110000010001000\n0110001->000010001011000000???1000\n0110010->0000100001010000010001000\n0110011->000010000101000000???1000\n1000011->000000100000100010???0000\n1101011->0000001?????100000???0000\n         0000100000001????????0000",
    "minimizedTable": "000??0?->?????????????????1???????\n000?0?0->?????????????????1???????\n00000?1->????1?1??????????????????\n000001?->????1?1?????????????1????\n?000011->????1?1??????????????????\n00?0?11->?????????1???????????????\n00?0011->???????????1?????????????\n000?011->???????????1?????????????\n0000?11->??????????1??????????????\n0000011->???????11????????????????\n00?01??->?????????????????????1???\n00001??->?????????????????1???????\n0000100->??????????????1????11????\n000?110->???????????1?????????????\n000011?->?????????11??????????????\n0001???->?????????????????????1???\n00010?0->?????????1???????????????\n0?010?1->?????????????????1???????\n00?1001->????????1????????????????\n0001?01->?????????1???????????????\n00?1010->????????1????????????????\n0001010->??????????1??????????????\n0?01?11->?????????????????????1???\n0?011??->?????????????????????1???\n00?1100->????????1????????????????\n000110?->???????????1?????????????\n0001100->??????????1??????????????\n0?100??->?????????????????????1???\n0?1000?->????????1????????????????\n001????->???????????????????1?????\n001?000->??????????1??????????????\n0010??0->??????????1??????????????\n0010??1->?????????1???????????????\n0?1001?->?????????1???????????????\n001?01?->?????????1???????????????\n0010?10->????????1????????????????\n001?011->??????????1??????????????\n001?10?->?????????1???????????????\n001011?->???????????1?????????????\n0011?0?->????????1????????????????\n00110??->????????1????????????????\n00110?0->??1??????????????????????\n0011?01->??????????1??????????????\n0011001->???1?????????????????????\n0011010->???1?????????????????????\n0011011->?1???????????????????????\n001110?->?1???????????????????????\n0011100->???1?????????????????????\n0011101->??1??????????????????????\n0101?11->????????????1????????????\n01011??->????????????1????????????\n0101101->????????1?1??????????????\n010111?->???????????1?????????????\n0101110->?????????????????1???????\n01100??->???????????11????????????\n01100?0->?????????????????1???????\n011000?->??????????1??????????????\n10?????->????????????????1????????\n1101011->????1?111111?????????????\n         0000100000001????????0000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|RegisterReadDecode_3>rrd_cs_decoder_decoded",
    "truthTable": "0000001->0000001000001000010000000\n0000010->0000001000001000010010000\n0000011->0000001?????100000???0000\n0000100->0000100000001010010111000\n0000101->0000100000001000010001000\n0000110->0000100001111000010001000\n0000111->0000100001101000010001000\n0001000->0000100001001000010001000\n0001001->0000100011001000010001000\n0001010->0000100011101000010001000\n0001011->0000100000011000010001000\n0001100->0000100010111000010001000\n0001101->0000100001011000010001000\n0001110->000010000001100000???1000\n0001111->000010000000100000???1000\n0010000->000010001010100000???1000\n0010001->000010001100100000???1000\n0010010->000010001110100000???1000\n0010011->000010000111100000???1000\n0010100->000010000110100000???1000\n0010101->000010000100100000???1000\n0010110->000010001011100000???1000\n0010111->000010000101100000???1000\n0011000->0010100010101?????0100000\n0011001->0001100010101?????0100000\n0011010->0011100011001?????0100000\n0011011->0100100011101?????0100000\n0011100->0101100011001?????0100000\n0011101->0110100011101?????0100000\n0101011->0000100000000000010001000\n0101100->000010000000000000???1000\n0101101->000010001010000000???1000\n0101110->0000100000010000010001000\n0101111->000010000001000000???1000\n0110000->0000100010110000010001000\n0110001->000010001011000000???1000\n0110010->0000100001010000010001000\n0110011->000010000101000000???1000\n1000011->000000100000100010???0000\n1101011->0000001?????100000???0000\n         0000100000001????????0000",
    "minimizedTable": "000??0?->?????????????????1???????\n000?0?0->?????????????????1???????\n00000?1->????1?1??????????????????\n000001?->????1?1?????????????1????\n?000011->????1?1??????????????????\n00?0?11->?????????1???????????????\n00?0011->???????????1?????????????\n000?011->???????????1?????????????\n0000?11->??????????1??????????????\n0000011->???????11????????????????\n00?01??->?????????????????????1???\n00001??->?????????????????1???????\n0000100->??????????????1????11????\n000?110->???????????1?????????????\n000011?->?????????11??????????????\n0001???->?????????????????????1???\n00010?0->?????????1???????????????\n0?010?1->?????????????????1???????\n00?1001->????????1????????????????\n0001?01->?????????1???????????????\n00?1010->????????1????????????????\n0001010->??????????1??????????????\n0?01?11->?????????????????????1???\n0?011??->?????????????????????1???\n00?1100->????????1????????????????\n000110?->???????????1?????????????\n0001100->??????????1??????????????\n0?100??->?????????????????????1???\n0?1000?->????????1????????????????\n001????->???????????????????1?????\n001?000->??????????1??????????????\n0010??0->??????????1??????????????\n0010??1->?????????1???????????????\n0?1001?->?????????1???????????????\n001?01?->?????????1???????????????\n0010?10->????????1????????????????\n001?011->??????????1??????????????\n001?10?->?????????1???????????????\n001011?->???????????1?????????????\n0011?0?->????????1????????????????\n00110??->????????1????????????????\n00110?0->??1??????????????????????\n0011?01->??????????1??????????????\n0011001->???1?????????????????????\n0011010->???1?????????????????????\n0011011->?1???????????????????????\n001110?->?1???????????????????????\n0011100->???1?????????????????????\n0011101->??1??????????????????????\n0101?11->????????????1????????????\n01011??->????????????1????????????\n0101101->????????1?1??????????????\n010111?->???????????1?????????????\n0101110->?????????????????1???????\n01100??->???????????11????????????\n01100?0->?????????????????1???????\n011000?->??????????1??????????????\n10?????->????????????????1????????\n1101011->????1?111111?????????????\n         0000100000001????????0000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|RegisterReadDecode_4>rrd_cs_decoder_decoded",
    "truthTable": "0000100->0000100000001010010111000\n0000101->0000100000001000010001000\n0000110->0000100001111000010001000\n0000111->0000100001101000010001000\n0001000->0000100001001000010001000\n0001001->0000100011001000010001000\n0001010->0000100011101000010001000\n0001011->0000100000011000010001000\n0001100->0000100010111000010001000\n0001101->0000100001011000010001000\n0001110->000010000001100000???1000\n0001111->000010000000100000???1000\n0010000->000010001010100000???1000\n0010001->000010001100100000???1000\n0010010->000010001110100000???1000\n0010011->000010000111100000???1000\n0010100->000010000110100000???1000\n0010101->000010000100100000???1000\n0010110->000010001011100000???1000\n0010111->000010000101100000???1000\n0011000->0010100010101?????0100000\n0011001->0001100010101?????0100000\n0011010->0011100011001?????0100000\n0011011->0100100011101?????0100000\n0011100->0101100011001?????0100000\n0011101->0110100011101?????0100000\n0100101->0111100000001100111001000\n0100110->1000100000001100110001000\n0100111->0000100000001100010111000\n0101011->0000100000000000010001000\n0101100->000010000000000000???1000\n0101101->000010001010000000???1000\n0101110->0000100000010000010001000\n0101111->000010000001000000???1000\n0110000->0000100010110000010001000\n0110001->000010001011000000???1000\n0110010->0000100001010000010001000\n0110011->000010000101000000???1000\n1000100->0000100?????1????????1000\n1000101->0000100?????1????????1000\n1001100->0000100?????1????????1000\n1001101->0000100?????1????????1000\n         0000100000001????????0000",
    "minimizedTable": "000??0?->?????????????????1???????\n0000???->?????????????????1???????\n0?00??1->?????????????????1???????\n?00?10?->?????????????????????1???\n00?01??->?????????????????????1???\n0000100->??????????????1????11????\n0?0?1?1->?????????????????????1???\n0?0?11?->?????????????????????1???\n00?0110->???????????1?????????????\n000?110->???????????1?????????????\n000011?->?????????11??????????????\n0001???->?????????????????????1???\n00010??->?????????????????1???????\n00010?0->?????????1???????????????\n0?010?1->?????????????????1???????\n00?1001->????????1????????????????\n0001?01->?????????1???????????????\n00?1010->????????1????????????????\n0001010->??????????1??????????????\n0?01?11->?????????????????????1???\n0001011->???????????1?????????????\n?00110?->???????????1?????????????\n?001100->??????????1??????????????\n0?011??->?????????????????????1???\n00?1100->????????1????????????????\n0?100??->?????????????????????1???\n0?1000?->????????1????????????????\n001????->???????????????????1?????\n001?000->??????????1??????????????\n0010??0->??????????1??????????????\n0010??1->?????????1???????????????\n0?1001?->?????????1???????????????\n001?01?->?????????1???????????????\n0010?10->????????1????????????????\n001?011->??????????1??????????????\n0010?11->???????????1?????????????\n001?10?->?????????1???????????????\n0011?0?->????????1????????????????\n00110??->????????1????????????????\n00110?0->??1??????????????????????\n0011?01->??????????1??????????????\n0011001->???1?????????????????????\n0011010->???1?????????????????????\n0011011->?1???????????????????????\n001110?->?1???????????????????????\n0011100->???1?????????????????????\n0011101->??1??????????????????????\n0100???->?????????????1???????????\n010010?->????????????????1?1??????\n0100101->?111?????????????????????\n010?110->?????????????????1???????\n0100110->1???????????????1????????\n0100111->???????????????????11????\n0101?11->????????????1????????????\n01011??->????????????1????????????\n0101101->????????1?1??????????????\n010111?->???????????1?????????????\n01100??->???????????11????????????\n01100?0->?????????????????1???????\n011000?->??????????1??????????????\n100?10?->???????11111?????????????\n         0000100000001????????0000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|RegisterReadDecode_5>rrd_cs_decoder_decoded",
    "truthTable": "0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0011110->000010000001000100001101\n0011111->000010000001000100001110\n0100000->000010000001000100001111\n0100001->000010000001011000001101\n0100010->000010000001011000001110\n0100011->000010000001011000001111\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n1101001->000010000001011000000100\n1101010->000010000001011000000100\n         000010000001????????0000",
    "minimizedTable": "000??0?->????????????????1???????\n0000???->????????????????1???????\n000?1??->????????????????????1???\n0000100->?????????????1????11????\n00??11?->????????????????????1???\n00?0110->??????????1?????????????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010??->????????????????1???????\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0001011->??????????1?????????????\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n000110?->??????????1?????????????\n0001100->?????????1??????????????\n0?1000?->???????1????????????????\n001?000->?????????1??????????????\n0010???->????????????????????1???\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1001?->????????1???????????????\n001?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n0010?11->??????????1?????????????\n001?10?->????????1???????????????\n0011???->???????????????1????????\n0011?0?->???????1??????????1?????\n00110??->???????1??????????1?????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n001111?->?????????????????????1??\n0011110->???????????????????????1\n0011111->??????????????????????1?\n01?00??->????????????????????1???\n01000??->?????????????????????1??\n01000?0->??????????????????????1?\n010000?->???????????????????????1\n0100000->???????????????1????????\n01000?1->?????????????11????????1\n010001?->?????????????11???????1?\n0101?11->???????????1????????????\n01011??->???????????1????????????\n0101101->???????1?1??????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n1??????->?????????????11?????????\n1101001->?????????????????????1??\n1101010->?????????????????????1??\n         000010000001????????0000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|RegisterReadDecode_6>rrd_cs_decoder_decoded",
    "truthTable": "0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n0110100->00000100000100000???1000\n0110101->00000100001100000???1000\n0110110->00000100011100000???1000\n0110111->00000100010100000???1000\n0111000->00000100000000000???1000\n0111001->00000100100100000???1000\n0111010->00000100101100000???1000\n0111011->00000100110100000???1000\n0111100->00000100111100000???1000\n0111101->00000100100000000???1000\n0111110->00000100101000000???1000\n0111111->00000100110000000???1000\n1000000->00000100111000000???1000\n         000010000001????????0000",
    "minimizedTable": "000??0?->????????????????1???????\n0000???->????????????????1???????\n000?1??->????????????????????1???\n0000100->?????????????1????11????\n00?0110->??????????1?????????????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010??->????????????????1???????\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0001011->??????????1?????????????\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n000110?->??????????1?????????????\n0001100->?????????1??????????????\n0?10???->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n001?000->?????????1??????????????\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n0010?11->??????????1?????????????\n001?10?->????????1???????????????\n0011?0?->???????1????????????????\n00110??->???????1????????????????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n01?11?1->???????????1????????????\n0101101->???????1?1??????????????\n01?111?->???????????1????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n011????->????????????????????1???\n011?000->???????????1????????????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n0110?01->??????????1?????????????\n011??10->??????????1?????????????\n011?1??->????11??????????????????\n011011?->?????????1??????????????\n0111???->????11??????????????????\n0111??1->????????1???????????????\n0111?11->?????????1??????????????\n01111??->????????1???????????????\n01111?0->??????????1?????????????\n0111100->?????????1??????????????\n1000000->????11??1111????????1???\n         000010000001????????0000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|RegisterReadDecode_7>rrd_cs_decoder_decoded",
    "truthTable": "0000100->000010000001010010111000\n0000101->000010000001000010001000\n0000110->000010001111000010001000\n0000111->000010001101000010001000\n0001000->000010001001000010001000\n0001001->000010011001000010001000\n0001010->000010011101000010001000\n0001011->000010000011000010001000\n0001100->000010010111000010001000\n0001101->000010001011000010001000\n0001110->00001000001100000???1000\n0001111->00001000000100000???1000\n0010000->00001001010100000???1000\n0010001->00001001100100000???1000\n0010010->00001001110100000???1000\n0010011->00001000111100000???1000\n0010100->00001000110100000???1000\n0010101->00001000100100000???1000\n0010110->00001001011100000???1000\n0010111->00001000101100000???1000\n0011000->001010010101?????0100000\n0011001->000110010101?????0100000\n0011010->001110011001?????0100000\n0011011->010010011101?????0100000\n0011100->010110011001?????0100000\n0011101->011010011101?????0100000\n0101011->000010000000000010001000\n0101100->00001000000000000???1000\n0101101->00001001010000000???1000\n0101110->000010000010000010001000\n0101111->00001000001000000???1000\n0110000->000010010110000010001000\n0110001->00001001011000000???1000\n0110010->000010001010000010001000\n0110011->00001000101000000???1000\n0110100->00000100000100000???1000\n0110101->00000100001100000???1000\n0110110->00000100011100000???1000\n0110111->00000100010100000???1000\n0111000->00000100000000000???1000\n0111001->00000100100100000???1000\n0111010->00000100101100000???1000\n0111011->00000100110100000???1000\n0111100->00000100111100000???1000\n0111101->00000100100000000???1000\n0111110->00000100101000000???1000\n0111111->00000100110000000???1000\n1000000->00000100111000000???1000\n         000010000001????????0000",
    "minimizedTable": "000??0?->????????????????1???????\n0000???->????????????????1???????\n000?1??->????????????????????1???\n0000100->?????????????1????11????\n00?0110->??????????1?????????????\n000?110->??????????1?????????????\n000011?->????????11??????????????\n0001???->????????????????????1???\n00010??->????????????????1???????\n00010?0->????????1???????????????\n0?010?1->????????????????1???????\n00?1001->???????1????????????????\n0001?01->????????1???????????????\n00?1010->???????1????????????????\n0001010->?????????1??????????????\n0?01?11->????????????????????1???\n0001011->??????????1?????????????\n0?011??->????????????????????1???\n00?1100->???????1????????????????\n000110?->??????????1?????????????\n0001100->?????????1??????????????\n0?10???->????????????????????1???\n0?1000?->???????1????????????????\n001????->??????????????????1?????\n001?000->?????????1??????????????\n0010??0->?????????1??????????????\n0010??1->????????1???????????????\n0?1?01?->????????1???????????????\n0010?10->???????1????????????????\n001?011->?????????1??????????????\n0010?11->??????????1?????????????\n001?10?->????????1???????????????\n0011?0?->???????1????????????????\n00110??->???????1????????????????\n00110?0->??1?????????????????????\n0011?01->?????????1??????????????\n0011001->???1????????????????????\n0011010->???1????????????????????\n0011011->?1??????????????????????\n001110?->?1??????????????????????\n0011100->???1????????????????????\n0011101->??1?????????????????????\n0101?11->???????????1????????????\n01011??->???????????1????????????\n01?11?1->???????????1????????????\n0101101->???????1?1??????????????\n01?111?->???????????1????????????\n010111?->??????????1?????????????\n0101110->????????????????1???????\n011????->????????????????????1???\n011?000->???????????1????????????\n01100??->??????????11????????????\n01100?0->????????????????1???????\n011000?->?????????1??????????????\n0110?01->??????????1?????????????\n011??10->??????????1?????????????\n011?1??->????11??????????????????\n011011?->?????????1??????????????\n0111???->????11??????????????????\n0111??1->????????1???????????????\n0111?11->?????????1??????????????\n01111??->????????1???????????????\n01111?0->??????????1?????????????\n0111100->?????????1??????????????\n1000000->????11??1111????????1???\n         000010000001????????0000"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>decoded_addr_decoded_decoded",
    "truthTable": "000000000001->000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000010->000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000000000011->000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n000100000000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000\n000100000100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000\n000100000101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000\n000100000110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000\n000100001010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000\n000101000000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000\n000101000001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000\n000101000010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000\n000101000011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000\n000101000100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000\n000110000000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000\n001100000000->000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100000001->000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100000010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000\n001100000011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000\n001100000100->000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100000101->000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100000110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000\n001100001010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000\n001100100000->000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100011->000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100100->000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100101->000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100110->000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100100111->000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101000->000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101001->000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101010->000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101011->000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101100->000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101101->000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101110->000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100101111->000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110000->000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110001->000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110010->000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110011->000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110100->000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000\n001100110101->000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000\n001100110110->000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000\n001100110111->000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000\n001100111000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000\n001100111001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000\n001100111010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000\n001100111011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000\n001100111100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000\n001100111101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000\n001100111110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000\n001100111111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000\n001101000000->000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001101000001->000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001101000010->000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001101000011->000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001101000100->000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n001110100000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000\n001110100010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000\n001110110000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000\n001110110001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000\n001110110010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000\n001110110011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000\n001110110100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000\n001110110101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000\n001110110110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000\n001110110111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000\n001110111000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000\n001110111001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000\n001110111010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000\n001110111011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000\n001110111100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000\n001110111101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000\n001110111110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000\n001110111111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000\n011110100000->100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110100001->010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110100010->001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110100011->000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110110000->000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110110001->000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011110110010->000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n011111000001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000\n101100000000->000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000010->000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000011->000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000100->000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000101->000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000110->000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100000111->000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001000->000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001001->000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001010->000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001011->000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001100->000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001101->000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001110->000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100001111->000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010000->000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010001->000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010010->000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010011->000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000\n101100010100->000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000\n101100010101->000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000\n101100010110->000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000\n101100010111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000\n101100011000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000\n101100011001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000\n101100011010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000\n101100011011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000\n101100011100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000\n101100011101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000\n101100011110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000\n101100011111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000\n110000000000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000\n110000000010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000\n110000000011->000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000000100->000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000000101->000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000000110->000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000000111->000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001000->000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001001->000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001010->000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001011->000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001100->000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001101->000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001110->000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000001111->000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010000->000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010001->000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010010->000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010011->000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000\n110000010100->000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000\n110000010101->000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000\n110000010110->000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000\n110000010111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000\n110000011000->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000\n110000011001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000\n110000011010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000\n110000011011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000\n110000011100->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000\n110000011101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000\n110000011110->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000\n110000011111->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000\n111100010001->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010\n111100010010->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000\n111100010011->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100\n111100010100->000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n111100010101->000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\n              ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????",
    "minimizedTable": "00000000000?->?????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n000000000010->??????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n000000000011->???????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n0001000000??->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????\n000100000100->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????\n000100000101->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????\n00010000011?->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????\n000100001???->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????\n000101000000->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????\n000101000001->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????\n000101000010->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????\n000101000011->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????\n0001010001??->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????\n00011???????->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????\n001100000000->?????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100000001->????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100000010->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????\n001100000011->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????\n001100000100->????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100000101->??????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n00110000011?->??????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????\n001100001???->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????\n00110010000?->????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n00110010001?->???????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100100100->??????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100100101->?????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100100110->????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100100111->???????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101000->??????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101001->?????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101010->????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101011->???????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????\n001100101100->??????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????\n001100101101->?????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????\n001100101110->????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????\n001100101111->???????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????\n001100110000->??????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????\n001100110001->?????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????\n001100110010->????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????\n001100110011->???????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????\n001100110100->??????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????\n001100110101->?????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????\n001100110110->????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????\n001100110111->???????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????\n001100111000->??????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????\n001100111001->?????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????\n001100111010->????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????\n001100111011->???????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????\n001100111100->??????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????\n001100111101->?????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????\n001100111110->????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????\n001100111111->???????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????\n001101000000->?????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001101000001->??????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001101000010->????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n001101000011->???????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n0011010001??->???????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n00111010000?->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????\n00111010001?->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????\n001110110000->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????\n001110110001->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????\n001110110010->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????\n001110110011->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????\n001110110100->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????\n001110110101->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????\n001110110110->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????\n001110110111->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????\n001110111000->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????\n001110111001->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????\n001110111010->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????\n001110111011->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????\n001110111100->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????\n001110111101->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???????\n001110111110->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????\n001110111111->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????\n011110100000->1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110100001->?1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110100010->??1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110100011->???1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110110000->??????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011110110001->???????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n01111011001?->????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n011111??????->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????\n10110000000?->?????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000010->??????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000011->????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000100->???????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000101->??????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000110->?????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100000111->????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001000->???????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001001->??????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001010->?????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001011->????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????\n101100001100->???????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????\n101100001101->??????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????\n101100001110->?????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????\n101100001111->????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????\n101100010000->???????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????\n101100010001->??????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????\n101100010010->?????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????\n101100010011->????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????\n101100010100->???????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????\n101100010101->??????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????\n101100010110->?????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????\n101100010111->????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????\n101100011000->???????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????\n101100011001->??????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????\n101100011010->?????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????\n101100011011->????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????\n101100011100->???????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????\n101100011101->??????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????\n101100011110->?????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????\n101100011111->????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????\n11000000000?->???????????????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????\n110000000010->????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????\n110000000011->?????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000000100->????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000000101->???????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000000110->??????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000000111->?????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001000->????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001001->???????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001010->??????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001011->?????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????????????????\n110000001100->????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????????\n110000001101->???????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????????????????\n110000001110->??????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????\n110000001111->?????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????????????????\n110000010000->????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????\n110000010001->???????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????????????????\n110000010010->??????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????\n110000010011->?????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????????????????\n110000010100->????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????\n110000010101->???????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????????????????\n110000010110->??????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????\n110000010111->?????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????????????????\n110000011000->????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????\n110000011001->???????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????????????????\n110000011010->??????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????\n110000011011->?????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????????????????\n110000011100->????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????????????????????\n110000011101->???????????????????????????????????????????????????????????????????????????????????????????????????????1??????????????????????????????????????????????\n110000011110->??????????????????????????????????????????????????????????????????????????????????????????????????????????1???????????????????????????????????????????\n110000011111->?????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????????????????????????????????????\n11110001000?->????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?\n111100010010->??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1???\n111100010011->???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1??\n111100010100->?????????????1????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n111100010101->?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1\n              ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>decoded",
    "truthTable": "00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable": "000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>decoded_1",
    "truthTable": "00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable": "000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_0_fp_csr_plaOutput",
    "truthTable": "000000000001->1\n000000000010->1\n000000000011->1\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "0000????????->1\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_0_vector_csr_plaOutput",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "????????????->0\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_0_read_illegal_plaOutput",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->1\n011110110001->1\n011110110010->1\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "01111011????->1\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_0_read_illegal_plaOutput_1",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "????????????->0\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>decoded_2",
    "truthTable": "00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable": "000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_1_fp_csr_plaOutput",
    "truthTable": "000000000001->1\n000000000010->1\n000000000011->1\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "0000????????->1\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_1_vector_csr_plaOutput",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "????????????->0\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_1_read_illegal_plaOutput",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->1\n011110110001->1\n011110110010->1\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "01111011????->1\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_1_read_illegal_plaOutput_1",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "????????????->0\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>decoded_3",
    "truthTable": "00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable": "000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_2_fp_csr_plaOutput",
    "truthTable": "000000000001->1\n000000000010->1\n000000000011->1\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "0000????????->1\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_2_vector_csr_plaOutput",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "????????????->0\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_2_read_illegal_plaOutput",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->1\n011110110001->1\n011110110010->1\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "01111011????->1\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_2_read_illegal_plaOutput_1",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "????????????->0\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>decoded_4",
    "truthTable": "00000000000000000000000001110011->100000000\n00000000000100000000000001110011->010000000\n00010000001000000000000001110011->001000000\n00010000010100000000000001110011->000010000\n0001001??????????000000001110011->000001000\n00110000001000000000000001110011->001000000\n00110000010100000000000001110011->000100000\n01111011001000000000000001110011->001000000\n                                  ?????????",
    "minimizedTable": "000000000000????????????????????->1????????\n000000000001????????????????????->?1???????\n00?1000000?????????????????????1->??1??????\n0001000001??????????????????????->????1????\n0001001???????????????0001110011->?????1???\n0011000001??????????????????????->???1?????\n01??????????????????????????????->??1??????\n                                  ?????????"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_3_fp_csr_plaOutput",
    "truthTable": "000000000001->1\n000000000010->1\n000000000011->1\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "0000????????->1\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_3_vector_csr_plaOutput",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "????????????->0\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_3_read_illegal_plaOutput",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->1\n011110110001->1\n011110110010->1\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "01111011????->1\n              ?"
  },
  {
    "class": "chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target": "~TestHarness|CSRFile>io_decode_3_read_illegal_plaOutput_1",
    "truthTable": "000000000001->0\n000000000010->0\n000000000011->0\n000100000000->0\n000100000100->0\n000100000101->0\n000100000110->0\n000100001010->0\n000101000000->0\n000101000001->0\n000101000010->0\n000101000011->0\n000101000100->0\n000110000000->0\n001100000000->0\n001100000001->0\n001100000010->0\n001100000011->0\n001100000100->0\n001100000101->0\n001100000110->0\n001100001010->0\n001100100000->0\n001100100011->0\n001100100100->0\n001100100101->0\n001100100110->0\n001100100111->0\n001100101000->0\n001100101001->0\n001100101010->0\n001100101011->0\n001100101100->0\n001100101101->0\n001100101110->0\n001100101111->0\n001100110000->0\n001100110001->0\n001100110010->0\n001100110011->0\n001100110100->0\n001100110101->0\n001100110110->0\n001100110111->0\n001100111000->0\n001100111001->0\n001100111010->0\n001100111011->0\n001100111100->0\n001100111101->0\n001100111110->0\n001100111111->0\n001101000000->0\n001101000001->0\n001101000010->0\n001101000011->0\n001101000100->0\n001110100000->0\n001110100010->0\n001110110000->0\n001110110001->0\n001110110010->0\n001110110011->0\n001110110100->0\n001110110101->0\n001110110110->0\n001110110111->0\n001110111000->0\n001110111001->0\n001110111010->0\n001110111011->0\n001110111100->0\n001110111101->0\n001110111110->0\n001110111111->0\n011110100000->0\n011110100001->0\n011110100010->0\n011110100011->0\n011110110000->0\n011110110001->0\n011110110010->0\n011111000001->0\n101100000000->0\n101100000010->0\n101100000011->0\n101100000100->0\n101100000101->0\n101100000110->0\n101100000111->0\n101100001000->0\n101100001001->0\n101100001010->0\n101100001011->0\n101100001100->0\n101100001101->0\n101100001110->0\n101100001111->0\n101100010000->0\n101100010001->0\n101100010010->0\n101100010011->0\n101100010100->0\n101100010101->0\n101100010110->0\n101100010111->0\n101100011000->0\n101100011001->0\n101100011010->0\n101100011011->0\n101100011100->0\n101100011101->0\n101100011110->0\n101100011111->0\n110000000000->0\n110000000010->0\n110000000011->0\n110000000100->0\n110000000101->0\n110000000110->0\n110000000111->0\n110000001000->0\n110000001001->0\n110000001010->0\n110000001011->0\n110000001100->0\n110000001101->0\n110000001110->0\n110000001111->0\n110000010000->0\n110000010001->0\n110000010010->0\n110000010011->0\n110000010100->0\n110000010101->0\n110000010110->0\n110000010111->0\n110000011000->0\n110000011001->0\n110000011010->0\n110000011011->0\n110000011100->0\n110000011101->0\n110000011110->0\n110000011111->0\n111100010001->0\n111100010010->0\n111100010011->0\n111100010100->0\n111100010101->0\n              ?",
    "minimizedTable": "????????????->0\n              ?"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_brs[0]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_brs[1]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_brs[2]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_brs[3]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_jals[0]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_jals[1]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_jals[2]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_jals[3]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_jalrs[0]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_jalrs[1]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_jalrs[2]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_jalrs[3]"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_tsc_reg"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BoomCore>debug_irt_reg"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_load_incoming_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_stad_incoming_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_sta_incoming_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_std_incoming_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_sfence_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_release_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_hella_incoming_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_hella_wakeup_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_load_retry_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_sta_retry_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_load_wakeup_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_store_commit_0_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_load_incoming_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_stad_incoming_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_sta_incoming_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_std_incoming_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_sfence_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_release_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_hella_incoming_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_hella_wakeup_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_load_retry_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_sta_retry_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_load_wakeup_1_will_fire"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|LSU>will_fire_store_commit_1_will_fire"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.HierarchicalElementResetDomain"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.FixedClockBroadcast_1_1"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_84",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_85",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.IntXbar_i1_o1_1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.IntXbar_i1_o1_2"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.IntXbar_i1_o1_3"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|BundleBridgeNexus_UInt1_1>outputs_0"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_UInt32_1"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_86",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_87",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_88",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_89",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_90",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_91",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_92",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_93",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_94",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_95",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_96",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_97",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_98",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_99",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_100",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_101",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_102",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_103",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_TraceBundle"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.BundleBridgeNexus_TraceCoreInterface"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_104",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_105",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLXbar_i1_o1_a28d64s5k1z3u"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_106",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_107",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_108",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_109",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_110",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_111",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.TLBuffer_a29d64s11k1z2u"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_112",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_113",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_114",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_115",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_116",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_117",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_118",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_119",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_120",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_121",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_122",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_123",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_124",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_125",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroupParameterModifier"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroupParameterModifier_1"
  },
  {
    "class": "firrtl.passes.InlineAnnotation",
    "target": "TestHarness.ClockGroup_6"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_1",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.EICG_wrapper",
    "name": "EICG_wrapper.v",
    "text": "/* verilator lint_off UNOPTFLAT */\n\nmodule EICG_wrapper(\n  output out,\n  input en,\n  input test_en,\n  input in\n);\n\n  reg en_latched /*verilator clock_enable*/;\n\n  always @(*) begin\n     if (!in) begin\n        en_latched = en || test_en;\n     end\n  end\n\n  assign out = en_latched && in;\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_2",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_1",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_3",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_4",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_5",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_2",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_6",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_3",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_4",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_5",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_6",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_7",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_8",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_9",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_10",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_11",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_12",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_13",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_14",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_15",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_16",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_17",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_18",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_19",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_20",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_21",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_22",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_23",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_24",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_25",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_26",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_27",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_28",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_29",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_30",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_31",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_32",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_33",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_34",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_35",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_7",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_8",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_9",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_10",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_11",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_12",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_13",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_14",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_15",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_16",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_17",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_18",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_19",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_20",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_21",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_22",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_23",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_24",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_25",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_26",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_27",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_28",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_29",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_30",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_31",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_32",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_33",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_34",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_35",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_36",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_37",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_38",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_39",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalInIOCell_40",
    "name": "GenericDigitalInIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalInIOCell(\n    input pad,\n    output i,\n    input ie\n);\n\n    assign i = ie ? pad : 1'b0;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.GenericDigitalOutIOCell_36",
    "name": "GenericDigitalOutIOCell.v",
    "text": "\n`timescale 1ns/1ps\nmodule GenericDigitalOutIOCell(\n    output pad,\n    input o,\n    input oe\n);\n\n    assign pad = oe ? o : 1'bz;\n\nendmodule"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimUART",
    "name": "SimUART.v",
    "text": "`define DATA_WIDTH 8\n\nimport \"DPI-C\" function void uart_init(\n                                       input string filename,\n                                       input int    uartno,\n                                       input int    forcepty\n);\n\nimport \"DPI-C\" function void uart_tick\n(\n input int   uartno,\n input bit   serial_out_valid,\n output bit  serial_out_ready,\n input byte  serial_out_bits,\n\n output bit  serial_in_valid,\n input bit   serial_in_ready,\n output byte serial_in_bits\n);\n\nmodule SimUART #(UARTNO=0, FORCEPTY=0) (\n    input              clock,\n    input              reset,\n\n    input                    serial_out_valid,\n    output                   serial_out_ready,\n    input  [`DATA_WIDTH-1:0] serial_out_bits,\n\n    output                   serial_in_valid,\n    input                    serial_in_ready,\n    output [`DATA_WIDTH-1:0] serial_in_bits\n);\n\n   wire                      __in_ready;\n   bit                       __in_valid;\n   byte                      __in_bits;\n\n   bit                       __out_ready;\n   wire                      __out_valid;\n   wire [`DATA_WIDTH-1:0]    __out_bits;\n\n   string                    __uartlog;\n\n   initial begin\n      $value$plusargs(\"uartlog=%s\", __uartlog);\n      uart_init(__uartlog, UARTNO, FORCEPTY);\n   end\n\n   reg __in_valid_reg;\n   reg [`DATA_WIDTH-1:0] __in_bits_reg;\n\n   reg                   __out_ready_reg;\n\n\n   \n   // Evaluate the signals on the positive edge\n   always @(posedge clock) begin\n      if (reset) begin\n         __in_valid = 0;\n         __out_ready = 0;\n\n         __in_valid_reg <= 0;\n         __in_bits_reg <= 0;\n         __out_ready_reg <= 0;\n      end else begin\n         uart_tick(\n                   UARTNO,\n                   __out_valid,\n                   __out_ready,\n                   __out_bits,\n                   __in_valid,\n                   __in_ready,\n                   __in_bits\n                   );\n\n         __out_ready_reg <= __out_ready;\n         __in_valid_reg  <= __in_valid;\n         __in_bits_reg   <= __in_bits;\n      end\n   end // always @ (posedge clock)\n\n   assign serial_in_valid  = __in_valid_reg;\n   assign serial_in_bits   = __in_bits_reg;\n   assign __in_ready = serial_in_ready;\n\n   assign serial_out_ready = __out_ready_reg;\n   assign __out_valid = serial_out_valid;\n   assign __out_bits = serial_out_bits;\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimUART",
    "name": "SimUART.cc",
    "text": "#include <vpi_user.h>\n#include <svdpi.h>\n\n#include <stdio.h>\n#include <string.h>\n#include <map>\n\n#include \"uart.h\"\n\nstd::map<int, uart_t*> uarts;\n\nextern \"C\" void uart_init(\n        const char *filename,\n        int uartno,\n        int forcepty)\n{\n  bool use_pty = forcepty;\n  s_vpi_vlog_info vinfo;\n  if (!vpi_get_vlog_info(&vinfo))\n    abort();\n  for (int i = 1; i < vinfo.argc; i++) {\n    std::string arg(vinfo.argv[i]);\n    if (arg == \"+uart-pty\")\n      use_pty = true;\n  }\n  if (uarts.find(uartno) != uarts.end()) {\n    printf(\"Attempting to initialize multiple uarts with same uartno=%d, aborting\\n\", uartno);\n    abort();\n  }\n  if (strlen(filename) != 0)\n    uarts[uartno] = new uart_t(filename, uartno, use_pty);\n  else\n    uarts[uartno] = new uart_t(0, uartno, use_pty);\n}\n\nextern \"C\" void uart_tick(\n                          int uartno,\n                          unsigned char out_valid,\n                          unsigned char *out_ready,\n                          char out_bits,\n                          unsigned char *in_valid,\n                          unsigned char in_ready,\n                          char *in_bits)\n{\n  uart_t* uart = uarts[uartno];\n  if (uart == NULL) {\n    *out_ready = 0;\n    *in_valid = 0;\n    return;\n  }\n\n  uart->tick(\n             out_valid,\n             out_ready,\n             out_bits,\n\n             in_valid,\n             in_ready,\n             in_bits);\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimUART",
    "name": "uart.cc",
    "text": "//See LICENSE for license details\n\n#include \"uart.h\"\n#include <sys/stat.h>\n#include <fcntl.h>\n\n#define _XOPEN_SOURCE\n#include <stdlib.h>\n#include <stdio.h>\n\n#ifndef _WIN32\n#include <unistd.h>\n\n// name length limit for ptys\n#define PTYNAMELEN 256\n\n/* There is no \"backpressure\" to the user input for sigs. only one at a time\n * non-zero value represents unconsumed special char input.\n *\n * Reset to zero once consumed.\n */\n\n// This is fine for multiple UARTs because UARTs > uart 0 will use pty, not stdio\nchar specialchar = 0;\n\nvoid sighand(int s) {\n    switch (s) {\n        case SIGINT:\n            // ctrl-c\n            specialchar = 0x3;\n            break;\n        default:\n            specialchar = 0x0;\n    }\n}\n#else\n#warning \"The UARTAdapter is untested with Windows. Many features expected to be broken.\"\n#endif\n\nuart_t::uart_t(const char* filename_prefix, int uartno, bool use_pty)\n{\n    this->inputfd = 0;\n    this->outputfd = 0;\n    this->print_file = false;\n\n    if (uartno == 0 && !use_pty) {\n        // signal handler so ctrl-c doesn't kill simulation when UART is attached\n        // to stdin/stdout\n        struct sigaction sigIntHandler;\n        sigIntHandler.sa_handler = sighand;\n        sigemptyset(&sigIntHandler.sa_mask);\n        sigIntHandler.sa_flags = 0;\n        sigaction(SIGINT, &sigIntHandler, NULL);\n        if (filename_prefix)\n            printf(\"[UART] UART0 is here (stdin).\\n\");\n        else\n            printf(\"[UART] UART0 is here (stdin/stdout).\\n\");\n        this->inputfd = STDIN_FILENO;\n        this->outputfd = STDOUT_FILENO;\n    } else {\n        // for UARTs that are not UART0, use a PTY\n        char ptyname[PTYNAMELEN];\n        int ptyfd = posix_openpt(O_RDWR | O_NOCTTY);\n        grantpt(ptyfd);\n        unlockpt(ptyfd);\n        ptsname_r(ptyfd, ptyname, PTYNAMELEN);\n\n        // create symlink for reliable location to find uart pty\n        std::string symlinkname = std::string(\"uartpty\") + std::to_string(uartno);\n        // remove in case symlink already exists\n        remove(symlinkname.c_str());\n        if(symlink(ptyname, symlinkname.c_str())) {\n            printf(\"[UART_ERR] Failed to created symlink with ptyname %s to symlink name %s\\n\", ptyname, symlinkname.c_str());\n            exit(1);\n        }\n        printf(\"[UART] UART%d is on PTY: %s, symlinked at %s\\n\", uartno, ptyname, symlinkname.c_str());\n        printf(\"[UART] Attach to this UART with 'sudo screen %s' or 'sudo screen %s'\\n\", ptyname, symlinkname.c_str());\n        this->inputfd = ptyfd;\n        this->outputfd = ptyfd;\n    }\n\n    // if filename exists then put to file\n    if (filename_prefix) {\n        print_file = true;\n        std::string uartlogname = std::string(filename_prefix) + std::to_string(uartno);\n        printf(\"[UART] UART%d stdout being redirected to file: %s\\n\", uartno, uartlogname.c_str());\n        this->outputfd = open(uartlogname.c_str(), O_RDWR | O_CREAT, 0644);\n    }\n\n    // Don't block on reads if there is nothing typed in\n    fcntl(inputfd, F_SETFL, fcntl(inputfd, F_GETFL) | O_NONBLOCK);\n}\n\nuart_t::~uart_t() {\n    if (print_file)\n        close(this->outputfd);\n}\n\nvoid uart_t::tick(\n        unsigned char out_valid,\n        unsigned char *out_ready,\n        char out_bits,\n\n        unsigned char *in_valid,\n        unsigned char in_ready,\n        char *in_bits)\n{\n    *out_ready = true;\n    *in_valid = false;\n\n    if (in_ready) {\n        char inp;\n        int readamt;\n        if (specialchar) {\n            // send special character (e.g. ctrl-c)\n            // for stdin handling\n            //\n            // PTY should never trigger this\n            inp = specialchar;\n            specialchar = 0;\n            readamt = 1;\n        } else {\n            // else check if we have input\n            readamt = ::read(inputfd, &inp, 1);\n        }\n\n        if (readamt > 0) {\n            *in_bits = inp;\n            *in_valid = true;\n        }\n    }\n\n    if (*out_ready && out_valid) {\n        if (::write(outputfd, &out_bits, 1) == -1) {\n            printf(\"[UART_ERR] Failed to write to outputfd %d\\n\", outputfd);\n            exit(1);\n        }\n    }\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimUART",
    "name": "uart.h",
    "text": "#ifndef __SIMUART_H\n#define __SIMUART_H\n\n#include <signal.h>\n#include <string.h>\n#include <string>\n\nclass uart_t\n{\n    public:\n        uart_t(\n            const char* filename_prefix,\n            int uartno,\n            bool use_pty);\n        ~uart_t();\n        void tick(\n            unsigned char out_valid,\n            unsigned char *out_ready,\n            char out_bits,\n\n            unsigned char *in_valid,\n            unsigned char in_ready,\n            char *in_bits);\n\n    private:\n        bool print_file;\n        int inputfd;\n        int outputfd;\n};\n\n#endif // __SIMUART_H\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_126",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_127",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimDRAM",
    "name": "SimDRAM.v",
    "text": "import \"DPI-C\" function chandle memory_init\n(\n  input int chip_id,\n  input longint mem_size,\n  input longint word_size,\n  input longint line_size,\n  input longint id_bits,\n  input longint clock_hz,\n  input longint mem_base,\n  input int addr_bits\n);\n\nimport \"DPI-C\" function void memory_tick\n(\n  input chandle  channel,\n\n  input bit      reset,\n\n  input bit      ar_valid,\n  output bit     ar_ready,\n  input longint  ar_addr,\n  input int      ar_id,\n  input int      ar_size,\n  input int      ar_len,\n\n  input bit      aw_valid,\n  output bit     aw_ready,\n  input longint  aw_addr,\n  input int      aw_id,\n  input int      aw_size,\n  input int      aw_len,\n\n  input bit      w_valid,\n  output bit     w_ready,\n  input int      w_strb,\n  input byte     w_data[],\n  input bit      w_last,\n\n  output bit     r_valid,\n  input bit      r_ready,\n  output int     r_id,\n  output int     r_resp,\n  output byte    r_data[],\n  output bit     r_last,\n\n  output bit     b_valid,\n  input bit      b_ready,\n  output int     b_id,\n  output int     b_resp\n);\n\nmodule SimDRAM #(\n    parameter ADDR_BITS=32, DATA_BITS = 64, ID_BITS = 5,\n              MEM_SIZE = 1000 * 1000 * 1000,\n              LINE_SIZE = 64,\n              WORD_SIZE = DATA_BITS/8,\n              CLOCK_HZ = 100000,\n              STRB_BITS = DATA_BITS/8,\n              MEM_BASE = 0,\n              CHIP_ID = 0)(\n  input                  clock,\n  input                  reset,\n  output                 axi_aw_ready,\n  input                  axi_aw_valid,\n  input  [ADDR_BITS-1:0] axi_aw_bits_addr,\n  input  [7:0]           axi_aw_bits_len,\n  input  [2:0]           axi_aw_bits_size,\n  input  [1:0]           axi_aw_bits_burst,\n  input                  axi_aw_bits_lock,\n  input  [3:0]           axi_aw_bits_cache,\n  input  [2:0]           axi_aw_bits_prot,\n  input  [3:0]           axi_aw_bits_qos,\n  input  [ID_BITS-1:0]   axi_aw_bits_id,\n  output                 axi_w_ready,\n  input                  axi_w_valid,\n  input  [DATA_BITS-1:0] axi_w_bits_data,\n  input                  axi_w_bits_last,\n  input  [STRB_BITS-1:0] axi_w_bits_strb,\n  input                  axi_b_ready,\n  output                 axi_b_valid,\n  output [1:0]           axi_b_bits_resp,\n  output [ID_BITS-1:0]   axi_b_bits_id,\n  output                 axi_ar_ready,\n  input                  axi_ar_valid,\n  input  [ADDR_BITS-1:0] axi_ar_bits_addr,\n  input  [7:0]           axi_ar_bits_len,\n  input  [2:0]           axi_ar_bits_size,\n  input  [1:0]           axi_ar_bits_burst,\n  input                  axi_ar_bits_lock,\n  input  [3:0]           axi_ar_bits_cache,\n  input  [2:0]           axi_ar_bits_prot,\n  input  [3:0]           axi_ar_bits_qos,\n  input  [ID_BITS-1:0]   axi_ar_bits_id,\n  input                  axi_r_ready,\n  output                 axi_r_valid,\n  output [1:0]           axi_r_bits_resp,\n  output [DATA_BITS-1:0] axi_r_bits_data,\n  output                 axi_r_bits_last,\n  output [ID_BITS-1:0]   axi_r_bits_id\n);\n\n  reg initialized = 1'b0;\n  chandle channel;\n\n  wire __ar_valid;\n  wire [63:0] __ar_addr;\n  wire [31:0] __ar_id;\n  wire [31:0] __ar_size;\n  wire [31:0] __ar_len;\n\n  wire __aw_valid;\n  wire [63:0] __aw_addr;\n  wire [31:0] __aw_id;\n  wire [31:0] __aw_size;\n  wire [31:0] __aw_len;\n\n  wire __w_valid;\n  wire [31:0] __w_strb;\n  byte        __w_data[(DATA_BITS / 8)-1:0];\n  wire        __w_last;\n\n  wire __r_ready;\n  wire __b_ready;\n\n  bit __ar_ready;\n  bit __aw_ready;\n  bit __w_ready;\n  bit __r_valid;\n  int __r_id;\n  int __r_resp;\n  // bit [DATA_BITS-1:0] __r_data;\n  byte __r_data[(DATA_BITS / 8)-1:0];\n  bit __r_last;\n  bit __b_valid;\n  int __b_id;\n  int __b_resp;\n\n  reg __ar_ready_reg;\n  reg __aw_ready_reg;\n  reg __w_ready_reg;\n  reg __r_valid_reg;\n  reg [ID_BITS-1:0] __r_id_reg;\n  reg [1:0] __r_resp_reg;\n  reg [DATA_BITS-1:0] __r_data_bits;\n  reg [DATA_BITS-1:0] __r_data_reg;\n  reg __r_last_reg;\n  reg __b_valid_reg;\n  reg [ID_BITS-1:0] __b_id_reg;\n  reg [1:0] __b_resp_reg;\n\n  always @(posedge clock) begin\n    if (reset) begin\n      __ar_ready = 1'b0;\n      __aw_ready = 1'b0;\n      __w_ready  = 1'b0;\n      __r_valid  = 1'b0;\n      __b_valid  = 1'b0;\n\n      __ar_ready_reg <= 1'b0;\n      __aw_ready_reg <= 1'b0;\n      __w_ready_reg  <= 1'b0;\n      __r_valid_reg  <= 1'b0;\n      __b_valid_reg  <= 1'b0;\n    end else begin\n      if (!initialized) begin\n        channel = memory_init(CHIP_ID, MEM_SIZE, WORD_SIZE, LINE_SIZE, ID_BITS, CLOCK_HZ, MEM_BASE, ADDR_BITS);\n        initialized = 1'b1;\n      end\n\n      memory_tick(\n        channel,\n\n        reset,\n\n        __ar_valid,\n        __ar_ready,\n        __ar_addr,\n        __ar_id,\n        __ar_size,\n        __ar_len,\n\n        __aw_valid,\n        __aw_ready,\n        __aw_addr,\n        __aw_id,\n        __aw_size,\n        __aw_len,\n\n        __w_valid,\n        __w_ready,\n        __w_strb,\n        __w_data,\n        __w_last,\n\n        __r_valid,\n        __r_ready,\n        __r_id,\n        __r_resp,\n        __r_data,\n        __r_last,\n\n        __b_valid,\n        __b_ready,\n        __b_id,\n        __b_resp);\n\n        __ar_ready_reg <= __ar_ready;\n        __aw_ready_reg <= __aw_ready;\n        __w_ready_reg  <= __w_ready;\n\n        __r_valid_reg <= __r_valid;\n        __r_id_reg    <= __r_id[ID_BITS-1:0];\n        __r_resp_reg  <= __r_resp[1:0];\n        __r_last_reg  <= __r_last;\n        __r_data_bits = '0;\n        for (int i = 0; i < DATA_BITS / 8; i++) begin\n          __r_data_bits[i * 8 +: 8] = __r_data[i];\n        end\n        __r_data_reg  <= __r_data_bits;\n\n        __b_valid_reg <= __b_valid;\n        __b_id_reg    <= __b_id[ID_BITS-1:0];\n        __b_resp_reg  <= __b_resp[1:0];\n    end\n  end\n\n  /* verilator lint_off WIDTH */\n\n  assign __ar_valid = axi_ar_valid;\n  assign __ar_addr  = axi_ar_bits_addr;\n  assign __ar_id    = axi_ar_bits_id;\n  assign __ar_size  = axi_ar_bits_size;\n  assign __ar_len   = axi_ar_bits_len;\n\n  assign __aw_valid = axi_aw_valid;\n  assign __aw_addr  = axi_aw_bits_addr;\n  assign __aw_id    = axi_aw_bits_id;\n  assign __aw_size  = axi_aw_bits_size;\n  assign __aw_len   = axi_aw_bits_len;\n\n  assign __w_valid = axi_w_valid;\n  assign __w_strb  = axi_w_bits_strb;\n  assign __w_last  = axi_w_bits_last;\n\n  generate\n    for (genvar i = 0; i < DATA_BITS / 8; i++) begin\n      assign __w_data[i] = axi_w_bits_data[i * 8 +: 8];\n    end\n  endgenerate\n\n  assign __r_ready = axi_r_ready;\n  assign __b_ready = axi_b_ready;\n\n  assign axi_ar_ready = __ar_ready_reg;\n  assign axi_aw_ready = __aw_ready_reg;\n  assign axi_w_ready = __w_ready_reg;\n  assign axi_r_valid = __r_valid_reg;\n  assign axi_r_bits_id = __r_id_reg;\n  assign axi_r_bits_resp = __r_resp_reg;\n  assign axi_r_bits_data = __r_data_reg;\n  assign axi_r_bits_last = __r_last_reg;\n  assign axi_b_valid = __b_valid_reg;\n  assign axi_b_bits_id = __b_id_reg;\n  assign axi_b_bits_resp = __b_resp_reg;\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimDRAM",
    "name": "SimDRAM.cc",
    "text": "#include <vpi_user.h>\n#include <svdpi.h>\n#include <stdint.h>\n#include <cassert>\n#include <sys/mman.h>\n#include <fesvr/memif.h>\n#include <fesvr/elfloader.h>\n\n#include \"mm_dramsim2.h\"\n\nbool use_dramsim = false;\nstd::string ini_dir = \"dramsim2_ini\";\nstd::string loadmem_file = \"\";\nstd::vector<std::map<long long int, backing_data_t>> backing_mem_data = {};\n\n// TODO FIX: This doesn't properly handle striped memory across multiple channels\n// The full memory range is duplicated across each channel\nextern \"C\" void *memory_init(\n                             int chip_id,\n                             long long int mem_size,\n                             long long int word_size,\n                             long long int line_size,\n                             long long int id_bits,\n                             long long int clock_hz,\n                             long long int mem_base,\n                             int addr_bits\n\t\t\t     )\n{\n    // in xcelium, while mem_base is a 40b unsigned param, when passed into a long long int DPI variable it becomes signed.\n    // mask off the upper address bits (since we enforce that only address bits worth of address space is available).\n    uint64_t mem_base_mask = (1ULL << addr_bits) - 1;\n    mem_base &= mem_base_mask;\n\n    mm_t *mm;\n    s_vpi_vlog_info info;\n\n    std::string memory_ini = \"DDR3_micron_64M_8B_x4_sg15.ini\";\n    std::string system_ini = \"system.ini\";\n    std::string ini_dir = \"dramsim2_ini\";\n\n    if (!vpi_get_vlog_info(&info))\n      abort();\n\n    for (int i = 1; i < info.argc; i++) {\n      std::string arg(info.argv[i]);\n\n      if (arg == \"+dramsim\")\n        use_dramsim = true;\n      if (arg.find(\"+dramsim_ini_dir=\") == 0)\n        ini_dir = arg.substr(strlen(\"+dramsim_ini_dir=\"));\n      if (arg.find(\"+loadmem=\") == 0)\n        loadmem_file = arg.substr(strlen(\"+loadmem=\"));\n    }\n\n    while (chip_id >= backing_mem_data.size()) {\n      backing_mem_data.push_back(std::map<long long int, backing_data_t>());\n    }\n\n    if (backing_mem_data[chip_id].find(mem_base) != backing_mem_data[chip_id].end()) {\n      assert(backing_mem_data[chip_id][mem_base].size == mem_size);\n    } else {\n      uint8_t* data = (uint8_t*) mmap(NULL, mem_size, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_ANONYMOUS, -1, 0);\n\n      class loadmem_memif_t : public memif_t {\n      public:\n        loadmem_memif_t(uint8_t* _data, size_t _start) : memif_t(nullptr), data(_data), start(_start) {}\n        void write(addr_t taddr, size_t len, const void* src) override\n        {\n          addr_t addr = taddr - start;\n          memcpy(data + addr, src, len);\n        }\n        void read(addr_t taddr, size_t len, void* bytes) override {\n          assert(false);\n        }\n        endianness_t get_target_endianness() const override {\n          return endianness_little;\n        }\n      private:\n        uint8_t* data;\n        size_t start;\n      } loadmem_memif(data, mem_base);\n      if (loadmem_file != \"\") {\n        reg_t entry;\n        load_elf(loadmem_file.c_str(), &loadmem_memif, &entry, 0);\n      }\n\n      backing_mem_data[chip_id][mem_base] = {data, mem_size};\n    }\n\n    if (use_dramsim)\n      mm = (mm_t *) (new mm_dramsim2_t(mem_base, mem_size, word_size, line_size,\n                                       backing_mem_data[chip_id][mem_base],\n                                       memory_ini, system_ini, ini_dir,\n                                       1 << id_bits, clock_hz));\n    else\n      mm = (mm_t *) (new mm_magic_t(mem_base, mem_size, word_size, line_size,\n                                    backing_mem_data[chip_id][mem_base]));\n\n\n    return mm;\n}\n\nextern \"C\" void memory_tick(\n        void *channel,\n\n        unsigned char reset,\n\n        unsigned char ar_valid,\n        unsigned char *ar_ready,\n        long long int ar_addr,\n        int ar_id,\n        int ar_size,\n        int ar_len,\n\n        unsigned char aw_valid,\n        unsigned char *aw_ready,\n        long long int aw_addr,\n        int aw_id,\n        int aw_size,\n        int aw_len,\n\n        unsigned char w_valid,\n        unsigned char *w_ready,\n        int w_strb,\n        const svOpenArrayHandle w_data,\n        unsigned char w_last,\n\n        unsigned char *r_valid,\n        unsigned char r_ready,\n        int *r_id,\n        int *r_resp,\n        const svOpenArrayHandle r_data,\n        unsigned char *r_last,\n\n        unsigned char *b_valid,\n        unsigned char b_ready,\n        int *b_id,\n        int *b_resp)\n{\n    mm_t *mm = (mm_t *) channel;\n\n    int w_data_bytes = svSize(w_data, 1);\n    unsigned char *w_data_arr = (unsigned char *) malloc(w_data_bytes * sizeof(char));\n    for (int i = 0; i < w_data_bytes; i++) {\n        svGetBitArrElemVecVal((svBitVecVal *) (w_data_arr + i), w_data, i);\n    }\n\n    mm->tick(\n        reset,\n\n        ar_valid,\n        ar_addr,\n        ar_id,\n        ar_size,\n        ar_len,\n\n        aw_valid,\n        aw_addr,\n        aw_id,\n        aw_size,\n        aw_len,\n\n        w_valid,\n        w_strb,\n        w_data_arr,\n        w_last,\n\n        r_ready,\n        b_ready);\n\n    free(w_data_arr);\n\n    *ar_ready = mm->ar_ready();\n    *aw_ready = mm->aw_ready();\n    *w_ready = mm->w_ready();\n    *r_valid = mm->r_valid();\n    *r_id = mm->r_id();\n    *r_resp = mm->r_resp();\n\n    int r_data_bytes = svSize(r_data, 1);\n    #ifdef VERILATOR\n        for (int i = 0; i < r_data_bytes; i++) {\n            svPutBitArrElemVecVal(r_data, (const uint32_t *)(((char *) mm->r_data()) + i), i);\n        }\n    #else\n        for (int i = 0; i < r_data_bytes; i++) {\n            svPutBitArrElem(r_data, ((unsigned char *) mm->r_data())[i], i);\n        }\n    #endif\n\n    *r_last = mm->r_last();\n    *b_valid = mm->b_valid();\n    *b_id = mm->b_id();\n    *b_resp = mm->b_resp();\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimDRAM",
    "name": "mm.cc",
    "text": "// See LICENSE for license details.\n\n#include \"mm.h\"\n#include <iostream>\n#include <fstream>\n#include <cstdlib>\n#include <cstring>\n#include <cassert>\n#include <sys/mman.h>\n#include <fesvr/memif.h>\n#include <fesvr/elfloader.h>\n\nvoid mm_t::write(uint64_t faddr, uint8_t *data, uint64_t strb, uint64_t size)\n{\n  uint64_t addr = faddr - this->mem_base;\n  assert(addr < this->mem_size);\n  auto max_strb_bytes = sizeof(uint64_t) * 8;\n  assert(size <= max_strb_bytes); // Ensure the strb is wide enough to support the desired transaction\n  if (size != max_strb_bytes) {\n    strb &= (((uint64_t) (1ULL << size)) - 1ULL) << (uint64_t) (addr % word_size);\n  }\n\n  uint8_t *base = this->data + (addr / word_size) * word_size;\n  for (int i = 0; i < word_size; i++) {\n    if ((uint64_t) (strb & 1ULL))\n      base[i] = data[i];\n    strb >>= 1ULL;\n  }\n}\n\nstd::vector<char> mm_t::read(uint64_t faddr)\n{\n  uint64_t addr = faddr - this->mem_base;\n  assert(addr < this->mem_size);\n  uint8_t *base = this->data + addr;\n  return std::vector<char>(base, base + word_size);\n}\n\nmm_t::~mm_t()\n{\n  munmap(data, this->mem_size);\n}\n\nvoid mm_magic_t::tick(\n  bool reset,\n\n  bool ar_valid,\n  uint64_t ar_addr,\n  uint64_t ar_id,\n  uint64_t ar_size,\n  uint64_t ar_len,\n\n  bool aw_valid,\n  uint64_t aw_addr,\n  uint64_t aw_id,\n  uint64_t aw_size,\n  uint64_t aw_len,\n\n  bool w_valid,\n  uint64_t w_strb,\n  void *w_data,\n  bool w_last,\n\n  bool r_ready,\n  bool b_ready)\n{\n  bool ar_fire = !reset && ar_valid && ar_ready();\n  bool aw_fire = !reset && aw_valid && aw_ready();\n  bool w_fire  = !reset && w_valid && w_ready();\n  bool r_fire  = !reset && r_valid() && r_ready;\n  bool b_fire  = !reset && b_valid() && b_ready;\n\n  if (ar_fire) {\n    uint64_t start_addr = (ar_addr / word_size) * word_size;\n    for (int i = 0; i <= ar_len; i++) {\n      auto dat = read(start_addr + i * word_size);\n      rresp.push(mm_rresp_t(ar_id, dat, i == ar_len));\n    }\n  }\n\n  if (aw_fire) {\n    store_addr = aw_addr;\n    store_id = aw_id;\n    store_count = aw_len + 1;\n    store_size = 1 << aw_size;\n    store_inflight = true;\n  }\n\n  if (w_fire) {\n    write(store_addr, (uint8_t *) w_data, w_strb, store_size);\n    store_addr += store_size;\n    store_count--;\n\n    if (store_count == 0) {\n      store_inflight = false;\n      bresp.push(store_id);\n      assert(w_last);\n    }\n  }\n\n  if (b_fire)\n    bresp.pop();\n\n  if (r_fire)\n    rresp.pop();\n\n  cycle++;\n\n  if (reset) {\n    while (!bresp.empty()) bresp.pop();\n    while (!rresp.empty()) rresp.pop();\n    cycle = 0;\n  }\n}\n\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimDRAM",
    "name": "mm.h",
    "text": "// See LICENSE for license details.\n\n#ifndef MM_EMULATOR_H\n#define MM_EMULATOR_H\n\n#include <stdint.h>\n#include <cstring>\n#include <queue>\n#include <cassert>\n#include <fesvr/memif.h>\n\nstruct backing_data_t\n{\n  uint8_t* data;\n  size_t size;\n};\n\nclass mm_t\n{\n public:\n  mm_t(size_t mem_bs, size_t mem_sz, size_t word_sz, size_t line_sz, backing_data_t& dat) :\n    data(dat.data), mem_base(mem_bs), mem_size(mem_sz), word_size(word_sz), line_size(line_sz) {\n    assert(dat.size == mem_sz);\n  }\n\n  virtual bool ar_ready() = 0;\n  virtual bool aw_ready() = 0;\n  virtual bool w_ready() = 0;\n  virtual bool b_valid() = 0;\n  virtual uint64_t b_resp() = 0;\n  virtual uint64_t b_id() = 0;\n  virtual bool r_valid() = 0;\n  virtual uint64_t r_resp() = 0;\n  virtual uint64_t r_id() = 0;\n  virtual void *r_data() = 0;\n  virtual bool r_last() = 0;\n\n  virtual void tick\n  (\n    bool reset,\n\n    bool ar_valid,\n    uint64_t ar_addr,\n    uint64_t ar_id,\n    uint64_t ar_size,\n    uint64_t ar_len,\n\n    bool aw_valid,\n    uint64_t aw_addr,\n    uint64_t aw_id,\n    uint64_t aw_size,\n    uint64_t aw_len,\n\n    bool w_valid,\n    uint64_t w_strb,\n    void *w_data,\n    bool w_last,\n\n    bool r_ready,\n    bool b_ready\n  ) = 0;\n\n  virtual void* get_data() { return data; }\n  virtual size_t get_size() { return mem_size; }\n  virtual size_t get_base() { return mem_base; }\n  virtual size_t get_word_size() { return word_size; }\n  virtual size_t get_line_size() { return line_size; }\n\n  void write(uint64_t addr, uint8_t *data, uint64_t strb, uint64_t size);\n  std::vector<char> read(uint64_t addr);\n\n  virtual ~mm_t();\n  uint8_t* data;\n\n protected:\n  size_t mem_base;\n  size_t mem_size;\n  int word_size;\n  int line_size;\n};\n\nstruct mm_rresp_t\n{\n  uint64_t id;\n  std::vector<char> data;\n  bool last;\n\n  mm_rresp_t(uint64_t id, std::vector<char> data, bool last)\n  {\n    this->id = id;\n    this->data = data;\n    this->last = last;\n  }\n\n  mm_rresp_t()\n  {\n    this->id = 0;\n    this->last = false;\n  }\n};\n\nclass mm_magic_t : public mm_t\n{\n public:\n  mm_magic_t(size_t mem_base, size_t mem_sz, size_t word_sz, size_t line_sz, backing_data_t& dat) :\n    mm_t(mem_base, mem_sz, word_sz, line_sz, dat), store_inflight(false) {}\n\n  virtual bool ar_ready() { return true; }\n  virtual bool aw_ready() { return !store_inflight; }\n  virtual bool w_ready() { return store_inflight; }\n  virtual bool b_valid() { return !bresp.empty(); }\n  virtual uint64_t b_resp() { return 0; }\n  virtual uint64_t b_id() { return b_valid() ? bresp.front() : 0; }\n  virtual bool r_valid() { return !rresp.empty(); }\n  virtual uint64_t r_resp() { return 0; }\n  virtual uint64_t r_id() { return r_valid() ? rresp.front().id: 0; }\n  virtual void *r_data() { return r_valid() ? &rresp.front().data[0] : (void*) data; }\n  virtual bool r_last() { return r_valid() ? rresp.front().last : false; }\n\n  virtual void tick\n  (\n    bool reset,\n\n    bool ar_valid,\n    uint64_t ar_addr,\n    uint64_t ar_id,\n    uint64_t ar_size,\n    uint64_t ar_len,\n\n    bool aw_valid,\n    uint64_t aw_addr,\n    uint64_t aw_id,\n    uint64_t aw_size,\n    uint64_t aw_len,\n\n    bool w_valid,\n    uint64_t w_strb,\n    void *w_data,\n    bool w_last,\n\n    bool r_ready,\n    bool b_ready\n  );\n\n protected:\n  bool store_inflight;\n  uint64_t store_addr;\n  uint64_t store_id;\n  uint64_t store_size;\n  uint64_t store_count;\n  std::queue<uint64_t> bresp;\n\n  std::queue<mm_rresp_t> rresp;\n\n  uint64_t cycle;\n};\n\n#endif\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimDRAM",
    "name": "mm_dramsim2.cc",
    "text": "// See LICENSE for license details.\n\n#include \"mm_dramsim2.h\"\n#include \"mm.h\"\n#include <iostream>\n#include <fstream>\n#include <list>\n#include <queue>\n#include <cstring>\n#include <cstdlib>\n#include <cassert>\n\n//#define DEBUG_DRAMSIM2\n\nusing namespace DRAMSim;\n\nvoid mm_dramsim2_t::read_complete(unsigned id, uint64_t address, uint64_t clock_cycle)\n{\n  assert(!rreq[address].empty());\n  auto req = rreq[address].front();\n  uint64_t start_addr = (req.addr / word_size) * word_size;\n  for (size_t i = 0; i < req.len; i++) {\n    auto dat = read(start_addr + i * word_size);\n    rresp.push(mm_rresp_t(req.id, dat, (i == req.len - 1)));\n  }\n  read_id_busy[req.id] = false;\n  rreq[address].pop();\n}\n\nvoid mm_dramsim2_t::write_complete(unsigned id, uint64_t address, uint64_t clock_cycle)\n{\n  assert(!wreq[address].empty());\n  auto b_id = wreq[address].front();\n  bresp.push(b_id);\n  write_id_busy[b_id] = false;\n  wreq[address].pop();\n}\n\nvoid power_callback(double a, double b, double c, double d)\n{\n    //fprintf(stderr, \"power callback: %0.3f, %0.3f, %0.3f, %0.3f\\n\",a,b,c,d);\n}\n\n\nmm_dramsim2_t::mm_dramsim2_t(size_t mem_base, size_t mem_sz, size_t word_sz, size_t line_sz, backing_data_t& dat, std::string memory_ini, std::string system_ini, std::string ini_dir, int axi4_ids, size_t clock_hz) :\n  mm_t(mem_base, mem_sz, word_sz, line_sz, dat),\n  read_id_busy(axi4_ids, false),\n  write_id_busy(axi4_ids, false) {\n\n  assert(line_sz == 64); // assumed by dramsim2\n  assert(mem_sz % (1024*1024) == 0);\n  mem = getMemorySystemInstance(memory_ini, system_ini, ini_dir, \"results\", mem_size/(1024*1024));\n  mem->setCPUClockSpeed(clock_hz);\n  TransactionCompleteCB *read_cb = new Callback<mm_dramsim2_t, void, unsigned, uint64_t, uint64_t>(this, &mm_dramsim2_t::read_complete);\n  TransactionCompleteCB *write_cb = new Callback<mm_dramsim2_t, void, unsigned, uint64_t, uint64_t>(this, &mm_dramsim2_t::write_complete);\n  mem->RegisterCallbacks(read_cb, write_cb, power_callback);\n};\n\nbool mm_dramsim2_t::ar_ready() {\n  return mem->willAcceptTransaction();\n}\n\nbool mm_dramsim2_t::aw_ready() {\n  return mem->willAcceptTransaction() && !store_inflight;\n}\n\nvoid mm_dramsim2_t::tick(\n  bool reset,\n\n  bool ar_valid,\n  uint64_t ar_addr,\n  uint64_t ar_id,\n  uint64_t ar_size,\n  uint64_t ar_len,\n\n  bool aw_valid,\n  uint64_t aw_addr,\n  uint64_t aw_id,\n  uint64_t aw_size,\n  uint64_t aw_len,\n\n  bool w_valid,\n  uint64_t w_strb,\n  void *w_data,\n  bool w_last,\n\n  bool r_ready,\n  bool b_ready)\n{\n  bool ar_fire = !reset && ar_valid && ar_ready();\n  bool aw_fire = !reset && aw_valid && aw_ready();\n  bool w_fire = !reset && w_valid && w_ready();\n  bool r_fire = !reset && r_valid() && r_ready;\n  bool b_fire = !reset && b_valid() && b_ready;\n\n  if (mem->willAcceptTransaction()) {\n    for (auto it = rreq_queue.begin(); it != rreq_queue.end(); it++) {\n      if (!read_id_busy[it->id]) {\n        read_id_busy[it->id] = true;\n        auto transaction = *it;\n        rreq[transaction.addr].push(transaction);\n        mem->addTransaction(false, transaction.addr);\n        rreq_queue.erase(it);\n        break;\n      }\n    }\n  }\n\n  if (ar_fire) {\n    rreq_queue.push_back(mm_req_t(ar_id, 1 << ar_size, ar_len + 1, ar_addr));\n  }\n\n  if (aw_fire) {\n    store_addr = aw_addr;\n    store_id = aw_id;\n    store_count = aw_len + 1;\n    store_size = 1 << aw_size;\n    store_inflight = true;\n  }\n\n  if (w_fire) {\n    write(store_addr, (uint8_t*)w_data, w_strb, store_size);\n    store_addr += store_size;\n    store_count--;\n\n    if (store_count == 0) {\n      store_inflight = false;\n      mem->addTransaction(true, store_addr);\n      wreq[store_addr].push(store_id);\n      assert(w_last);\n    }\n  }\n\n  if (b_fire)\n    bresp.pop();\n\n  if (r_fire)\n    rresp.pop();\n\n  mem->update();\n  cycle++;\n\n  if (reset) {\n    while (!bresp.empty()) bresp.pop();\n    while (!rresp.empty()) rresp.pop();\n    cycle = 0;\n  }\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimDRAM",
    "name": "mm_dramsim2.h",
    "text": "// See LICENSE for license details.\n\n#ifndef _MM_EMULATOR_DRAMSIM2_H\n#define _MM_EMULATOR_DRAMSIM2_H\n\n#include \"mm.h\"\n#include <DRAMSim.h>\n#include <map>\n#include <queue>\n#include <list>\n#include <stdint.h>\n\nstruct mm_req_t {\n  uint64_t id;\n  uint64_t size;\n  uint64_t len;\n  uint64_t addr;\n\n  mm_req_t(uint64_t id, uint64_t size, uint64_t len, uint64_t addr)\n  {\n    this->id = id;\n    this->size = size;\n    this->len = len;\n    this->addr = addr;\n  }\n\n  mm_req_t()\n  {\n    this->id = 0;\n    this->size = 0;\n    this->len = 0;\n    this->addr = 0;\n  }\n};\n\nclass mm_dramsim2_t : public mm_t\n{\n public:\n  mm_dramsim2_t(size_t mem_base, size_t mem_sz, size_t word_sz, size_t line_sz, backing_data_t& dat, std::string memory_ini, std::string system_ini, std::string ini_dir, int axi4_ids, size_t clock_hz);\n\n  virtual bool ar_ready();\n  virtual bool aw_ready();\n  virtual bool w_ready() { return store_inflight; }\n  virtual bool b_valid() { return !bresp.empty(); }\n  virtual uint64_t b_resp() { return 0; }\n  virtual uint64_t b_id() { return b_valid() ? bresp.front() : 0; }\n  virtual bool r_valid() { return !rresp.empty(); }\n  virtual uint64_t r_resp() { return 0; }\n  virtual uint64_t r_id() { return r_valid() ? rresp.front().id: 0; }\n  virtual void *r_data() { return r_valid() ? (void*) &rresp.front().data[0] : data; }\n  virtual bool r_last() { return r_valid() ? rresp.front().last : false; }\n\n  virtual void tick\n  (\n    bool reset,\n\n    bool ar_valid,\n    uint64_t ar_addr,\n    uint64_t ar_id,\n    uint64_t ar_size,\n    uint64_t ar_len,\n\n    bool aw_valid,\n    uint64_t aw_addr,\n    uint64_t aw_id,\n    uint64_t aw_size,\n    uint64_t aw_len,\n\n    bool w_valid,\n    uint64_t w_strb,\n    void *w_data,\n    bool w_last,\n\n    bool r_ready,\n    bool b_ready\n  );\n\n\n protected:\n  DRAMSim::MultiChannelMemorySystem *mem;\n  uint64_t cycle;\n\n  bool store_inflight = false;\n  uint64_t store_addr;\n  uint64_t store_id;\n  uint64_t store_size;\n  uint64_t store_count;\n  std::queue<uint64_t> bresp;\n\n  // Keep a FIFO of IDs that made reads to an address since Dramsim2 doesn't\n  // track it. Reads or writes to the same address from different IDs can\n  // collide\n  std::map<uint64_t, std::queue<uint64_t>> wreq;\n  std::map<uint64_t, std::queue<mm_req_t>> rreq;\n  std::queue<mm_rresp_t> rresp;\n  //std::map<uint64_t, std::queue<mm_rresp_t> > rreq;\n\n\n  // Track inflight requests by putting indexes to their positions in the\n  // stimulus vector in queues for each AXI channel\n  std::vector<bool> read_id_busy;\n  std::vector<bool> write_id_busy;\n  std::list<mm_req_t> rreq_queue;\n\n  uint64_t clock_hz = 0;\n\n  void read_complete(unsigned id, uint64_t address, uint64_t clock_cycle);\n  void write_complete(unsigned id, uint64_t address, uint64_t clock_cycle);\n};\n\n#endif\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_128",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimJTAG",
    "name": "SimJTAG.v",
    "text": "// See LICENSE.SiFive for license details.\n//VCS coverage exclude_file\nimport \"DPI-C\" function int jtag_tick\n(\n output bit jtag_TCK,\n output bit jtag_TMS,\n output bit jtag_TDI,\n output bit jtag_TRSTn,\n \n input bit  jtag_TDO\n);\n\nmodule SimJTAG #(\n                 parameter TICK_DELAY = 50\n                 )(\n\n                   input         clock,\n                   input         reset,\n                   \n                   input         enable,\n                   input         init_done,\n\n                   output        jtag_TCK,\n                   output        jtag_TMS,\n                   output        jtag_TDI,\n                   output        jtag_TRSTn,\n \n                   input         jtag_TDO_data,\n                   input         jtag_TDO_driven,\n                          \n                   output [31:0] exit\n                   );\n\n   reg [31:0]                    tickCounterReg;\n   wire [31:0]                   tickCounterNxt;\n   \n   assign tickCounterNxt = (tickCounterReg == 0) ? TICK_DELAY :  (tickCounterReg - 1);\n   \n   bit          r_reset;\n\n   wire [31:0]  random_bits = $random;\n   \n   wire         #0.1 __jtag_TDO = jtag_TDO_driven ? \n                jtag_TDO_data : random_bits[0];\n      \n   bit          __jtag_TCK;\n   bit          __jtag_TMS;\n   bit          __jtag_TDI;\n   bit          __jtag_TRSTn;\n   int          __exit;\n\n   reg          init_done_sticky;\n   \n   assign #0.1 jtag_TCK   = __jtag_TCK;\n   assign #0.1 jtag_TMS   = __jtag_TMS;\n   assign #0.1 jtag_TDI   = __jtag_TDI;\n   assign #0.1 jtag_TRSTn = __jtag_TRSTn;\n   \n   assign #0.1 exit = __exit;\n\n   always @(posedge clock) begin\n      r_reset <= reset;\n      if (reset || r_reset) begin\n         __exit = 0;\n         tickCounterReg <= TICK_DELAY;\n         init_done_sticky <= 1'b0;\n         __jtag_TCK = !__jtag_TCK;\n      end else begin\n         init_done_sticky <= init_done | init_done_sticky;\n         if (enable && init_done_sticky) begin\n            tickCounterReg <= tickCounterNxt;\n            if (tickCounterReg == 0) begin\n               __exit = jtag_tick(\n                                  __jtag_TCK,\n                                  __jtag_TMS,\n                                  __jtag_TDI,\n                                  __jtag_TRSTn,\n                                  __jtag_TDO);\n            end\n         end // if (enable && init_done_sticky)\n      end // else: !if(reset || r_reset)\n   end // always @ (posedge clock)\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimJTAG",
    "name": "SimJTAG.cc",
    "text": "// See LICENSE.SiFive for license details.\n\n#include <cstdlib>\n#include \"remote_bitbang.h\"\n\nremote_bitbang_t* jtag;\nextern \"C\" int jtag_tick\n(\n unsigned char * jtag_TCK,\n unsigned char * jtag_TMS,\n unsigned char * jtag_TDI,\n unsigned char * jtag_TRSTn,\n unsigned char jtag_TDO\n)\n{\n  if (!jtag) {\n    // TODO: Pass in real port number\n    jtag = new remote_bitbang_t(0);\n  }\n\n  jtag->tick(jtag_TCK, jtag_TMS, jtag_TDI, jtag_TRSTn, jtag_TDO);\n\n  return jtag->done() ? (jtag->exit_code() << 1 | 1) : 0;\n\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimJTAG",
    "name": "remote_bitbang.h",
    "text": "// See LICENSE.Berkeley for license details.\n\n#ifndef REMOTE_BITBANG_H\n#define REMOTE_BITBANG_H\n\n#include <stdint.h>\n#include <sys/types.h>\n\nclass remote_bitbang_t\n{\npublic:\n  // Create a new server, listening for connections from localhost on the given\n  // port.\n  remote_bitbang_t(uint16_t port);\n\n  // Do a bit of work.\n  void tick(unsigned char * jtag_tck,\n            unsigned char * jtag_tms,\n            unsigned char * jtag_tdi,\n            unsigned char * jtag_trstn,\n            unsigned char jtag_tdo);\n\n  unsigned char done() {return quit;}\n  \n  int exit_code() {return err;}\n  \n private:\n\n  int err;\n  \n  unsigned char tck;\n  unsigned char tms;\n  unsigned char tdi;\n  unsigned char trstn;\n  unsigned char tdo;\n  unsigned char quit;\n    \n  int socket_fd;\n  int client_fd;\n\n  static const ssize_t buf_size = 64 * 1024;\n  char recv_buf[buf_size];\n  ssize_t recv_start, recv_end;\n\n  // Check for a client connecting, and accept if there is one.\n  void accept();\n  // Execute any commands the client has for us.\n  // But we only execute 1 because we need time for the\n  // simulation to run.\n  void execute_command();\n\n  // Reset. Currently does nothing.\n  void reset();\n\n  void set_pins(char _tck, char _tms, char _tdi);\n\n};\n\n#endif\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimJTAG",
    "name": "remote_bitbang.cc",
    "text": "// See LICENSE.Berkeley for license details.\n\n#include <arpa/inet.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n\n#include <algorithm>\n#include <cassert>\n#include <cstdio>\n#include <cstdlib>\n\n#include \"remote_bitbang.h\"\n\n/////////// remote_bitbang_t\n\nremote_bitbang_t::remote_bitbang_t(uint16_t port) :\n  socket_fd(0),\n  client_fd(0),\n  recv_start(0),\n  recv_end(0),\n  err(0)\n{\n  socket_fd = socket(AF_INET, SOCK_STREAM, 0);\n  if (socket_fd == -1) {\n    fprintf(stderr, \"remote_bitbang failed to make socket: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  fcntl(socket_fd, F_SETFL, O_NONBLOCK);\n  int reuseaddr = 1;\n  if (setsockopt(socket_fd, SOL_SOCKET, SO_REUSEADDR, &reuseaddr,\n                 sizeof(int)) == -1) {\n    fprintf(stderr, \"remote_bitbang failed setsockopt: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  struct sockaddr_in addr;\n  memset(&addr, 0, sizeof(addr));\n  addr.sin_family = AF_INET;\n  addr.sin_addr.s_addr = INADDR_ANY;\n  addr.sin_port = htons(port);\n\n  if (::bind(socket_fd, (struct sockaddr *) &addr, sizeof(addr)) == -1) {\n    fprintf(stderr, \"remote_bitbang failed to bind socket: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  if (listen(socket_fd, 1) == -1) {\n    fprintf(stderr, \"remote_bitbang failed to listen on socket: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  socklen_t addrlen = sizeof(addr);\n  if (getsockname(socket_fd, (struct sockaddr *) &addr, &addrlen) == -1) {\n    fprintf(stderr, \"remote_bitbang getsockname failed: %s (%d)\\n\",\n            strerror(errno), errno);\n    abort();\n  }\n\n  tck = 1;\n  tms = 1;\n  tdi = 1;\n  trstn = 1;\n  quit = 0;\n\n  fprintf(stderr, \"This emulator compiled with JTAG Remote Bitbang client. To enable, use +jtag_rbb_enable=1.\\n\");\n  fprintf(stderr, \"Listening on port %d\\n\",\n         ntohs(addr.sin_port));\n}\n\nvoid remote_bitbang_t::accept()\n{\n\n  fprintf(stderr,\"Attempting to accept client socket\\n\");\n  int again = 1;\n  while (again != 0) {\n    client_fd = ::accept(socket_fd, NULL, NULL);\n    if (client_fd == -1) {\n      if (errno == EAGAIN) {\n        // No client waiting to connect right now.\n      } else {\n        fprintf(stderr, \"failed to accept on socket: %s (%d)\\n\", strerror(errno),\n                errno);\n        again = 0;\n        abort();\n      }\n    } else {\n      fcntl(client_fd, F_SETFL, O_NONBLOCK);\n      fprintf(stderr, \"Accepted successfully.\");\n      again = 0;\n    }\n  }\n}\n\nvoid remote_bitbang_t::tick(\n                            unsigned char * jtag_tck,\n                            unsigned char * jtag_tms,\n                            unsigned char * jtag_tdi,\n                            unsigned char * jtag_trstn,\n                            unsigned char jtag_tdo\n                            )\n{\n  if (client_fd > 0) {\n    tdo = jtag_tdo;\n    execute_command();\n  } else {\n    this->accept();\n  }\n\n  * jtag_tck = tck;\n  * jtag_tms = tms;\n  * jtag_tdi = tdi;\n  * jtag_trstn = trstn;\n\n}\n\nvoid remote_bitbang_t::reset(){\n  //trstn = 0;\n}\n\nvoid remote_bitbang_t::set_pins(char _tck, char _tms, char _tdi){\n  tck = _tck;\n  tms = _tms;\n  tdi = _tdi;\n}\n\nvoid remote_bitbang_t::execute_command()\n{\n  char command;\n  int again = 1;\n  while (again) {\n    ssize_t num_read = read(client_fd, &command, sizeof(command));\n    if (num_read == -1) {\n      if (errno == EAGAIN) {\n        // We'll try again the next call.\n        //fprintf(stderr, \"Received no command. Will try again on the next call\\n\");\n      } else {\n        fprintf(stderr, \"remote_bitbang failed to read on socket: %s (%d)\\n\",\n                strerror(errno), errno);\n        again = 0;\n        abort();\n      }\n    } else if (num_read == 0) {\n      fprintf(stderr, \"No Command Received.\\n\");\n      again = 1;\n    } else {\n      again = 0;\n    }\n  }\n\n  //fprintf(stderr, \"Received a command %c\\n\", command);\n\n  int dosend = 0;\n\n  char tosend = '?';\n\n  switch (command) {\n  case 'B': /* fprintf(stderr, \"*BLINK*\\n\"); */ break;\n  case 'b': /* fprintf(stderr, \"_______\\n\"); */ break;\n  case 'r': reset(); break; // This is wrong. 'r' has other bits that indicated TRST and SRST.\n  case '0': set_pins(0, 0, 0); break;\n  case '1': set_pins(0, 0, 1); break;\n  case '2': set_pins(0, 1, 0); break;\n  case '3': set_pins(0, 1, 1); break;\n  case '4': set_pins(1, 0, 0); break;\n  case '5': set_pins(1, 0, 1); break;\n  case '6': set_pins(1, 1, 0); break;\n  case '7': set_pins(1, 1, 1); break;\n  case 'R': dosend = 1; tosend = tdo ? '1' : '0'; break;\n  case 'Q': quit = 1; break;\n  default:\n    fprintf(stderr, \"remote_bitbang got unsupported command '%c'\\n\",\n            command);\n  }\n\n  if (dosend){\n    while (1) {\n      ssize_t bytes = write(client_fd, &tosend, sizeof(tosend));\n      if (bytes == -1) {\n        fprintf(stderr, \"failed to write to socket: %s (%d)\\n\", strerror(errno), errno);\n        abort();\n      }\n      if (bytes > 0) {\n        break;\n      }\n    }\n  }\n\n  if (quit) {\n    // The remote disconnected.\n    fprintf(stderr, \"Remote end disconnected\\n\");\n    close(client_fd);\n    client_fd = 0;\n  }\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_129",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_130",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_131",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_132",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.plusarg_reader_133",
    "name": "plusarg_reader.v",
    "text": "// See LICENSE.SiFive for license details.\n\n//VCS coverage exclude_file\n\n// No default parameter values are intended, nor does IEEE 1800-2012 require them (clause A.2.4 param_assignment),\n// but Incisive demands them. These default values should never be used.\nmodule plusarg_reader #(\n   parameter FORMAT=\"borked=%d\",\n   parameter WIDTH=1,\n   parameter [WIDTH-1:0] DEFAULT=0\n) (\n   output [WIDTH-1:0] out\n);\n\n`ifdef SYNTHESIS\nassign out = DEFAULT;\n`else\nreg [WIDTH-1:0] myplus;\nassign out = myplus;\n\ninitial begin\n   if (!$value$plusargs(FORMAT, myplus)) myplus = DEFAULT;\nend\n`endif\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimTSI",
    "name": "SimTSI.v",
    "text": "import \"DPI-C\" function int tsi_tick\n(\n    input int  chip_id,\n    input bit  tsi_out_valid,\n    output bit tsi_out_ready,\n    input int  tsi_out_bits,\n\n    output bit tsi_in_valid,\n    input bit  tsi_in_ready,\n    output int tsi_in_bits\n);\n\nmodule SimTSI #(parameter CHIPID=0) (\n    input         clock,\n    input         reset,\n    input         tsi_out_valid,\n    output        tsi_out_ready,\n    input  [31:0] tsi_out_bits,\n\n    output        tsi_in_valid,\n    input         tsi_in_ready,\n    output [31:0] tsi_in_bits,\n\n    output [31:0] exit\n);\n\n    bit __in_valid;\n    bit __out_ready;\n    int __in_bits;\n    int __exit;\n\n    reg __in_valid_reg;\n    reg __out_ready_reg;\n    reg [31:0] __in_bits_reg;\n    reg [31:0] __exit_reg;\n\n    assign tsi_in_valid  = __in_valid_reg;\n    assign tsi_in_bits   = __in_bits_reg;\n    assign tsi_out_ready = __out_ready_reg;\n    assign exit = __exit_reg;\n\n    // Evaluate the signals on the positive edge\n    always @(posedge clock) begin\n        if (reset) begin\n            __in_valid = 0;\n            __out_ready = 0;\n            __exit = 0;\n\n            __in_valid_reg <= 0;\n            __in_bits_reg <= 0;\n            __out_ready_reg <= 0;\n            __exit_reg <= 0;\n        end else begin\n            __exit = tsi_tick(\n                CHIPID,\n                tsi_out_valid,\n                __out_ready,\n                tsi_out_bits,\n                __in_valid,\n                tsi_in_ready,\n                __in_bits\n            );\n\n            __out_ready_reg <= __out_ready;\n            __in_valid_reg  <= __in_valid;\n            __in_bits_reg   <= __in_bits;\n            __exit_reg <= __exit;\n        end\n    end\n\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimTSI",
    "name": "SimTSI.cc",
    "text": "#include <vpi_user.h>\n#include <svdpi.h>\n#include <map>\n#include <string>\n#include \"testchip_tsi.h\"\n\nstd::map<int, testchip_tsi_t*> tsis;\n\n// Remove VCS simv option from argv if it match pattern -X???=\nvoid remove_vcs_simv_opt(int & argc, char **& argv){\n    int idx = 0;\n    while(idx < argc){\n        std::string str = std::string(argv[idx]);\n        if(str.length() > 1 && str[0] == '-' && str[1] != '-' && str.find('=') != std::string::npos){\n            // Found -????=???? as VCS simv option\n            for(int i = idx; i < argc - 1; i++){\n                // Remove the current option\n                argv[i] = argv[i + 1];\n            }\n            argc--;\n        }else{\n            idx++;\n        }\n    }\n}\n\nextern \"C\" int tsi_tick(\n                        int chip_id,\n                        unsigned char out_valid,\n                        unsigned char *out_ready,\n                        int out_bits,\n\n                        unsigned char *in_valid,\n                        unsigned char in_ready,\n                        int *in_bits)\n{\n    bool out_fire = *out_ready && out_valid;\n    bool in_fire = *in_valid && in_ready;\n    bool in_free = !(*in_valid);\n\n    auto it = tsis.find(chip_id);\n\n    if (it == tsis.end()) {\n        s_vpi_vlog_info info;\n        if (!vpi_get_vlog_info(&info))\n          abort();\n\n        // Prevent simv option enter htif\n        remove_vcs_simv_opt(info.argc, info.argv);\n\n        // TODO: We should somehow inspect whether or not our backing memory supports loadmem, instead of unconditionally setting it to true\n        tsis[chip_id] = new testchip_tsi_t(info.argc, info.argv, true);\n    }\n\n    testchip_tsi_t* tsi = tsis[chip_id];\n    tsi->tick(out_valid, out_bits, in_ready);\n    tsi->switch_to_host();\n\n    *in_valid = tsi->in_valid();\n    *in_bits = tsi->in_bits();\n    *out_ready = tsi->out_ready();\n\n    return tsi->done() ? (tsi->exit_code() << 1 | 1) : 0;\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimTSI",
    "name": "testchip_htif.cc",
    "text": "#include \"testchip_htif.h\"\n\nvoid testchip_htif_t::parse_htif_args(std::vector<std::string> &args) {\n  for (auto& arg : args) {\n    if (arg.find(\"+init_write=0x\") == 0) {\n      auto d = arg.find(\":0x\");\n      if (d == std::string::npos) {\n        throw std::invalid_argument(\"Improperly formatted +init_write argument\");\n      }\n      uint64_t addr = strtoull(arg.substr(14, d - 14).c_str(), 0, 16);\n      uint32_t val = strtoull(arg.substr(d + 3).c_str(), 0, 16);\n      init_access_t access = { .address=addr, .stdata=val, .store=true };\n      init_accesses.push_back(access);\n    }\n    if (arg.find(\"+init_read=0x\") == 0) {\n      uint64_t addr = strtoull(arg.substr(13).c_str(), 0, 16);\n      init_access_t access = { .address=addr, .stdata=0, .store=false };\n      init_accesses.push_back(access);\n    }\n    if (arg.find(\"+no_hart0_msip\") == 0)\n      write_hart0_msip = false;\n  }\n}\n\nvoid testchip_htif_t::perform_init_accesses() {\n  for (auto p : init_accesses) {\n    if (p.store) {\n      fprintf(stderr, \"Writing %lx with %x\\n\", p.address, p.stdata);\n      write_chunk(p.address, sizeof(uint32_t), &p.stdata);\n      fprintf(stderr, \"Done writing %lx with %x\\n\", p.address, p.stdata);\n    } else {\n      fprintf(stderr, \"Reading %lx ...\", p.address);\n      uint32_t rdata = 0;\n      read_chunk(p.address, sizeof(uint32_t), &rdata);\n      fprintf(stderr, \" got %x\\n\", rdata);\n    }\n  }\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimTSI",
    "name": "testchip_htif.h",
    "text": "#ifndef __TESTCHIP_HTIF_H\n#define __TESTCHIP_HTIF_H\n\n#include <stdexcept>\n#include <stdint.h>\n#include <vector>\n#include <string>\n#include <fesvr/htif.h>\n\nstruct init_access_t {\n  uint64_t address;\n  uint32_t stdata;\n  bool store;\n};\n\nclass testchip_htif_t\n{\n public:\n  virtual void write_chunk(addr_t taddr, size_t nbytes, const void* src) = 0;\n  virtual void read_chunk(addr_t taddr, size_t nbytes, void* dst) = 0;\n  virtual ~testchip_htif_t() {};\n\n protected:\n  void perform_init_accesses();\n  void parse_htif_args(std::vector<std::string> &args);\n  bool write_hart0_msip = true;\n  std::vector<init_access_t> init_accesses;\n};\n#endif\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimTSI",
    "name": "testchip_tsi.cc",
    "text": "#include \"testchip_tsi.h\"\n#include <stdexcept>\n\ntestchip_tsi_t::testchip_tsi_t(int argc, char** argv, bool can_have_loadmem) : tsi_t(argc, argv)\n{\n  has_loadmem = false;\n  init_accesses = std::vector<init_access_t>();\n  write_hart0_msip = true;\n  is_loadmem = false;\n  cflush_addr = 0;\n  std::vector<std::string> args(argv + 1, argv + argc);\n  for (auto& arg : args) {\n    if (arg.find(\"+loadmem=\") == 0)\n      has_loadmem = can_have_loadmem;\n    if (arg.find(\"+cflush_addr=0x\") == 0)\n      cflush_addr = strtoull(arg.substr(15).c_str(), 0, 16);\n  }\n\n  testchip_htif_t::parse_htif_args(args);\n}\n\nvoid testchip_tsi_t::flush_cache_lines(addr_t taddr, size_t nbytes) {\n  if (!cflush_addr) return;\n  static size_t cblock_bytes = 64;\n  addr_t base = taddr & ~(cblock_bytes-1);\n  while (base < taddr + nbytes) {\n    uint32_t data[2] { (uint32_t)base, (uint32_t)(base >> 32) };\n    tsi_t::write_chunk(cflush_addr, 8, data);\n    base += cblock_bytes;\n  }\n}\n\nvoid testchip_tsi_t::write_chunk(addr_t taddr, size_t nbytes, const void* src)\n{\n  if (is_loadmem) {\n    load_mem_write(taddr, nbytes, src);\n  } else {\n    flush_cache_lines(taddr, nbytes);\n    tsi_t::write_chunk(taddr, nbytes, src);\n  }\n}\n\nvoid testchip_tsi_t::read_chunk(addr_t taddr, size_t nbytes, void* dst)\n{\n  if (is_loadmem) {\n    load_mem_read(taddr, nbytes, dst);\n  } else {\n    flush_cache_lines(taddr, nbytes);\n    tsi_t::read_chunk(taddr, nbytes, dst);\n  }\n}\n\nvoid testchip_tsi_t::reset()\n{\n  testchip_htif_t::perform_init_accesses();\n  if (write_hart0_msip)\n    tsi_t::reset();\n}\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.SimTSI",
    "name": "testchip_tsi.h",
    "text": "#ifndef __TESTCHIP_TSI_H\n#define __TESTCHIP_TSI_H\n\n#include <stdexcept>\n\n#include <fesvr/tsi.h>\n#include <fesvr/htif.h>\n#include \"testchip_htif.h\"\n\nclass testchip_tsi_t : public tsi_t, public testchip_htif_t\n{\n public:\n  testchip_tsi_t(int argc, char** argv, bool has_loadmem);\n  virtual ~testchip_tsi_t() {};\n\n  void write_chunk(addr_t taddr, size_t nbytes, const void* src) override;\n  void read_chunk(addr_t taddr, size_t nbytes, void* dst) override;\n  void load_program() {\n    switch_to_target();\n    is_loadmem = has_loadmem;\n    tsi_t::load_program();\n    is_loadmem = false;\n  }\n  void idle() { switch_to_target(); }\n\n protected:\n  virtual void load_mem_write(addr_t taddr, size_t nbytes, const void* src) { };\n  virtual void load_mem_read(addr_t taddr, size_t nbytes, void* dst) { };\n  void flush_cache_lines(addr_t taddr, size_t nbytes);\n  void reset() override;\n  bool has_loadmem;\n\n private:\n\n  bool is_loadmem;\n  addr_t cflush_addr;\n};\n#endif\n"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>uart_0.rxd"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>uart_0.txd"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.r.bits.last"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.r.bits.resp"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.r.bits.data"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.r.bits.id"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.r.valid"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.r.ready"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.qos"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.prot"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.cache"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.lock"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.burst"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.size"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.len"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.addr"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.bits.id"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.valid"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.ar.ready"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.b.bits.resp"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.b.bits.id"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.b.valid"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.b.ready"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.w.bits.last"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.w.bits.strb"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.w.bits.data"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.w.valid"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.w.ready"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.qos"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.prot"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.cache"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.lock"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.burst"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.size"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.len"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.addr"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.bits.id"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.valid"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.bits.aw.ready"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>axi4_mem_0.clock"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>custom_boot"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>jtag.reset"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>jtag.TDO"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>jtag.TDI"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>jtag.TMS"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>jtag.TCK"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>reset_io"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>clock_uncore"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>clock_tap"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>serial_tl_0.clock_in"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>serial_tl_0.out.bits.phit"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>serial_tl_0.out.valid"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>serial_tl_0.out.ready"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>serial_tl_0.in.bits.phit"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>serial_tl_0.in.valid"
  },
  {
    "class": "firrtl.transforms.DontTouchAnnotation",
    "target": "~TestHarness|ChipTop>serial_tl_0.in.ready"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.ClockSourceAtFreqMHz",
    "name": "ClockSourceAtFreqMHz.v",
    "text": "\nmodule ClockSourceAtFreqMHz #(parameter PERIOD=\"\") (\n    input power,\n    input gate,\n    output clk);\n  timeunit 1ns/1ps;\n  reg clk_i = 1'b0;\n  always #(PERIOD/2.0) clk_i = ~clk_i & (power & ~gate);\n  assign clk = clk_i;\nendmodule\n"
  },
  {
    "class": "firrtl.transforms.BlackBoxInlineAnno",
    "target": "TestHarness.ClockSourceAtFreqMHz_1",
    "name": "ClockSourceAtFreqMHz.v",
    "text": "\nmodule ClockSourceAtFreqMHz #(parameter PERIOD=\"\") (\n    input power,\n    input gate,\n    output clk);\n  timeunit 1ns/1ps;\n  reg clk_i = 1'b0;\n  always #(PERIOD/2.0) clk_i = ~clk_i & (power & ~gate);\n  assign clk = clk_i;\nendmodule\n"
  },
  {
    "class": "sifive.enterprise.firrtl.MarkDUTAnnotation",
    "target": "~TestHarness|ChipTop"
  },
  {
    "class": "sifive.enterprise.firrtl.TestHarnessHierarchyAnnotation",
    "filename": "/Users/michaeljao/chipyard/sims/verilator/generated-src/chipyard.harness.TestHarness.MegaBoomV3Config/model_module_hierarchy.json"
  },
  {
    "class": "sifive.enterprise.firrtl.ModuleHierarchyAnnotation",
    "filename": "/Users/michaeljao/chipyard/sims/verilator/generated-src/chipyard.harness.TestHarness.MegaBoomV3Config/top_module_hierarchy.json"
  }
]
